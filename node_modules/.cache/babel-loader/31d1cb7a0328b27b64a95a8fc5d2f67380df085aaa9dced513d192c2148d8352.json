{"ast":null,"code":"var _jsxFileName = \"D:\\\\realtime-code-editor\\\\client\\\\src\\\\pages\\\\EditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport Editor from '@monaco-editor/react';\nimport { io } from 'socket.io-client';\nimport FileSidebar from '../components/FileSidebar';\nimport '../styles/editor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction EditorPage() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const username = location.state && location.state.username || localStorage.getItem('username') || 'Guest';\n  const [files, setFiles] = useState({\n    'index.html': '<!-- HTML file -->\\n',\n    'style.css': '/* CSS file */\\n',\n    'script.js': '// JS file\\n'\n  });\n  const [activeFile, setActiveFile] = useState('index.html');\n  const editorRef = useRef(null);\n  const iframeRef = useRef(null);\n  useEffect(() => {\n    const fetchFiles = async () => {\n      try {\n        const res = await fetch(`http://localhost:5000/api/code/${roomId}`);\n        const data = await res.json();\n        console.log('MongoDB Response:', data);\n        if (Array.isArray(data) && data.length > 0) {\n          const validFiles = data.filter(file => file.filename && typeof file.content === 'string');\n          if (validFiles.length > 0) {\n            const fileMap = {};\n            validFiles.forEach(file => {\n              fileMap[file.filename] = file.content;\n            });\n            console.log(\"Setting files into editor:\", fileMap);\n            setFiles(fileMap);\n            setActiveFile(Object.keys(fileMap)[0] || 'index.html');\n            return;\n          }\n        }\n\n        // If no valid data, initialize defaults and save to DB\n        const defaultFiles = {\n          'index.html': '<!-- HTML file -->\\n',\n          'style.css': '/* CSS file */\\n',\n          'script.js': '// JS file\\n'\n        };\n        setFiles(defaultFiles);\n        for (const [filename, content] of Object.entries(defaultFiles)) {\n          await fetch('http://localhost:5000/api/code/save', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              roomId,\n              filename,\n              content\n            })\n          });\n        }\n      } catch (error) {\n        console.error('Error loading files:', error);\n      }\n    };\n    fetchFiles();\n    if (username) {\n      localStorage.setItem('username', username);\n      socket.emit('join-room', {\n        roomId,\n        username\n      });\n    }\n    socket.on('receive-code', ({\n      filePath,\n      code\n    }) => {\n      setFiles(prev => ({\n        ...prev,\n        [filePath]: code\n      }));\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [roomId, username]);\n  const handleCodeChange = value => {\n    setFiles(prev => ({\n      ...prev,\n      [activeFile]: value\n    }));\n    socket.emit('code-change', {\n      roomId,\n      filePath: activeFile,\n      code: value\n    });\n    fetch('http://localhost:5000/api/code/save', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        roomId,\n        filename: activeFile,\n        content: value\n      })\n    }).catch(err => console.error('Error saving file:', err));\n  };\n  const handleEditorMount = editor => {\n    editorRef.current = editor;\n  };\n  const handleRun = () => {\n    const html = files['index.html'] || '';\n    const css = files['style.css'] || '';\n    const js = files['script.js'] || '';\n    const combined = `\n      <html>\n        <head>\n          <style>${css}</style>\n        </head>\n        <body>\n          ${html}\n          <script>${js}</script>\n        </body>\n      </html>\n    `;\n    const blob = new Blob([combined], {\n      type: 'text/html'\n    });\n    const url = URL.createObjectURL(blob);\n    iframeRef.current.src = url;\n  };\n  const getLanguage = file => {\n    if (file.endsWith('.js')) return 'javascript';\n    if (file.endsWith('.html')) return 'html';\n    if (file.endsWith('.css')) return 'css';\n    return 'plaintext';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(FileSidebar, {\n        files: Object.keys(files),\n        activeFile: activeFile,\n        setActiveFile: setActiveFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Room:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), \" \", roomId, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Welcome, \", username, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"run-button\",\n          onClick: handleRun,\n          children: \"Run \\u25B6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        height: \"50vh\",\n        language: getLanguage(activeFile),\n        value: files[activeFile],\n        onChange: handleCodeChange,\n        onMount: handleEditorMount,\n        theme: \"vs-dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-panel\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          ref: iframeRef,\n          title: \"Output Preview\",\n          className: \"output-frame\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(EditorPage, \"ORgDFkCgo5sTuP5r1DCFG9Ex0Js=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = EditorPage;\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","useParams","Editor","io","FileSidebar","jsxDEV","_jsxDEV","socket","EditorPage","_s","roomId","location","username","state","localStorage","getItem","files","setFiles","activeFile","setActiveFile","editorRef","iframeRef","fetchFiles","res","fetch","data","json","console","log","Array","isArray","length","validFiles","filter","file","filename","content","fileMap","forEach","Object","keys","defaultFiles","entries","method","headers","body","JSON","stringify","error","setItem","emit","on","filePath","code","prev","disconnect","handleCodeChange","value","catch","err","handleEditorMount","editor","current","handleRun","html","css","js","combined","blob","Blob","type","url","URL","createObjectURL","src","getLanguage","endsWith","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","height","language","onChange","onMount","theme","ref","title","_c","$RefreshReg$"],"sources":["D:/realtime-code-editor/client/src/pages/EditorPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport Editor from '@monaco-editor/react';\r\nimport { io } from 'socket.io-client';\r\nimport FileSidebar from '../components/FileSidebar';\r\nimport '../styles/editor.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction EditorPage() {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n\r\n  const username =\r\n    (location.state && location.state.username) ||\r\n    localStorage.getItem('username') ||\r\n    'Guest';\r\n\r\n  const [files, setFiles] = useState({\r\n    'index.html': '<!-- HTML file -->\\n',\r\n    'style.css': '/* CSS file */\\n',\r\n    'script.js': '// JS file\\n',\r\n  });\r\n\r\n  const [activeFile, setActiveFile] = useState('index.html');\r\n  const editorRef = useRef(null);\r\n  const iframeRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchFiles = async () => {\r\n      try {\r\n        const res = await fetch(`http://localhost:5000/api/code/${roomId}`);\r\n        const data = await res.json();\r\n        console.log('MongoDB Response:', data);\r\n\r\n        if (Array.isArray(data) && data.length > 0) {\r\n          const validFiles = data.filter(\r\n            (file) => file.filename && typeof file.content === 'string'\r\n          );\r\n\r\n          if (validFiles.length > 0) {\r\n            const fileMap = {};\r\n            validFiles.forEach((file) => {\r\n              fileMap[file.filename] = file.content;\r\n            });\r\n            console.log(\"Setting files into editor:\", fileMap);\r\n            setFiles(fileMap);\r\n            setActiveFile(Object.keys(fileMap)[0] || 'index.html');\r\n\r\n            return;\r\n          }\r\n        }\r\n\r\n        // If no valid data, initialize defaults and save to DB\r\n        const defaultFiles = {\r\n          'index.html': '<!-- HTML file -->\\n',\r\n          'style.css': '/* CSS file */\\n',\r\n          'script.js': '// JS file\\n',\r\n        };\r\n        setFiles(defaultFiles);\r\n\r\n        for (const [filename, content] of Object.entries(defaultFiles)) {\r\n          await fetch('http://localhost:5000/api/code/save', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ roomId, filename, content }),\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading files:', error);\r\n      }\r\n    };\r\n\r\n    fetchFiles();\r\n\r\n    if (username) {\r\n      localStorage.setItem('username', username);\r\n      socket.emit('join-room', { roomId, username });\r\n    }\r\n\r\n    socket.on('receive-code', ({ filePath, code }) => {\r\n      setFiles((prev) => ({\r\n        ...prev,\r\n        [filePath]: code,\r\n      }));\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [roomId, username]);\r\n\r\n  const handleCodeChange = (value) => {\r\n    setFiles((prev) => ({ ...prev, [activeFile]: value }));\r\n\r\n    socket.emit('code-change', {\r\n      roomId,\r\n      filePath: activeFile,\r\n      code: value,\r\n    });\r\n\r\n    fetch('http://localhost:5000/api/code/save', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        roomId,\r\n        filename: activeFile,\r\n        content: value,\r\n      }),\r\n    }).catch((err) => console.error('Error saving file:', err));\r\n  };\r\n\r\n  const handleEditorMount = (editor) => {\r\n    editorRef.current = editor;\r\n  };\r\n\r\n  const handleRun = () => {\r\n    const html = files['index.html'] || '';\r\n    const css = files['style.css'] || '';\r\n    const js = files['script.js'] || '';\r\n\r\n    const combined = `\r\n      <html>\r\n        <head>\r\n          <style>${css}</style>\r\n        </head>\r\n        <body>\r\n          ${html}\r\n          <script>${js}</script>\r\n        </body>\r\n      </html>\r\n    `;\r\n\r\n    const blob = new Blob([combined], { type: 'text/html' });\r\n    const url = URL.createObjectURL(blob);\r\n    iframeRef.current.src = url;\r\n  };\r\n\r\n  const getLanguage = (file) => {\r\n    if (file.endsWith('.js')) return 'javascript';\r\n    if (file.endsWith('.html')) return 'html';\r\n    if (file.endsWith('.css')) return 'css';\r\n    return 'plaintext';\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor-wrapper\">\r\n      <div className=\"sidebar\">\r\n        <FileSidebar\r\n          files={Object.keys(files)}\r\n          activeFile={activeFile}\r\n          setActiveFile={setActiveFile}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"main-editor\">\r\n        <div className=\"editor-header\">\r\n          <div>\r\n            <strong>Room:</strong> {roomId}\r\n            <br />\r\n            <span>Welcome, {username}!</span>\r\n          </div>\r\n          <button className=\"run-button\" onClick={handleRun}>\r\n            Run ▶\r\n          </button>\r\n        </div>\r\n\r\n        <Editor\r\n          height=\"50vh\"\r\n          language={getLanguage(activeFile)}\r\n          value={files[activeFile]}\r\n          onChange={handleCodeChange}\r\n          onMount={handleEditorMount}\r\n          theme=\"vs-dark\"\r\n        />\r\n\r\n        <div className=\"output-panel\">\r\n          <iframe\r\n            ref={iframeRef}\r\n            title=\"Output Preview\"\r\n            className=\"output-frame\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditorPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}