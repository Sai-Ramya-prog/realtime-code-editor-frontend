{"ast":null,"code":"var _jsxFileName = \"D:\\\\realtime-code-editor\\\\client\\\\src\\\\pages\\\\EditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { useLocation, useParams, useNavigate, useBeforeUnload } from 'react-router-dom';\nimport Editor from '@monaco-editor/react';\nimport { io } from 'socket.io-client';\nimport FileSidebar from '../components/FileSidebar';\nimport '../styles/editor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditorPage() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const socketRef = useRef(null);\n  const initializedRef = useRef(false);\n  const currentUserRef = useRef(null);\n  const editorRef = useRef(null);\n  const iframeRef = useRef(null);\n  const isUpdatingFromSocket = useRef(false);\n  const lastChangeTimestamp = useRef(0);\n  const [username, setUsername] = useState('');\n  const [files, setFiles] = useState(null);\n  const [activeFile, setActiveFile] = useState('index.html');\n  const [connectionStatus, setConnectionStatus] = useState('Connecting...');\n  const [users, setUsers] = useState([]);\n  const [activeUsers, setActiveUsers] = useState({});\n  const [typingUsers, setTypingUsers] = useState({});\n  const [userCursors, setUserCursors] = useState({});\n  const [showNewFileModal, setShowNewFileModal] = useState(false);\n  const [showNewFolderModal, setShowNewFolderModal] = useState(false);\n  const [newFileName, setNewFileName] = useState('');\n  const [newFolderName, setNewFolderName] = useState('');\n  // Add to your existing state\n  const [fileTree, setFileTree] = useState(null);\n  // Colors for different users\n  const userColors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD', '#98D8C8'];\n  const getUserColor = userId => {\n    const index = Object.keys(activeUsers).indexOf(userId);\n    return userColors[index % userColors.length];\n  };\n\n  // Debounced save function\n  const debouncedSave = useCallback(debounce(async (roomId, filename, content) => {\n    try {\n      await fetch('http://localhost:5000/api/code/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomId,\n          filename,\n          content\n        })\n      });\n    } catch (err) {\n      console.error('Error saving file:', err);\n    }\n  }, 2000), []);\n  const loadFiles = async () => {\n    const {\n      files,\n      tree\n    } = await fetchFiles();\n    setFiles(files);\n    setFileTree(tree);\n    setActiveFile('index.html');\n  };\n  // Fetch files from backend\n  const fetchFiles = useCallback(async () => {\n    if (!roomId) return;\n    try {\n      const response = await fetch(`http://localhost:5000/api/code/${roomId}`);\n      if (!response.ok) {\n        if (response.status === 404) {\n          // Create default files structure\n          const defaultFiles = {\n            'index.html': '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>',\n            'style.css': '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}',\n            'script.js': '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");'\n          };\n\n          // Save default files to database\n          await Promise.all(Object.entries(defaultFiles).map(([filename, content]) => debouncedSave(roomId, filename, content)));\n\n          // Create default tree structure\n          const defaultTree = {\n            name: 'root',\n            type: 'folder',\n            path: '',\n            children: [{\n              name: 'index.html',\n              type: 'file',\n              path: 'index.html',\n              content: defaultFiles['index.html']\n            }, {\n              name: 'style.css',\n              type: 'file',\n              path: 'style.css',\n              content: defaultFiles['style.css']\n            }, {\n              name: 'script.js',\n              type: 'file',\n              path: 'script.js',\n              content: defaultFiles['script.js']\n            }]\n          };\n          return {\n            files: defaultFiles,\n            tree: defaultTree\n          };\n        }\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const {\n        files,\n        tree\n      } = await response.json();\n\n      // Ensure required files exist\n      const requiredFiles = ['index.html', 'style.css', 'script.js'];\n      const completeFiles = {\n        ...files\n      };\n      requiredFiles.forEach(file => {\n        if (!completeFiles[file]) {\n          completeFiles[file] = file.endsWith('.html') ? '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>' : file.endsWith('.css') ? '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}' : '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");';\n\n          // Add missing file to tree if it doesn't exist\n          if (!tree.children.some(child => child.name === file)) {\n            tree.children.push({\n              name: file,\n              type: 'file',\n              path: file,\n              content: completeFiles[file]\n            });\n          }\n        }\n      });\n      return {\n        files: completeFiles,\n        tree: tree\n      };\n    } catch (error) {\n      console.error('Error loading files:', error);\n\n      // Fallback to default structure\n      const defaultFiles = {\n        'index.html': '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>',\n        'style.css': '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}',\n        'script.js': '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");'\n      };\n      const defaultTree = {\n        name: 'root',\n        type: 'folder',\n        path: '',\n        children: [{\n          name: 'index.html',\n          type: 'file',\n          path: 'index.html',\n          content: defaultFiles['index.html']\n        }, {\n          name: 'style.css',\n          type: 'file',\n          path: 'style.css',\n          content: defaultFiles['style.css']\n        }, {\n          name: 'script.js',\n          type: 'file',\n          path: 'script.js',\n          content: defaultFiles['script.js']\n        }]\n      };\n      return {\n        files: defaultFiles,\n        tree: defaultTree\n      };\n    }\n  }, [roomId, debouncedSave]);\n  // Initialize socket connection\n  const initializeSocket = useCallback(filesData => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    const socket = io('http://localhost:5000', {\n      transports: ['websocket'],\n      upgrade: false,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      timeout: 10000\n    });\n    socket.on('connect', () => {\n      console.log('🟢 Connected to server');\n      setConnectionStatus('Connected');\n      currentUserRef.current = socket.id;\n      socket.emit('join-room', {\n        roomId,\n        username,\n        files: filesData\n      });\n    });\n    socket.on('disconnect', () => {\n      console.log('🔴 Disconnected from server');\n      setConnectionStatus('Disconnected');\n    });\n    socket.on('reconnect', () => {\n      console.log('🟡 Reconnected to server');\n      setConnectionStatus('Connected');\n      socket.emit('join-room', {\n        roomId,\n        username,\n        files: files\n      });\n    });\n    socket.on('room-state', ({\n      files: roomFiles,\n      users: roomUsers\n    }) => {\n      console.log('📋 Received room state:', {\n        files: Object.keys(roomFiles),\n        users: roomUsers.length\n      });\n      setFiles(roomFiles);\n      setUsers(roomUsers);\n    });\n\n    // socket.on('code-update', ({ filePath, code, sender, position, username: senderUsername }) => {\n    //   if (sender !== currentUserRef.current) {\n    //     console.log('📝 Code update from', senderUsername, 'for', filePath);\n\n    //     isUpdatingFromSocket.current = true;\n\n    //     setFiles(prev => {\n    //       const newFiles = { ...prev, [filePath]: code };\n\n    //       // Update editor content if it's the active file\n    //       if (filePath === activeFile && editorRef.current) {\n    //         const model = editorRef.current.getModel();\n    //         if (model && model.getValue() !== code) {\n    //           // Save current cursor position\n    //           const currentSelection = editorRef.current.getSelection();\n    //           const scrollInfo = editorRef.current.getScrollTop();\n\n    //           // Update content\n    //           model.setValue(code);\n\n    //           // Restore cursor position if it was the current user's cursor\n    //           if (currentSelection && !position) {\n    //             editorRef.current.setSelection(currentSelection);\n    //             editorRef.current.setScrollTop(scrollInfo);\n    //           }\n    //         }\n    //       }\n\n    //       return newFiles;\n    //     });\n\n    //     // Update user cursor position\n    //     if (position) {\n    //       setUserCursors(prev => ({\n    //         ...prev,\n    //         [sender]: { \n    //           ...prev[sender], \n    //           position, \n    //           activeFile: filePath,\n    //           username: senderUsername\n    //         }\n    //       }));\n    //     }\n\n    //     // Show typing indicator\n    //     if (filePath === activeFile) {\n    //       setTypingUsers(prev => ({\n    //         ...prev,\n    //         [sender]: { username: senderUsername, timestamp: Date.now() }\n    //       }));\n    //     }\n\n    //     setTimeout(() => {\n    //       isUpdatingFromSocket.current = false;\n    //     }, 100);\n    //   }\n    // });\n\n    socket.on('user-joined', ({\n      userId,\n      username: newUsername\n    }) => {\n      console.log('👤 User joined:', newUsername);\n      setUsers(prev => {\n        const exists = prev.find(u => u.id === userId);\n        if (!exists) {\n          return [...prev, {\n            id: userId,\n            username: newUsername\n          }];\n        }\n        return prev;\n      });\n    });\n    socket.on('user-left', ({\n      userId,\n      username: leftUsername\n    }) => {\n      console.log('👤 User left:', leftUsername);\n      setUsers(prev => prev.filter(u => u.id !== userId));\n      setActiveUsers(prev => {\n        const newActive = {\n          ...prev\n        };\n        delete newActive[userId];\n        return newActive;\n      });\n      setUserCursors(prev => {\n        const newCursors = {\n          ...prev\n        };\n        delete newCursors[userId];\n        return newCursors;\n      });\n      setTypingUsers(prev => {\n        const newTyping = {\n          ...prev\n        };\n        delete newTyping[userId];\n        return newTyping;\n      });\n    });\n    socket.on('cursor-position', ({\n      userId,\n      username: cursorUsername,\n      position,\n      activeFile: userActiveFile\n    }) => {\n      if (userId !== currentUserRef.current && userActiveFile === activeFile) {\n        setUserCursors(prev => ({\n          ...prev,\n          [userId]: {\n            position,\n            activeFile: userActiveFile,\n            username: cursorUsername,\n            timestamp: Date.now()\n          }\n        }));\n      }\n    });\n    socket.on('user-typing', ({\n      userId,\n      username: typingUsername,\n      filePath\n    }) => {\n      if (userId !== currentUserRef.current && filePath === activeFile) {\n        setTypingUsers(prev => ({\n          ...prev,\n          [userId]: {\n            username: typingUsername,\n            timestamp: Date.now()\n          }\n        }));\n      }\n    });\n    socketRef.current = socket;\n    return socket;\n  }, [username, roomId, activeFile, files]);\n\n  // Clear old typing indicators\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      setTypingUsers(prev => {\n        const updated = {\n          ...prev\n        };\n        Object.keys(updated).forEach(userId => {\n          if (now - updated[userId].timestamp > 3000) {\n            delete updated[userId];\n          }\n        });\n        return updated;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Main initialization effect\n  useEffect(() => {\n    if (!roomId) {\n      navigate('/room');\n      return;\n    }\n    if (initializedRef.current) return;\n    initializedRef.current = true;\n    const user = location.state && location.state.username || localStorage.getItem('username') || 'Guest';\n    setUsername(user);\n    const initialize = async () => {\n      try {\n        // 1. Fetch files - now returns { files, tree }\n        const {\n          files: filesData,\n          tree\n        } = await fetchFiles();\n\n        // 2. Set both states\n        setFiles(filesData);\n        setFileTree(tree); // Make sure you have this state: const [fileTree, setFileTree] = useState(null);\n\n        // 3. Initialize socket with the flat files data\n        initializeSocket(filesData);\n\n        // 4. Set username (unchanged)\n        localStorage.setItem('username', user);\n\n        // 5. Set default active file if needed\n        if (!activeFile) {\n          setActiveFile('index.html');\n        }\n      } catch (error) {\n        console.error('Initialization error:', error);\n        setConnectionStatus('Initialization failed');\n      }\n    };\n    initialize();\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [roomId, navigate, location.state, fetchFiles, initializeSocket]);\n\n  // Track cursor position more frequently\n  useEffect(() => {\n    var _socketRef$current;\n    if (!editorRef.current || !((_socketRef$current = socketRef.current) !== null && _socketRef$current !== void 0 && _socketRef$current.connected)) return;\n    const editor = editorRef.current;\n    const handleCursorChange = () => {\n      if (isUpdatingFromSocket.current) return;\n      const selection = editor.getSelection();\n      if (selection) {\n        const position = {\n          lineNumber: selection.positionLineNumber,\n          column: selection.positionColumn\n        };\n        socketRef.current.emit('cursor-position', {\n          roomId,\n          filePath: activeFile,\n          position,\n          username\n        });\n      }\n    };\n    const disposable = editor.onDidChangeCursorPosition(handleCursorChange);\n    return () => disposable.dispose();\n  }, [roomId, activeFile, username]);\n\n  // Handle code changes with real-time sync\n  const handleCodeChange = useCallback(value => {\n    if (!value) value = '';\n    if (isUpdatingFromSocket.current) return;\n    const timestamp = Date.now();\n    lastChangeTimestamp.current = timestamp;\n    setFiles(prev => {\n      if (prev[activeFile] !== value) {\n        var _socketRef$current2;\n        const newFiles = {\n          ...prev,\n          [activeFile]: value\n        };\n        if ((_socketRef$current2 = socketRef.current) !== null && _socketRef$current2 !== void 0 && _socketRef$current2.connected) {\n          var _editorRef$current;\n          const selection = (_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.getSelection();\n          const position = selection ? {\n            lineNumber: selection.positionLineNumber,\n            column: selection.positionColumn\n          } : null;\n\n          // Emit real-time changes\n          socketRef.current.emit('code-change', {\n            roomId,\n            filePath: activeFile,\n            code: value,\n            position,\n            timestamp,\n            username\n          });\n\n          // Emit typing indicator\n          socketRef.current.emit('user-typing', {\n            roomId,\n            filePath: activeFile,\n            username\n          });\n        }\n\n        // Debounced save to database\n        debouncedSave(roomId, activeFile, value);\n        return newFiles;\n      }\n      return prev;\n    });\n  }, [activeFile, roomId, debouncedSave, username]);\n  const handleAddFile = () => {\n    setShowNewFileModal(true);\n  };\n  const handleAddFolder = () => {\n    setShowNewFolderModal(true);\n  };\n  const createNewFile = () => {\n    var _socketRef$current3;\n    if (!newFileName) return;\n    const fileExt = newFileName.split('.').pop();\n    let defaultContent = '';\n    if (fileExt === 'html') {\n      defaultContent = '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>New File</title>\\n</head>\\n<body>\\n    \\n</body>\\n</html>';\n    } else if (fileExt === 'css') {\n      defaultContent = '/* Your CSS here */';\n    } else if (fileExt === 'js') {\n      defaultContent = '// Your JavaScript here';\n    }\n\n    // Update files state\n    const newFiles = {\n      ...files,\n      [newFileName]: defaultContent\n    };\n    setFiles(newFiles);\n\n    // Update tree state\n    setFileTree(prevTree => {\n      const newTree = {\n        ...prevTree\n      };\n      newTree.children.push({\n        name: newFileName,\n        type: 'file',\n        path: newFileName,\n        content: defaultContent\n      });\n      return newTree;\n    });\n    setActiveFile(newFileName);\n    setShowNewFileModal(false);\n    setNewFileName('');\n\n    // Save to backend\n    debouncedSave(roomId, newFileName, defaultContent);\n    if ((_socketRef$current3 = socketRef.current) !== null && _socketRef$current3 !== void 0 && _socketRef$current3.connected) {\n      socketRef.current.emit('code-change', {\n        roomId,\n        filePath: newFileName,\n        code: defaultContent,\n        username\n      });\n    }\n  };\n  const createNewFolder = () => {\n    if (!newFolderName) return;\n\n    // Update tree state\n    setFileTree(prevTree => {\n      const newTree = {\n        ...prevTree\n      };\n      newTree.children.push({\n        name: newFolderName,\n        type: 'folder',\n        path: `${newFolderName}/`,\n        children: []\n      });\n      return newTree;\n    });\n    setShowNewFolderModal(false);\n    setNewFolderName('');\n  };\n  // Handle running the code\n  const handleRun = () => {\n    if (!files || !iframeRef.current) return;\n    const html = files['index.html'] || '';\n    const css = files['style.css'] || '';\n    const js = files['script.js'] || '';\n    const combined = `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <style>${css}</style>\n        </head>\n        <body>\n          ${html}\n          <script>\n            // Error handling for iframe\n            window.onerror = function(msg, url, line, col, error) {\n              console.error('Error:', msg, 'at', line + ':' + col);\n              return false;\n            };\n            ${js}\n          </script>\n        </body>\n      </html>\n    `;\n    const blob = new Blob([combined], {\n      type: 'text/html'\n    });\n    const url = URL.createObjectURL(blob);\n    iframeRef.current.src = url;\n    setTimeout(() => URL.revokeObjectURL(url), 1000);\n  };\n\n  // Handle file switching\n  const handleFileSwitch = fileName => {\n    var _socketRef$current4;\n    setActiveFile(fileName);\n    if ((_socketRef$current4 = socketRef.current) !== null && _socketRef$current4 !== void 0 && _socketRef$current4.connected) {\n      socketRef.current.emit('file-switch', {\n        roomId,\n        filePath: fileName,\n        username\n      });\n    }\n  };\n\n  // Cleanup on page unload\n  useBeforeUnload(() => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n  });\n  const getLanguage = file => {\n    if (file.endsWith('.js')) return 'javascript';\n    if (file.endsWith('.html')) return 'html';\n    if (file.endsWith('.css')) return 'css';\n    return 'plaintext';\n  };\n  if (!files || !fileTree) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading collaborative editor...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status\",\n          children: connectionStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 7\n    }, this);\n  }\n  const typingUsersList = Object.values(typingUsers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collaboration-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Room:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 11\n        }, this), \" \", roomId, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 45\n        }, this), \" \", username, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `connection-status ${connectionStatus === 'Connected' ? 'connected' : 'disconnected'}`,\n          children: [\"\\u25CF \", connectionStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"online-users\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"users-label\",\n          children: [\"Online (\", users.length, \"):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-badge\",\n          style: {\n            backgroundColor: getUserColor(user.id)\n          },\n          children: [user.username, user.id === currentUserRef.current && ' (You)']\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, this), typingUsersList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"typing-dots\",\n          children: \"\\u25CF\\u25CF\\u25CF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 13\n        }, this), typingUsersList.map(t => t.username).join(', '), typingUsersList.length === 1 ? ' is' : ' are', \" typing in \", activeFile, \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: /*#__PURE__*/_jsxDEV(FileSidebar, {\n          tree: fileTree,\n          activeFile: activeFile,\n          setActiveFile: handleFileSwitch,\n          onAddFile: handleAddFile,\n          onAddFolder: handleAddFolder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: activeFile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-language\",\n              children: [\"(\", getLanguage(activeFile), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"run-button\",\n            onClick: handleRun,\n            children: \"\\u25B6 Run Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-container-with-cursors\",\n          children: [/*#__PURE__*/_jsxDEV(Editor, {\n            height: \"50vh\",\n            language: getLanguage(activeFile),\n            value: files[activeFile] || \"\",\n            onChange: handleCodeChange,\n            onMount: editor => {\n              editorRef.current = editor;\n              // Add cursor tracking\n              editor.onDidChangeCursorPosition(() => {\n                var _socketRef$current5;\n                if ((_socketRef$current5 = socketRef.current) !== null && _socketRef$current5 !== void 0 && _socketRef$current5.connected && !isUpdatingFromSocket.current) {\n                  const selection = editor.getSelection();\n                  if (selection) {\n                    const position = {\n                      lineNumber: selection.positionLineNumber,\n                      column: selection.positionColumn\n                    };\n                    socketRef.current.emit('cursor-position', {\n                      roomId,\n                      filePath: activeFile,\n                      position,\n                      username\n                    });\n                  }\n                }\n              });\n            },\n            theme: \"vs-dark\",\n            options: {\n              minimap: {\n                enabled: false\n              },\n              fontSize: 14,\n              wordWrap: 'on',\n              automaticLayout: true,\n              scrollBeyondLastLine: false,\n              renderWhitespace: 'selection',\n              smoothScrolling: true,\n              cursorBlinking: 'smooth',\n              cursorSmoothCaretAnimation: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 13\n          }, this), Object.entries(userCursors).map(([userId, cursor]) => {\n            var _cursor$position, _cursor$position2;\n            return cursor.activeFile === activeFile && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-cursor\",\n              style: {\n                position: 'absolute',\n                top: `${(((_cursor$position = cursor.position) === null || _cursor$position === void 0 ? void 0 : _cursor$position.lineNumber) || 0) * 18}px`,\n                left: `${(((_cursor$position2 = cursor.position) === null || _cursor$position2 === void 0 ? void 0 : _cursor$position2.column) || 0) * 8}px`,\n                borderLeft: `2px solid ${getUserColor(userId)}`,\n                height: '18px',\n                pointerEvents: 'none',\n                zIndex: 1000\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-cursor-label\",\n                style: {\n                  backgroundColor: getUserColor(userId),\n                  color: 'white',\n                  padding: '2px 6px',\n                  borderRadius: '3px',\n                  fontSize: '11px',\n                  position: 'absolute',\n                  top: '-20px',\n                  left: '0',\n                  whiteSpace: 'nowrap'\n                },\n                children: cursor.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 19\n              }, this)\n            }, userId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Output Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"refresh-output\",\n              onClick: handleRun,\n              children: \"\\uD83D\\uDD04 Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            ref: iframeRef,\n            title: \"Live Code Output\",\n            className: \"output-frame\",\n            sandbox: \"allow-scripts allow-same-origin allow-forms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 7\n    }, this), showNewFileModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"filename.html/.css/.js\",\n          value: newFileName,\n          onChange: e => setNewFileName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowNewFileModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createNewFile,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 9\n    }, this), showNewFolderModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Folder name\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowNewFolderModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createNewFolder,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 642,\n    columnNumber: 5\n  }, this);\n}\n_s(EditorPage, \"oDOZax4eRIAnyaQFiN0xirCywwM=\", false, function () {\n  return [useParams, useLocation, useNavigate, useBeforeUnload];\n});\n_c = EditorPage;\nfunction debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","useLocation","useParams","useNavigate","useBeforeUnload","Editor","io","FileSidebar","jsxDEV","_jsxDEV","EditorPage","_s","roomId","location","navigate","socketRef","initializedRef","currentUserRef","editorRef","iframeRef","isUpdatingFromSocket","lastChangeTimestamp","username","setUsername","files","setFiles","activeFile","setActiveFile","connectionStatus","setConnectionStatus","users","setUsers","activeUsers","setActiveUsers","typingUsers","setTypingUsers","userCursors","setUserCursors","showNewFileModal","setShowNewFileModal","showNewFolderModal","setShowNewFolderModal","newFileName","setNewFileName","newFolderName","setNewFolderName","fileTree","setFileTree","userColors","getUserColor","userId","index","Object","keys","indexOf","length","debouncedSave","debounce","filename","content","fetch","method","headers","body","JSON","stringify","err","console","error","loadFiles","tree","fetchFiles","response","ok","status","defaultFiles","Promise","all","entries","map","defaultTree","name","type","path","children","Error","json","requiredFiles","completeFiles","forEach","file","endsWith","some","child","push","initializeSocket","filesData","current","disconnect","socket","transports","upgrade","reconnectionAttempts","reconnectionDelay","timeout","on","log","id","emit","roomFiles","roomUsers","newUsername","prev","exists","find","u","leftUsername","filter","newActive","newCursors","newTyping","cursorUsername","position","userActiveFile","timestamp","Date","now","typingUsername","filePath","interval","setInterval","updated","clearInterval","user","state","localStorage","getItem","initialize","setItem","_socketRef$current","connected","editor","handleCursorChange","selection","getSelection","lineNumber","positionLineNumber","column","positionColumn","disposable","onDidChangeCursorPosition","dispose","handleCodeChange","value","_socketRef$current2","newFiles","_editorRef$current","code","handleAddFile","handleAddFolder","createNewFile","_socketRef$current3","fileExt","split","pop","defaultContent","prevTree","newTree","createNewFolder","handleRun","html","css","js","combined","blob","Blob","url","URL","createObjectURL","src","setTimeout","revokeObjectURL","handleFileSwitch","fileName","_socketRef$current4","getLanguage","className","_jsxFileName","columnNumber","typingUsersList","values","style","backgroundColor","t","join","onAddFile","onAddFolder","onClick","height","language","onChange","onMount","_socketRef$current5","theme","options","minimap","enabled","fontSize","wordWrap","automaticLayout","scrollBeyondLastLine","renderWhitespace","smoothScrolling","cursorBlinking","cursorSmoothCaretAnimation","cursor","_cursor$position","_cursor$position2","top","left","borderLeft","pointerEvents","zIndex","color","padding","borderRadius","whiteSpace","ref","title","sandbox","placeholder","e","target","_c","func","wait","executedFunction","args","later","clearTimeout","$RefreshReg$"],"sources":["D:/realtime-code-editor/client/src/pages/EditorPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { useLocation, useParams, useNavigate, useBeforeUnload } from 'react-router-dom';\r\nimport Editor from '@monaco-editor/react';\r\nimport { io } from 'socket.io-client';\r\nimport FileSidebar from '../components/FileSidebar';\r\nimport '../styles/editor.css';\r\n\r\nfunction EditorPage() {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const socketRef = useRef(null);\r\n  const initializedRef = useRef(false);\r\n  const currentUserRef = useRef(null);\r\n  const editorRef = useRef(null);\r\n  const iframeRef = useRef(null);\r\n  const isUpdatingFromSocket = useRef(false);\r\n  const lastChangeTimestamp = useRef(0);\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [files, setFiles] = useState(null);\r\n  const [activeFile, setActiveFile] = useState('index.html');\r\n  const [connectionStatus, setConnectionStatus] = useState('Connecting...');\r\n  const [users, setUsers] = useState([]);\r\n  const [activeUsers, setActiveUsers] = useState({});\r\n  const [typingUsers, setTypingUsers] = useState({});\r\n  const [userCursors, setUserCursors] = useState({});\r\nconst [showNewFileModal, setShowNewFileModal] = useState(false);\r\nconst [showNewFolderModal, setShowNewFolderModal] = useState(false);\r\nconst [newFileName, setNewFileName] = useState('');\r\nconst [newFolderName, setNewFolderName] = useState('');\r\n// Add to your existing state\r\nconst [fileTree, setFileTree] = useState(null);\r\n  // Colors for different users\r\n  const userColors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD', '#98D8C8'];\r\n  const getUserColor = (userId) => {\r\n    const index = Object.keys(activeUsers).indexOf(userId);\r\n    return userColors[index % userColors.length];\r\n  };\r\n\r\n  // Debounced save function\r\n  const debouncedSave = useCallback(\r\n    debounce(async (roomId, filename, content) => {\r\n      try {\r\n        await fetch('http://localhost:5000/api/code/save', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ roomId, filename, content }),\r\n        });\r\n      } catch (err) {\r\n        console.error('Error saving file:', err);\r\n      }\r\n    }, 2000),\r\n    []\r\n  );\r\nconst loadFiles = async () => {\r\n  const { files, tree } = await fetchFiles();\r\n  setFiles(files);\r\n  setFileTree(tree);\r\n  setActiveFile('index.html');\r\n};\r\n  // Fetch files from backend\r\n  const fetchFiles = useCallback(async () => {\r\n  if (!roomId) return;\r\n\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/api/code/${roomId}`);\r\n    \r\n    if (!response.ok) {\r\n      if (response.status === 404) {\r\n        // Create default files structure\r\n        const defaultFiles = {\r\n          'index.html': '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>',\r\n          'style.css': '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}',\r\n          'script.js': '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");'\r\n        };\r\n\r\n        // Save default files to database\r\n        await Promise.all(\r\n          Object.entries(defaultFiles).map(([filename, content]) =>\r\n            debouncedSave(roomId, filename, content)\r\n        ));\r\n\r\n        // Create default tree structure\r\n        const defaultTree = {\r\n          name: 'root',\r\n          type: 'folder',\r\n          path: '',\r\n          children: [\r\n            {\r\n              name: 'index.html',\r\n              type: 'file',\r\n              path: 'index.html',\r\n              content: defaultFiles['index.html']\r\n            },\r\n            {\r\n              name: 'style.css',\r\n              type: 'file',\r\n              path: 'style.css',\r\n              content: defaultFiles['style.css']\r\n            },\r\n            {\r\n              name: 'script.js',\r\n              type: 'file',\r\n              path: 'script.js',\r\n              content: defaultFiles['script.js']\r\n            }\r\n          ]\r\n        };\r\n\r\n        return {\r\n          files: defaultFiles,\r\n          tree: defaultTree\r\n        };\r\n      }\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    \r\n    const { files, tree } = await response.json();\r\n    \r\n    // Ensure required files exist\r\n    const requiredFiles = ['index.html', 'style.css', 'script.js'];\r\n    const completeFiles = { ...files };\r\n    \r\n    requiredFiles.forEach(file => {\r\n      if (!completeFiles[file]) {\r\n        completeFiles[file] = file.endsWith('.html') ? \r\n          '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>' :\r\n          file.endsWith('.css') ? \r\n          '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}' :\r\n          '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");';\r\n        \r\n        // Add missing file to tree if it doesn't exist\r\n        if (!tree.children.some(child => child.name === file)) {\r\n          tree.children.push({\r\n            name: file,\r\n            type: 'file',\r\n            path: file,\r\n            content: completeFiles[file]\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return {\r\n      files: completeFiles,\r\n      tree: tree\r\n    };\r\n  } catch (error) {\r\n    console.error('Error loading files:', error);\r\n    \r\n    // Fallback to default structure\r\n    const defaultFiles = {\r\n      'index.html': '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>',\r\n      'style.css': '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}',\r\n      'script.js': '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");'\r\n    };\r\n\r\n    const defaultTree = {\r\n      name: 'root',\r\n      type: 'folder',\r\n      path: '',\r\n      children: [\r\n        {\r\n          name: 'index.html',\r\n          type: 'file',\r\n          path: 'index.html',\r\n          content: defaultFiles['index.html']\r\n        },\r\n        {\r\n          name: 'style.css',\r\n          type: 'file',\r\n          path: 'style.css',\r\n          content: defaultFiles['style.css']\r\n        },\r\n        {\r\n          name: 'script.js',\r\n          type: 'file',\r\n          path: 'script.js',\r\n          content: defaultFiles['script.js']\r\n        }\r\n      ]\r\n    };\r\n\r\n    return {\r\n      files: defaultFiles,\r\n      tree: defaultTree\r\n    };\r\n  }\r\n}, [roomId, debouncedSave]);\r\n  // Initialize socket connection\r\n  const initializeSocket = useCallback((filesData) => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n    }\r\n\r\n    const socket = io('http://localhost:5000', {\r\n      transports: ['websocket'],\r\n      upgrade: false,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n      timeout: 10000,\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('🟢 Connected to server');\r\n      setConnectionStatus('Connected');\r\n      currentUserRef.current = socket.id;\r\n      socket.emit('join-room', { \r\n        roomId, \r\n        username,\r\n        files: filesData \r\n      });\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('🔴 Disconnected from server');\r\n      setConnectionStatus('Disconnected');\r\n    });\r\n\r\n    socket.on('reconnect', () => {\r\n      console.log('🟡 Reconnected to server');\r\n      setConnectionStatus('Connected');\r\n      socket.emit('join-room', { \r\n        roomId, \r\n        username,\r\n        files: files \r\n      });\r\n    });\r\n\r\n    socket.on('room-state', ({ files: roomFiles, users: roomUsers }) => {\r\n      console.log('📋 Received room state:', { files: Object.keys(roomFiles), users: roomUsers.length });\r\n      setFiles(roomFiles);\r\n      setUsers(roomUsers);\r\n    });\r\n\r\n    // socket.on('code-update', ({ filePath, code, sender, position, username: senderUsername }) => {\r\n    //   if (sender !== currentUserRef.current) {\r\n    //     console.log('📝 Code update from', senderUsername, 'for', filePath);\r\n        \r\n    //     isUpdatingFromSocket.current = true;\r\n        \r\n    //     setFiles(prev => {\r\n    //       const newFiles = { ...prev, [filePath]: code };\r\n          \r\n    //       // Update editor content if it's the active file\r\n    //       if (filePath === activeFile && editorRef.current) {\r\n    //         const model = editorRef.current.getModel();\r\n    //         if (model && model.getValue() !== code) {\r\n    //           // Save current cursor position\r\n    //           const currentSelection = editorRef.current.getSelection();\r\n    //           const scrollInfo = editorRef.current.getScrollTop();\r\n              \r\n    //           // Update content\r\n    //           model.setValue(code);\r\n              \r\n    //           // Restore cursor position if it was the current user's cursor\r\n    //           if (currentSelection && !position) {\r\n    //             editorRef.current.setSelection(currentSelection);\r\n    //             editorRef.current.setScrollTop(scrollInfo);\r\n    //           }\r\n    //         }\r\n    //       }\r\n          \r\n    //       return newFiles;\r\n    //     });\r\n\r\n    //     // Update user cursor position\r\n    //     if (position) {\r\n    //       setUserCursors(prev => ({\r\n    //         ...prev,\r\n    //         [sender]: { \r\n    //           ...prev[sender], \r\n    //           position, \r\n    //           activeFile: filePath,\r\n    //           username: senderUsername\r\n    //         }\r\n    //       }));\r\n    //     }\r\n\r\n    //     // Show typing indicator\r\n    //     if (filePath === activeFile) {\r\n    //       setTypingUsers(prev => ({\r\n    //         ...prev,\r\n    //         [sender]: { username: senderUsername, timestamp: Date.now() }\r\n    //       }));\r\n    //     }\r\n\r\n    //     setTimeout(() => {\r\n    //       isUpdatingFromSocket.current = false;\r\n    //     }, 100);\r\n    //   }\r\n    // });\r\n\r\n    socket.on('user-joined', ({ userId, username: newUsername }) => {\r\n      console.log('👤 User joined:', newUsername);\r\n      setUsers(prev => {\r\n        const exists = prev.find(u => u.id === userId);\r\n        if (!exists) {\r\n          return [...prev, { id: userId, username: newUsername }];\r\n        }\r\n        return prev;\r\n      });\r\n    });\r\n\r\n    socket.on('user-left', ({ userId, username: leftUsername }) => {\r\n      console.log('👤 User left:', leftUsername);\r\n      setUsers(prev => prev.filter(u => u.id !== userId));\r\n      setActiveUsers(prev => {\r\n        const newActive = { ...prev };\r\n        delete newActive[userId];\r\n        return newActive;\r\n      });\r\n      setUserCursors(prev => {\r\n        const newCursors = { ...prev };\r\n        delete newCursors[userId];\r\n        return newCursors;\r\n      });\r\n      setTypingUsers(prev => {\r\n        const newTyping = { ...prev };\r\n        delete newTyping[userId];\r\n        return newTyping;\r\n      });\r\n    });\r\n\r\n    socket.on('cursor-position', ({ userId, username: cursorUsername, position, activeFile: userActiveFile }) => {\r\n      if (userId !== currentUserRef.current && userActiveFile === activeFile) {\r\n        setUserCursors(prev => ({\r\n          ...prev,\r\n          [userId]: { \r\n            position, \r\n            activeFile: userActiveFile, \r\n            username: cursorUsername,\r\n            timestamp: Date.now()\r\n          }\r\n        }));\r\n      }\r\n    });\r\n\r\n    socket.on('user-typing', ({ userId, username: typingUsername, filePath }) => {\r\n      if (userId !== currentUserRef.current && filePath === activeFile) {\r\n        setTypingUsers(prev => ({\r\n          ...prev,\r\n          [userId]: { username: typingUsername, timestamp: Date.now() }\r\n        }));\r\n      }\r\n    });\r\n\r\n    socketRef.current = socket;\r\n    return socket;\r\n  }, [username, roomId, activeFile, files]);\r\n\r\n  // Clear old typing indicators\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = Date.now();\r\n      setTypingUsers(prev => {\r\n        const updated = { ...prev };\r\n        Object.keys(updated).forEach(userId => {\r\n          if (now - updated[userId].timestamp > 3000) {\r\n            delete updated[userId];\r\n          }\r\n        });\r\n        return updated;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Main initialization effect\r\n  useEffect(() => {\r\n    if (!roomId) {\r\n      navigate('/room');\r\n      return;\r\n    }\r\n\r\n    if (initializedRef.current) return;\r\n    initializedRef.current = true;\r\n\r\n    const user = (location.state && location.state.username) ||\r\n                 localStorage.getItem('username') ||\r\n                 'Guest';\r\n    setUsername(user);\r\n\r\n  const initialize = async () => {\r\n  try {\r\n    // 1. Fetch files - now returns { files, tree }\r\n    const { files: filesData, tree } = await fetchFiles();\r\n    \r\n    // 2. Set both states\r\n    setFiles(filesData);\r\n    setFileTree(tree); // Make sure you have this state: const [fileTree, setFileTree] = useState(null);\r\n    \r\n    // 3. Initialize socket with the flat files data\r\n    initializeSocket(filesData);\r\n    \r\n    // 4. Set username (unchanged)\r\n    localStorage.setItem('username', user);\r\n    \r\n    // 5. Set default active file if needed\r\n    if (!activeFile) {\r\n      setActiveFile('index.html');\r\n    }\r\n  } catch (error) {\r\n    console.error('Initialization error:', error);\r\n    setConnectionStatus('Initialization failed');\r\n  }\r\n};\r\n\r\n    initialize();\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, [roomId, navigate, location.state, fetchFiles, initializeSocket]);\r\n\r\n  // Track cursor position more frequently\r\n  useEffect(() => {\r\n    if (!editorRef.current || !socketRef.current?.connected) return;\r\n\r\n    const editor = editorRef.current;\r\n    \r\n    const handleCursorChange = () => {\r\n      if (isUpdatingFromSocket.current) return;\r\n      \r\n      const selection = editor.getSelection();\r\n      if (selection) {\r\n        const position = {\r\n          lineNumber: selection.positionLineNumber,\r\n          column: selection.positionColumn\r\n        };\r\n        \r\n        socketRef.current.emit('cursor-position', {\r\n          roomId,\r\n          filePath: activeFile,\r\n          position,\r\n          username\r\n        });\r\n      }\r\n    };\r\n\r\n    const disposable = editor.onDidChangeCursorPosition(handleCursorChange);\r\n    return () => disposable.dispose();\r\n  }, [roomId, activeFile, username]);\r\n\r\n  // Handle code changes with real-time sync\r\n  const handleCodeChange = useCallback((value) => {\r\n    if (!value) value = '';\r\n    if (isUpdatingFromSocket.current) return;\r\n    \r\n    const timestamp = Date.now();\r\n    lastChangeTimestamp.current = timestamp;\r\n    \r\n    setFiles(prev => {\r\n      if (prev[activeFile] !== value) {\r\n        const newFiles = { ...prev, [activeFile]: value };\r\n        \r\n        if (socketRef.current?.connected) {\r\n          const selection = editorRef.current?.getSelection();\r\n          const position = selection ? {\r\n            lineNumber: selection.positionLineNumber,\r\n            column: selection.positionColumn\r\n          } : null;\r\n          \r\n          // Emit real-time changes\r\n          socketRef.current.emit('code-change', {\r\n            roomId,\r\n            filePath: activeFile,\r\n            code: value,\r\n            position,\r\n            timestamp,\r\n            username\r\n          });\r\n\r\n          // Emit typing indicator\r\n          socketRef.current.emit('user-typing', {\r\n            roomId,\r\n            filePath: activeFile,\r\n            username\r\n          });\r\n        }\r\n        \r\n        // Debounced save to database\r\n        debouncedSave(roomId, activeFile, value);\r\n        return newFiles;\r\n      }\r\n      return prev;\r\n    });\r\n  }, [activeFile, roomId, debouncedSave, username]);\r\nconst handleAddFile = () => {\r\n  setShowNewFileModal(true);\r\n};\r\n\r\nconst handleAddFolder = () => {\r\n  setShowNewFolderModal(true);\r\n};\r\n\r\nconst createNewFile = () => {\r\n  if (!newFileName) return;\r\n  \r\n  const fileExt = newFileName.split('.').pop();\r\n  let defaultContent = '';\r\n  \r\n  if (fileExt === 'html') {\r\n    defaultContent = '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>New File</title>\\n</head>\\n<body>\\n    \\n</body>\\n</html>';\r\n  } else if (fileExt === 'css') {\r\n    defaultContent = '/* Your CSS here */';\r\n  } else if (fileExt === 'js') {\r\n    defaultContent = '// Your JavaScript here';\r\n  }\r\n  \r\n  // Update files state\r\n  const newFiles = { ...files, [newFileName]: defaultContent };\r\n  setFiles(newFiles);\r\n  \r\n  // Update tree state\r\n  setFileTree(prevTree => {\r\n    const newTree = {...prevTree};\r\n    newTree.children.push({\r\n      name: newFileName,\r\n      type: 'file',\r\n      path: newFileName,\r\n      content: defaultContent\r\n    });\r\n    return newTree;\r\n  });\r\n  \r\n  setActiveFile(newFileName);\r\n  setShowNewFileModal(false);\r\n  setNewFileName('');\r\n  \r\n  // Save to backend\r\n  debouncedSave(roomId, newFileName, defaultContent);\r\n  if (socketRef.current?.connected) {\r\n    socketRef.current.emit('code-change', {\r\n      roomId,\r\n      filePath: newFileName,\r\n      code: defaultContent,\r\n      username\r\n    });\r\n  }\r\n};\r\n\r\nconst createNewFolder = () => {\r\n  if (!newFolderName) return;\r\n  \r\n  // Update tree state\r\n  setFileTree(prevTree => {\r\n    const newTree = {...prevTree};\r\n    newTree.children.push({\r\n      name: newFolderName,\r\n      type: 'folder',\r\n      path: `${newFolderName}/`,\r\n      children: []\r\n    });\r\n    return newTree;\r\n  });\r\n  \r\n  setShowNewFolderModal(false);\r\n  setNewFolderName('');\r\n};\r\n  // Handle running the code\r\n  const handleRun = () => {\r\n    if (!files || !iframeRef.current) return;\r\n\r\n    const html = files['index.html'] || '';\r\n    const css = files['style.css'] || '';\r\n    const js = files['script.js'] || '';\r\n\r\n    const combined = `\r\n      <!DOCTYPE html>\r\n      <html>\r\n        <head>\r\n          <meta charset=\"UTF-8\">\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n          <style>${css}</style>\r\n        </head>\r\n        <body>\r\n          ${html}\r\n          <script>\r\n            // Error handling for iframe\r\n            window.onerror = function(msg, url, line, col, error) {\r\n              console.error('Error:', msg, 'at', line + ':' + col);\r\n              return false;\r\n            };\r\n            ${js}\r\n          </script>\r\n        </body>\r\n      </html>\r\n    `;\r\n\r\n    const blob = new Blob([combined], { type: 'text/html' });\r\n    const url = URL.createObjectURL(blob);\r\n    iframeRef.current.src = url;\r\n    setTimeout(() => URL.revokeObjectURL(url), 1000);\r\n  };\r\n\r\n  // Handle file switching\r\n  const handleFileSwitch = (fileName) => {\r\n    setActiveFile(fileName);\r\n    if (socketRef.current?.connected) {\r\n      socketRef.current.emit('file-switch', {\r\n        roomId,\r\n        filePath: fileName,\r\n        username\r\n      });\r\n    }\r\n  };\r\n\r\n  // Cleanup on page unload\r\n  useBeforeUnload(() => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n    }\r\n  });\r\n\r\n  const getLanguage = (file) => {\r\n    if (file.endsWith('.js')) return 'javascript';\r\n    if (file.endsWith('.html')) return 'html';\r\n    if (file.endsWith('.css')) return 'css';\r\n    return 'plaintext';\r\n  };\r\n\r\n  if (!files || !fileTree) {\r\n    return (\r\n      <div className=\"editor-wrapper\">\r\n        <div className=\"loading-screen\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <div>Loading collaborative editor...</div>\r\n          <div className=\"connection-status\">{connectionStatus}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const typingUsersList = Object.values(typingUsers);\r\n\r\n  return (\r\n    <div className=\"editor-wrapper\">\r\n      <div className=\"collaboration-bar\">\r\n        <div className=\"room-info\">\r\n          <strong>Room:</strong> {roomId} | <strong>User:</strong> {username}\r\n          <span className={`connection-status ${connectionStatus === 'Connected' ? 'connected' : 'disconnected'}`}>\r\n            ● {connectionStatus}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"online-users\">\r\n          <span className=\"users-label\">Online ({users.length}):</span>\r\n          {users.map(user => (\r\n            <div \r\n              key={user.id} \r\n              className=\"user-badge\"\r\n              style={{ backgroundColor: getUserColor(user.id) }}\r\n            >\r\n              {user.username}\r\n              {user.id === currentUserRef.current && ' (You)'}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {typingUsersList.length > 0 && (\r\n          <div className=\"typing-indicator\">\r\n            <span className=\"typing-dots\">●●●</span>\r\n            {typingUsersList.map(t => t.username).join(', ')} \r\n            {typingUsersList.length === 1 ? ' is' : ' are'} typing in {activeFile}...\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"editor-container\">\r\n        <div className=\"sidebar\">\r\n          <FileSidebar\r\n            tree={fileTree} \r\n           activeFile={activeFile}\r\n         setActiveFile={handleFileSwitch}\r\n         onAddFile={handleAddFile}\r\n             onAddFolder={handleAddFolder}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"main-editor\">\r\n          <div className=\"editor-header\">\r\n            <div className=\"file-info\">\r\n              <strong>{activeFile}</strong>\r\n              <span className=\"file-language\">({getLanguage(activeFile)})</span>\r\n            </div>\r\n            <button className=\"run-button\" onClick={handleRun}>\r\n              ▶ Run Code\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"editor-container-with-cursors\">\r\n            <Editor\r\n              height=\"50vh\"\r\n              language={getLanguage(activeFile)}\r\n              value={files[activeFile] || \"\"}\r\n              onChange={handleCodeChange}\r\n              onMount={editor => {\r\n                editorRef.current = editor;\r\n                // Add cursor tracking\r\n                editor.onDidChangeCursorPosition(() => {\r\n                  if (socketRef.current?.connected && !isUpdatingFromSocket.current) {\r\n                    const selection = editor.getSelection();\r\n                    if (selection) {\r\n                      const position = {\r\n                        lineNumber: selection.positionLineNumber,\r\n                        column: selection.positionColumn\r\n                      };\r\n                      \r\n                      socketRef.current.emit('cursor-position', {\r\n                        roomId,\r\n                        filePath: activeFile,\r\n                        position,\r\n                        username\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              }}\r\n              theme=\"vs-dark\"\r\n              options={{\r\n                minimap: { enabled: false },\r\n                fontSize: 14,\r\n                wordWrap: 'on',\r\n                automaticLayout: true,\r\n                scrollBeyondLastLine: false,\r\n                renderWhitespace: 'selection',\r\n                smoothScrolling: true,\r\n                cursorBlinking: 'smooth',\r\n                cursorSmoothCaretAnimation: true,\r\n              }}\r\n            />\r\n            \r\n            {/* Render other users' cursors */}\r\n            {Object.entries(userCursors).map(([userId, cursor]) => (\r\n              cursor.activeFile === activeFile && (\r\n                <div\r\n                  key={userId}\r\n                  className=\"user-cursor\"\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: `${(cursor.position?.lineNumber || 0) * 18}px`,\r\n                    left: `${(cursor.position?.column || 0) * 8}px`,\r\n                    borderLeft: `2px solid ${getUserColor(userId)}`,\r\n                    height: '18px',\r\n                    pointerEvents: 'none',\r\n                    zIndex: 1000,\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"user-cursor-label\"\r\n                    style={{\r\n                      backgroundColor: getUserColor(userId),\r\n                      color: 'white',\r\n                      padding: '2px 6px',\r\n                      borderRadius: '3px',\r\n                      fontSize: '11px',\r\n                      position: 'absolute',\r\n                      top: '-20px',\r\n                      left: '0',\r\n                      whiteSpace: 'nowrap',\r\n                    }}\r\n                  >\r\n                    {cursor.username}\r\n                  </div>\r\n                </div>\r\n              )\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"output-panel\">\r\n            <div className=\"output-header\">\r\n              <strong>Output Preview</strong>\r\n              <button className=\"refresh-output\" onClick={handleRun}>\r\n                🔄 Refresh\r\n              </button>\r\n            </div>\r\n            <iframe\r\n              ref={iframeRef}\r\n              title=\"Live Code Output\"\r\n              className=\"output-frame\"\r\n              sandbox=\"allow-scripts allow-same-origin allow-forms\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showNewFileModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Create New File</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"filename.html/.css/.js\"\r\n              value={newFileName}\r\n              onChange={(e) => setNewFileName(e.target.value)}\r\n            />\r\n            <div className=\"modal-actions\">\r\n              <button onClick={() => setShowNewFileModal(false)}>Cancel</button>\r\n              <button onClick={createNewFile}>Create</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showNewFolderModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Create New Folder</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Folder name\"\r\n              value={newFolderName}\r\n              onChange={(e) => setNewFolderName(e.target.value)}\r\n            />\r\n            <div className=\"modal-actions\">\r\n              <button onClick={() => setShowNewFolderModal(false)}>Cancel</button>\r\n              <button onClick={createNewFolder}>Create</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n   \r\n\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}\r\n\r\nexport default EditorPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}