{"ast":null,"code":"var _jsxFileName = \"D:\\\\realtime-code-editor\\\\client\\\\src\\\\pages\\\\EditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { useLocation, useParams, useNavigate, useBeforeUnload } from 'react-router-dom';\nimport Editor from '@monaco-editor/react';\nimport { io } from 'socket.io-client';\nimport FileSidebar from '../components/FileSidebar';\nimport '../styles/editor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditorPage() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const socketRef = useRef(null);\n  const initializedRef = useRef(false);\n  const currentUserRef = useRef(null);\n  const editorRef = useRef(null);\n  const iframeRef = useRef(null);\n  const isUpdatingFromSocket = useRef(false);\n  const lastChangeTimestamp = useRef(0);\n  const [username, setUsername] = useState('');\n  const [files, setFiles] = useState(null);\n  const [activeFile, setActiveFile] = useState('index.html');\n  const [connectionStatus, setConnectionStatus] = useState('Connecting...');\n  const [users, setUsers] = useState([]);\n  const [activeUsers, setActiveUsers] = useState({});\n  const [typingUsers, setTypingUsers] = useState({});\n  const [userCursors, setUserCursors] = useState({});\n  const [showNewFileModal, setShowNewFileModal] = useState(false);\n  const [showNewFolderModal, setShowNewFolderModal] = useState(false);\n  const [newFileName, setNewFileName] = useState('');\n  const [newFolderName, setNewFolderName] = useState('');\n  // Colors for different users\n  const userColors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD', '#98D8C8'];\n  const getUserColor = userId => {\n    const index = Object.keys(activeUsers).indexOf(userId);\n    return userColors[index % userColors.length];\n  };\n\n  // Debounced save function\n  const debouncedSave = useCallback(debounce(async (roomId, filename, content) => {\n    try {\n      await fetch('http://localhost:5000/api/code/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomId,\n          filename,\n          content\n        })\n      });\n    } catch (err) {\n      console.error('Error saving file:', err);\n    }\n  }, 2000), []);\n\n  // Fetch files from backend\n\n  // Initialize socket connection\n  const initializeSocket = useCallback(filesData => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    const socket = io('http://localhost:5000', {\n      transports: ['websocket'],\n      upgrade: false,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      timeout: 10000\n    });\n    socket.on('connect', () => {\n      console.log('🟢 Connected to server');\n      setConnectionStatus('Connected');\n      currentUserRef.current = socket.id;\n      socket.emit('join-room', {\n        roomId,\n        username,\n        files: filesData\n      });\n    });\n    socket.on('disconnect', () => {\n      console.log('🔴 Disconnected from server');\n      setConnectionStatus('Disconnected');\n    });\n    socket.on('reconnect', () => {\n      console.log('🟡 Reconnected to server');\n      setConnectionStatus('Connected');\n      socket.emit('join-room', {\n        roomId,\n        username,\n        files: files\n      });\n    });\n    socket.on('room-state', ({\n      files: roomFiles,\n      users: roomUsers\n    }) => {\n      console.log('📋 Received room state:', {\n        files: Object.keys(roomFiles),\n        users: roomUsers.length\n      });\n      setFiles(roomFiles);\n      setUsers(roomUsers);\n    });\n    socket.on('code-update', ({\n      filePath,\n      code,\n      sender,\n      position,\n      username: senderUsername\n    }) => {\n      if (sender !== currentUserRef.current) {\n        console.log('📝 Code update from', senderUsername, 'for', filePath);\n        isUpdatingFromSocket.current = true;\n        setFiles(prev => {\n          const newFiles = {\n            ...prev,\n            [filePath]: code\n          };\n\n          // Update editor content if it's the active file\n          if (filePath === activeFile && editorRef.current) {\n            const model = editorRef.current.getModel();\n            if (model && model.getValue() !== code) {\n              // Save current cursor position\n              const currentSelection = editorRef.current.getSelection();\n              const scrollInfo = editorRef.current.getScrollTop();\n\n              // Update content\n              model.setValue(code);\n\n              // Restore cursor position if it was the current user's cursor\n              if (currentSelection && !position) {\n                editorRef.current.setSelection(currentSelection);\n                editorRef.current.setScrollTop(scrollInfo);\n              }\n            }\n          }\n          return newFiles;\n        });\n\n        // Update user cursor position\n        if (position) {\n          setUserCursors(prev => ({\n            ...prev,\n            [sender]: {\n              ...prev[sender],\n              position,\n              activeFile: filePath,\n              username: senderUsername\n            }\n          }));\n        }\n\n        // Show typing indicator\n        if (filePath === activeFile) {\n          setTypingUsers(prev => ({\n            ...prev,\n            [sender]: {\n              username: senderUsername,\n              timestamp: Date.now()\n            }\n          }));\n        }\n        setTimeout(() => {\n          isUpdatingFromSocket.current = false;\n        }, 100);\n      }\n    });\n    socket.on('user-joined', ({\n      userId,\n      username: newUsername\n    }) => {\n      console.log('👤 User joined:', newUsername);\n      setUsers(prev => {\n        const exists = prev.find(u => u.id === userId);\n        if (!exists) {\n          return [...prev, {\n            id: userId,\n            username: newUsername\n          }];\n        }\n        return prev;\n      });\n    });\n    socket.on('user-left', ({\n      userId,\n      username: leftUsername\n    }) => {\n      console.log('👤 User left:', leftUsername);\n      setUsers(prev => prev.filter(u => u.id !== userId));\n      setActiveUsers(prev => {\n        const newActive = {\n          ...prev\n        };\n        delete newActive[userId];\n        return newActive;\n      });\n      setUserCursors(prev => {\n        const newCursors = {\n          ...prev\n        };\n        delete newCursors[userId];\n        return newCursors;\n      });\n      setTypingUsers(prev => {\n        const newTyping = {\n          ...prev\n        };\n        delete newTyping[userId];\n        return newTyping;\n      });\n    });\n    socket.on('cursor-position', ({\n      userId,\n      username: cursorUsername,\n      position,\n      activeFile: userActiveFile\n    }) => {\n      if (userId !== currentUserRef.current && userActiveFile === activeFile) {\n        setUserCursors(prev => ({\n          ...prev,\n          [userId]: {\n            position,\n            activeFile: userActiveFile,\n            username: cursorUsername,\n            timestamp: Date.now()\n          }\n        }));\n      }\n    });\n    socket.on('user-typing', ({\n      userId,\n      username: typingUsername,\n      filePath\n    }) => {\n      if (userId !== currentUserRef.current && filePath === activeFile) {\n        setTypingUsers(prev => ({\n          ...prev,\n          [userId]: {\n            username: typingUsername,\n            timestamp: Date.now()\n          }\n        }));\n      }\n    });\n    socketRef.current = socket;\n    return socket;\n  }, [username, roomId, activeFile, files]);\n\n  // Clear old typing indicators\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      setTypingUsers(prev => {\n        const updated = {\n          ...prev\n        };\n        Object.keys(updated).forEach(userId => {\n          if (now - updated[userId].timestamp > 3000) {\n            delete updated[userId];\n          }\n        });\n        return updated;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Main initialization effect\n  useEffect(() => {\n    if (!roomId) {\n      navigate('/room');\n      return;\n    }\n    if (initializedRef.current) return;\n    initializedRef.current = true;\n    const user = location.state && location.state.username || localStorage.getItem('username') || 'Guest';\n    setUsername(user);\n    const initialize = async () => {\n      try {\n        const filesData = await fetchFiles();\n        setFiles(filesData);\n        initializeSocket(filesData);\n        localStorage.setItem('username', user);\n      } catch (error) {\n        console.error('Initialization error:', error);\n        setConnectionStatus('Initialization failed');\n      }\n    };\n    initialize();\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [roomId, navigate, location.state, fetchFiles, initializeSocket]);\n\n  // Track cursor position more frequently\n  useEffect(() => {\n    var _socketRef$current;\n    if (!editorRef.current || !((_socketRef$current = socketRef.current) !== null && _socketRef$current !== void 0 && _socketRef$current.connected)) return;\n    const editor = editorRef.current;\n    const handleCursorChange = () => {\n      if (isUpdatingFromSocket.current) return;\n      const selection = editor.getSelection();\n      if (selection) {\n        const position = {\n          lineNumber: selection.positionLineNumber,\n          column: selection.positionColumn\n        };\n        socketRef.current.emit('cursor-position', {\n          roomId,\n          filePath: activeFile,\n          position,\n          username\n        });\n      }\n    };\n    const disposable = editor.onDidChangeCursorPosition(handleCursorChange);\n    return () => disposable.dispose();\n  }, [roomId, activeFile, username]);\n\n  // Handle code changes with real-time sync\n  const handleCodeChange = useCallback(value => {\n    if (!value) value = '';\n    if (isUpdatingFromSocket.current) return;\n    const timestamp = Date.now();\n    lastChangeTimestamp.current = timestamp;\n    setFiles(prev => {\n      if (prev[activeFile] !== value) {\n        var _socketRef$current2;\n        const newFiles = {\n          ...prev,\n          [activeFile]: value\n        };\n        if ((_socketRef$current2 = socketRef.current) !== null && _socketRef$current2 !== void 0 && _socketRef$current2.connected) {\n          var _editorRef$current;\n          const selection = (_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.getSelection();\n          const position = selection ? {\n            lineNumber: selection.positionLineNumber,\n            column: selection.positionColumn\n          } : null;\n\n          // Emit real-time changes\n          socketRef.current.emit('code-change', {\n            roomId,\n            filePath: activeFile,\n            code: value,\n            position,\n            timestamp,\n            username\n          });\n\n          // Emit typing indicator\n          socketRef.current.emit('user-typing', {\n            roomId,\n            filePath: activeFile,\n            username\n          });\n        }\n\n        // Debounced save to database\n        debouncedSave(roomId, activeFile, value);\n        return newFiles;\n      }\n      return prev;\n    });\n  }, [activeFile, roomId, debouncedSave, username]);\n  const handleAddFile = () => {\n    setShowNewFileModal(true);\n  };\n  const handleAddFolder = () => {\n    setShowNewFolderModal(true);\n  };\n  const createNewFile = () => {\n    var _socketRef$current3;\n    if (!newFileName) return;\n    const fileExt = newFileName.split('.').pop();\n    let defaultContent = '';\n    if (fileExt === 'html') {\n      defaultContent = '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>New File</title>\\n</head>\\n<body>\\n    \\n</body>\\n</html>';\n    } else if (fileExt === 'css') {\n      defaultContent = '/* Your CSS here */';\n    } else if (fileExt === 'js') {\n      defaultContent = '// Your JavaScript here';\n    }\n    const newFiles = {\n      ...files,\n      [newFileName]: defaultContent\n    };\n    setFiles(newFiles);\n    setActiveFile(newFileName);\n    setShowNewFileModal(false);\n    setNewFileName('');\n\n    // Save to backend\n    debouncedSave(roomId, newFileName, defaultContent);\n    if ((_socketRef$current3 = socketRef.current) !== null && _socketRef$current3 !== void 0 && _socketRef$current3.connected) {\n      socketRef.current.emit('code-change', {\n        roomId,\n        filePath: newFileName,\n        code: defaultContent,\n        username\n      });\n    }\n  };\n  const createNewFolder = () => {\n    if (!newFolderName) return;\n\n    // For folders, we just need to track them in the UI\n    // Actual files will be stored as \"folderName/fileName\"\n    setShowNewFolderModal(false);\n    setNewFolderName('');\n  };\n  // Handle running the code\n  const handleRun = () => {\n    if (!files || !iframeRef.current) return;\n    const html = files['index.html'] || '';\n    const css = files['style.css'] || '';\n    const js = files['script.js'] || '';\n    const combined = `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <style>${css}</style>\n        </head>\n        <body>\n          ${html}\n          <script>\n            // Error handling for iframe\n            window.onerror = function(msg, url, line, col, error) {\n              console.error('Error:', msg, 'at', line + ':' + col);\n              return false;\n            };\n            ${js}\n          </script>\n        </body>\n      </html>\n    `;\n    const blob = new Blob([combined], {\n      type: 'text/html'\n    });\n    const url = URL.createObjectURL(blob);\n    iframeRef.current.src = url;\n    setTimeout(() => URL.revokeObjectURL(url), 1000);\n  };\n\n  // Handle file switching\n  const handleFileSwitch = fileName => {\n    var _socketRef$current4;\n    setActiveFile(fileName);\n    if ((_socketRef$current4 = socketRef.current) !== null && _socketRef$current4 !== void 0 && _socketRef$current4.connected) {\n      socketRef.current.emit('file-switch', {\n        roomId,\n        filePath: fileName,\n        username\n      });\n    }\n  };\n\n  // Cleanup on page unload\n  useBeforeUnload(() => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n  });\n  const getLanguage = file => {\n    if (file.endsWith('.js')) return 'javascript';\n    if (file.endsWith('.html')) return 'html';\n    if (file.endsWith('.css')) return 'css';\n    return 'plaintext';\n  };\n  if (!files) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading collaborative editor...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status\",\n          children: connectionStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this);\n  }\n  const typingUsersList = Object.values(typingUsers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collaboration-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Room:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), \" \", roomId, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 45\n        }, this), \" \", username, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `connection-status ${connectionStatus === 'Connected' ? 'connected' : 'disconnected'}`,\n          children: [\"\\u25CF \", connectionStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"online-users\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"users-label\",\n          children: [\"Online (\", users.length, \"):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-badge\",\n          style: {\n            backgroundColor: getUserColor(user.id)\n          },\n          children: [user.username, user.id === currentUserRef.current && ' (You)']\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), typingUsersList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"typing-dots\",\n          children: \"\\u25CF\\u25CF\\u25CF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), typingUsersList.map(t => t.username).join(', '), typingUsersList.length === 1 ? ' is' : ' are', \" typing in \", activeFile, \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: /*#__PURE__*/_jsxDEV(FileSidebar, {\n          files: Object.keys(files),\n          activeFile: activeFile,\n          setActiveFile: handleFileSwitch,\n          onAddFile: () => setShowNewFileModal(true),\n          onAddFolder: () => setShowNewFolderModal(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: activeFile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-language\",\n              children: [\"(\", getLanguage(activeFile), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"run-button\",\n            onClick: handleRun,\n            children: \"\\u25B6 Run Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-container-with-cursors\",\n          children: [/*#__PURE__*/_jsxDEV(Editor, {\n            height: \"50vh\",\n            language: getLanguage(activeFile),\n            value: files[activeFile] || \"\",\n            onChange: handleCodeChange,\n            onMount: editor => {\n              editorRef.current = editor;\n              // Add cursor tracking\n              editor.onDidChangeCursorPosition(() => {\n                var _socketRef$current5;\n                if ((_socketRef$current5 = socketRef.current) !== null && _socketRef$current5 !== void 0 && _socketRef$current5.connected && !isUpdatingFromSocket.current) {\n                  const selection = editor.getSelection();\n                  if (selection) {\n                    const position = {\n                      lineNumber: selection.positionLineNumber,\n                      column: selection.positionColumn\n                    };\n                    socketRef.current.emit('cursor-position', {\n                      roomId,\n                      filePath: activeFile,\n                      position,\n                      username\n                    });\n                  }\n                }\n              });\n            },\n            theme: \"vs-dark\",\n            options: {\n              minimap: {\n                enabled: false\n              },\n              fontSize: 14,\n              wordWrap: 'on',\n              automaticLayout: true,\n              scrollBeyondLastLine: false,\n              renderWhitespace: 'selection',\n              smoothScrolling: true,\n              cursorBlinking: 'smooth',\n              cursorSmoothCaretAnimation: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this), Object.entries(userCursors).map(([userId, cursor]) => {\n            var _cursor$position, _cursor$position2;\n            return cursor.activeFile === activeFile && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-cursor\",\n              style: {\n                position: 'absolute',\n                top: `${(((_cursor$position = cursor.position) === null || _cursor$position === void 0 ? void 0 : _cursor$position.lineNumber) || 0) * 18}px`,\n                left: `${(((_cursor$position2 = cursor.position) === null || _cursor$position2 === void 0 ? void 0 : _cursor$position2.column) || 0) * 8}px`,\n                borderLeft: `2px solid ${getUserColor(userId)}`,\n                height: '18px',\n                pointerEvents: 'none',\n                zIndex: 1000\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-cursor-label\",\n                style: {\n                  backgroundColor: getUserColor(userId),\n                  color: 'white',\n                  padding: '2px 6px',\n                  borderRadius: '3px',\n                  fontSize: '11px',\n                  position: 'absolute',\n                  top: '-20px',\n                  left: '0',\n                  whiteSpace: 'nowrap'\n                },\n                children: cursor.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 19\n              }, this)\n            }, userId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Output Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"refresh-output\",\n              onClick: handleRun,\n              children: \"\\uD83D\\uDD04 Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            ref: iframeRef,\n            title: \"Live Code Output\",\n            className: \"output-frame\",\n            sandbox: \"allow-scripts allow-same-origin allow-forms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this), showNewFileModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"filename.html/.css/.js\",\n          value: newFileName,\n          onChange: e => setNewFileName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowNewFileModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createNewFile,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 9\n    }, this), showNewFolderModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Folder name\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowNewFolderModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createNewFolder,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 471,\n    columnNumber: 5\n  }, this);\n}\n_s(EditorPage, \"IFbu03v6MqQ90Qy9Gt1urezG4vE=\", false, function () {\n  return [useParams, useLocation, useNavigate, useBeforeUnload];\n});\n_c = EditorPage;\nfunction debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","useLocation","useParams","useNavigate","useBeforeUnload","Editor","io","FileSidebar","jsxDEV","_jsxDEV","EditorPage","_s","roomId","location","navigate","socketRef","initializedRef","currentUserRef","editorRef","iframeRef","isUpdatingFromSocket","lastChangeTimestamp","username","setUsername","files","setFiles","activeFile","setActiveFile","connectionStatus","setConnectionStatus","users","setUsers","activeUsers","setActiveUsers","typingUsers","setTypingUsers","userCursors","setUserCursors","showNewFileModal","setShowNewFileModal","showNewFolderModal","setShowNewFolderModal","newFileName","setNewFileName","newFolderName","setNewFolderName","userColors","getUserColor","userId","index","Object","keys","indexOf","length","debouncedSave","debounce","filename","content","fetch","method","headers","body","JSON","stringify","err","console","error","initializeSocket","filesData","current","disconnect","socket","transports","upgrade","reconnectionAttempts","reconnectionDelay","timeout","on","log","id","emit","roomFiles","roomUsers","filePath","code","sender","position","senderUsername","prev","newFiles","model","getModel","getValue","currentSelection","getSelection","scrollInfo","getScrollTop","setValue","setSelection","setScrollTop","timestamp","Date","now","setTimeout","newUsername","exists","find","u","leftUsername","filter","newActive","newCursors","newTyping","cursorUsername","userActiveFile","typingUsername","interval","setInterval","updated","forEach","clearInterval","user","state","localStorage","getItem","initialize","fetchFiles","setItem","_socketRef$current","connected","editor","handleCursorChange","selection","lineNumber","positionLineNumber","column","positionColumn","disposable","onDidChangeCursorPosition","dispose","handleCodeChange","value","_socketRef$current2","_editorRef$current","handleAddFile","handleAddFolder","createNewFile","_socketRef$current3","fileExt","split","pop","defaultContent","createNewFolder","handleRun","html","css","js","combined","blob","Blob","type","url","URL","createObjectURL","src","revokeObjectURL","handleFileSwitch","fileName","_socketRef$current4","getLanguage","file","endsWith","className","children","_jsxFileName","columnNumber","typingUsersList","values","map","style","backgroundColor","t","join","onAddFile","onAddFolder","onClick","height","language","onChange","onMount","_socketRef$current5","theme","options","minimap","enabled","fontSize","wordWrap","automaticLayout","scrollBeyondLastLine","renderWhitespace","smoothScrolling","cursorBlinking","cursorSmoothCaretAnimation","entries","cursor","_cursor$position","_cursor$position2","top","left","borderLeft","pointerEvents","zIndex","color","padding","borderRadius","whiteSpace","ref","title","sandbox","placeholder","e","target","_c","func","wait","executedFunction","args","later","clearTimeout","$RefreshReg$"],"sources":["D:/realtime-code-editor/client/src/pages/EditorPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { useLocation, useParams, useNavigate, useBeforeUnload } from 'react-router-dom';\r\nimport Editor from '@monaco-editor/react';\r\nimport { io } from 'socket.io-client';\r\nimport FileSidebar from '../components/FileSidebar';\r\nimport '../styles/editor.css';\r\n\r\nfunction EditorPage() {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const socketRef = useRef(null);\r\n  const initializedRef = useRef(false);\r\n  const currentUserRef = useRef(null);\r\n  const editorRef = useRef(null);\r\n  const iframeRef = useRef(null);\r\n  const isUpdatingFromSocket = useRef(false);\r\n  const lastChangeTimestamp = useRef(0);\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [files, setFiles] = useState(null);\r\n  const [activeFile, setActiveFile] = useState('index.html');\r\n  const [connectionStatus, setConnectionStatus] = useState('Connecting...');\r\n  const [users, setUsers] = useState([]);\r\n  const [activeUsers, setActiveUsers] = useState({});\r\n  const [typingUsers, setTypingUsers] = useState({});\r\n  const [userCursors, setUserCursors] = useState({});\r\nconst [showNewFileModal, setShowNewFileModal] = useState(false);\r\nconst [showNewFolderModal, setShowNewFolderModal] = useState(false);\r\nconst [newFileName, setNewFileName] = useState('');\r\nconst [newFolderName, setNewFolderName] = useState('');\r\n  // Colors for different users\r\n  const userColors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD', '#98D8C8'];\r\n  const getUserColor = (userId) => {\r\n    const index = Object.keys(activeUsers).indexOf(userId);\r\n    return userColors[index % userColors.length];\r\n  };\r\n\r\n  // Debounced save function\r\n  const debouncedSave = useCallback(\r\n    debounce(async (roomId, filename, content) => {\r\n      try {\r\n        await fetch('http://localhost:5000/api/code/save', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ roomId, filename, content }),\r\n        });\r\n      } catch (err) {\r\n        console.error('Error saving file:', err);\r\n      }\r\n    }, 2000),\r\n    []\r\n  );\r\n\r\n  // Fetch files from backend\r\n  \r\n  // Initialize socket connection\r\n  const initializeSocket = useCallback((filesData) => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n    }\r\n\r\n    const socket = io('http://localhost:5000', {\r\n      transports: ['websocket'],\r\n      upgrade: false,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n      timeout: 10000,\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('🟢 Connected to server');\r\n      setConnectionStatus('Connected');\r\n      currentUserRef.current = socket.id;\r\n      socket.emit('join-room', { \r\n        roomId, \r\n        username,\r\n        files: filesData \r\n      });\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('🔴 Disconnected from server');\r\n      setConnectionStatus('Disconnected');\r\n    });\r\n\r\n    socket.on('reconnect', () => {\r\n      console.log('🟡 Reconnected to server');\r\n      setConnectionStatus('Connected');\r\n      socket.emit('join-room', { \r\n        roomId, \r\n        username,\r\n        files: files \r\n      });\r\n    });\r\n\r\n    socket.on('room-state', ({ files: roomFiles, users: roomUsers }) => {\r\n      console.log('📋 Received room state:', { files: Object.keys(roomFiles), users: roomUsers.length });\r\n      setFiles(roomFiles);\r\n      setUsers(roomUsers);\r\n    });\r\n\r\n    socket.on('code-update', ({ filePath, code, sender, position, username: senderUsername }) => {\r\n      if (sender !== currentUserRef.current) {\r\n        console.log('📝 Code update from', senderUsername, 'for', filePath);\r\n        \r\n        isUpdatingFromSocket.current = true;\r\n        \r\n        setFiles(prev => {\r\n          const newFiles = { ...prev, [filePath]: code };\r\n          \r\n          // Update editor content if it's the active file\r\n          if (filePath === activeFile && editorRef.current) {\r\n            const model = editorRef.current.getModel();\r\n            if (model && model.getValue() !== code) {\r\n              // Save current cursor position\r\n              const currentSelection = editorRef.current.getSelection();\r\n              const scrollInfo = editorRef.current.getScrollTop();\r\n              \r\n              // Update content\r\n              model.setValue(code);\r\n              \r\n              // Restore cursor position if it was the current user's cursor\r\n              if (currentSelection && !position) {\r\n                editorRef.current.setSelection(currentSelection);\r\n                editorRef.current.setScrollTop(scrollInfo);\r\n              }\r\n            }\r\n          }\r\n          \r\n          return newFiles;\r\n        });\r\n\r\n        // Update user cursor position\r\n        if (position) {\r\n          setUserCursors(prev => ({\r\n            ...prev,\r\n            [sender]: { \r\n              ...prev[sender], \r\n              position, \r\n              activeFile: filePath,\r\n              username: senderUsername\r\n            }\r\n          }));\r\n        }\r\n\r\n        // Show typing indicator\r\n        if (filePath === activeFile) {\r\n          setTypingUsers(prev => ({\r\n            ...prev,\r\n            [sender]: { username: senderUsername, timestamp: Date.now() }\r\n          }));\r\n        }\r\n\r\n        setTimeout(() => {\r\n          isUpdatingFromSocket.current = false;\r\n        }, 100);\r\n      }\r\n    });\r\n\r\n    socket.on('user-joined', ({ userId, username: newUsername }) => {\r\n      console.log('👤 User joined:', newUsername);\r\n      setUsers(prev => {\r\n        const exists = prev.find(u => u.id === userId);\r\n        if (!exists) {\r\n          return [...prev, { id: userId, username: newUsername }];\r\n        }\r\n        return prev;\r\n      });\r\n    });\r\n\r\n    socket.on('user-left', ({ userId, username: leftUsername }) => {\r\n      console.log('👤 User left:', leftUsername);\r\n      setUsers(prev => prev.filter(u => u.id !== userId));\r\n      setActiveUsers(prev => {\r\n        const newActive = { ...prev };\r\n        delete newActive[userId];\r\n        return newActive;\r\n      });\r\n      setUserCursors(prev => {\r\n        const newCursors = { ...prev };\r\n        delete newCursors[userId];\r\n        return newCursors;\r\n      });\r\n      setTypingUsers(prev => {\r\n        const newTyping = { ...prev };\r\n        delete newTyping[userId];\r\n        return newTyping;\r\n      });\r\n    });\r\n\r\n    socket.on('cursor-position', ({ userId, username: cursorUsername, position, activeFile: userActiveFile }) => {\r\n      if (userId !== currentUserRef.current && userActiveFile === activeFile) {\r\n        setUserCursors(prev => ({\r\n          ...prev,\r\n          [userId]: { \r\n            position, \r\n            activeFile: userActiveFile, \r\n            username: cursorUsername,\r\n            timestamp: Date.now()\r\n          }\r\n        }));\r\n      }\r\n    });\r\n\r\n    socket.on('user-typing', ({ userId, username: typingUsername, filePath }) => {\r\n      if (userId !== currentUserRef.current && filePath === activeFile) {\r\n        setTypingUsers(prev => ({\r\n          ...prev,\r\n          [userId]: { username: typingUsername, timestamp: Date.now() }\r\n        }));\r\n      }\r\n    });\r\n\r\n    socketRef.current = socket;\r\n    return socket;\r\n  }, [username, roomId, activeFile, files]);\r\n\r\n  // Clear old typing indicators\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = Date.now();\r\n      setTypingUsers(prev => {\r\n        const updated = { ...prev };\r\n        Object.keys(updated).forEach(userId => {\r\n          if (now - updated[userId].timestamp > 3000) {\r\n            delete updated[userId];\r\n          }\r\n        });\r\n        return updated;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Main initialization effect\r\n  useEffect(() => {\r\n    if (!roomId) {\r\n      navigate('/room');\r\n      return;\r\n    }\r\n\r\n    if (initializedRef.current) return;\r\n    initializedRef.current = true;\r\n\r\n    const user = (location.state && location.state.username) ||\r\n                 localStorage.getItem('username') ||\r\n                 'Guest';\r\n    setUsername(user);\r\n\r\n    const initialize = async () => {\r\n      try {\r\n        const filesData = await fetchFiles();\r\n        setFiles(filesData);\r\n        initializeSocket(filesData);\r\n        localStorage.setItem('username', user);\r\n      } catch (error) {\r\n        console.error('Initialization error:', error);\r\n        setConnectionStatus('Initialization failed');\r\n      }\r\n    };\r\n\r\n    initialize();\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, [roomId, navigate, location.state, fetchFiles, initializeSocket]);\r\n\r\n  // Track cursor position more frequently\r\n  useEffect(() => {\r\n    if (!editorRef.current || !socketRef.current?.connected) return;\r\n\r\n    const editor = editorRef.current;\r\n    \r\n    const handleCursorChange = () => {\r\n      if (isUpdatingFromSocket.current) return;\r\n      \r\n      const selection = editor.getSelection();\r\n      if (selection) {\r\n        const position = {\r\n          lineNumber: selection.positionLineNumber,\r\n          column: selection.positionColumn\r\n        };\r\n        \r\n        socketRef.current.emit('cursor-position', {\r\n          roomId,\r\n          filePath: activeFile,\r\n          position,\r\n          username\r\n        });\r\n      }\r\n    };\r\n\r\n    const disposable = editor.onDidChangeCursorPosition(handleCursorChange);\r\n    return () => disposable.dispose();\r\n  }, [roomId, activeFile, username]);\r\n\r\n  // Handle code changes with real-time sync\r\n  const handleCodeChange = useCallback((value) => {\r\n    if (!value) value = '';\r\n    if (isUpdatingFromSocket.current) return;\r\n    \r\n    const timestamp = Date.now();\r\n    lastChangeTimestamp.current = timestamp;\r\n    \r\n    setFiles(prev => {\r\n      if (prev[activeFile] !== value) {\r\n        const newFiles = { ...prev, [activeFile]: value };\r\n        \r\n        if (socketRef.current?.connected) {\r\n          const selection = editorRef.current?.getSelection();\r\n          const position = selection ? {\r\n            lineNumber: selection.positionLineNumber,\r\n            column: selection.positionColumn\r\n          } : null;\r\n          \r\n          // Emit real-time changes\r\n          socketRef.current.emit('code-change', {\r\n            roomId,\r\n            filePath: activeFile,\r\n            code: value,\r\n            position,\r\n            timestamp,\r\n            username\r\n          });\r\n\r\n          // Emit typing indicator\r\n          socketRef.current.emit('user-typing', {\r\n            roomId,\r\n            filePath: activeFile,\r\n            username\r\n          });\r\n        }\r\n        \r\n        // Debounced save to database\r\n        debouncedSave(roomId, activeFile, value);\r\n        return newFiles;\r\n      }\r\n      return prev;\r\n    });\r\n  }, [activeFile, roomId, debouncedSave, username]);\r\nconst handleAddFile = () => {\r\n  setShowNewFileModal(true);\r\n};\r\n\r\nconst handleAddFolder = () => {\r\n  setShowNewFolderModal(true);\r\n};\r\n\r\nconst createNewFile = () => {\r\n  if (!newFileName) return;\r\n  \r\n  const fileExt = newFileName.split('.').pop();\r\n  let defaultContent = '';\r\n  \r\n  if (fileExt === 'html') {\r\n    defaultContent = '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>New File</title>\\n</head>\\n<body>\\n    \\n</body>\\n</html>';\r\n  } else if (fileExt === 'css') {\r\n    defaultContent = '/* Your CSS here */';\r\n  } else if (fileExt === 'js') {\r\n    defaultContent = '// Your JavaScript here';\r\n  }\r\n  \r\n  const newFiles = { ...files, [newFileName]: defaultContent };\r\n  setFiles(newFiles);\r\n  setActiveFile(newFileName);\r\n  setShowNewFileModal(false);\r\n  setNewFileName('');\r\n  \r\n  // Save to backend\r\n  debouncedSave(roomId, newFileName, defaultContent);\r\n  if (socketRef.current?.connected) {\r\n    socketRef.current.emit('code-change', {\r\n      roomId,\r\n      filePath: newFileName,\r\n      code: defaultContent,\r\n      username\r\n    });\r\n  }\r\n};\r\n\r\nconst createNewFolder = () => {\r\n  if (!newFolderName) return;\r\n  \r\n  // For folders, we just need to track them in the UI\r\n  // Actual files will be stored as \"folderName/fileName\"\r\n  setShowNewFolderModal(false);\r\n  setNewFolderName('');\r\n};\r\n  // Handle running the code\r\n  const handleRun = () => {\r\n    if (!files || !iframeRef.current) return;\r\n\r\n    const html = files['index.html'] || '';\r\n    const css = files['style.css'] || '';\r\n    const js = files['script.js'] || '';\r\n\r\n    const combined = `\r\n      <!DOCTYPE html>\r\n      <html>\r\n        <head>\r\n          <meta charset=\"UTF-8\">\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n          <style>${css}</style>\r\n        </head>\r\n        <body>\r\n          ${html}\r\n          <script>\r\n            // Error handling for iframe\r\n            window.onerror = function(msg, url, line, col, error) {\r\n              console.error('Error:', msg, 'at', line + ':' + col);\r\n              return false;\r\n            };\r\n            ${js}\r\n          </script>\r\n        </body>\r\n      </html>\r\n    `;\r\n\r\n    const blob = new Blob([combined], { type: 'text/html' });\r\n    const url = URL.createObjectURL(blob);\r\n    iframeRef.current.src = url;\r\n    setTimeout(() => URL.revokeObjectURL(url), 1000);\r\n  };\r\n\r\n  // Handle file switching\r\n  const handleFileSwitch = (fileName) => {\r\n    setActiveFile(fileName);\r\n    if (socketRef.current?.connected) {\r\n      socketRef.current.emit('file-switch', {\r\n        roomId,\r\n        filePath: fileName,\r\n        username\r\n      });\r\n    }\r\n  };\r\n\r\n  // Cleanup on page unload\r\n  useBeforeUnload(() => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n    }\r\n  });\r\n\r\n  const getLanguage = (file) => {\r\n    if (file.endsWith('.js')) return 'javascript';\r\n    if (file.endsWith('.html')) return 'html';\r\n    if (file.endsWith('.css')) return 'css';\r\n    return 'plaintext';\r\n  };\r\n\r\n  if (!files) {\r\n    return (\r\n      <div className=\"editor-wrapper\">\r\n        <div className=\"loading-screen\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <div>Loading collaborative editor...</div>\r\n          <div className=\"connection-status\">{connectionStatus}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const typingUsersList = Object.values(typingUsers);\r\n\r\n  return (\r\n    <div className=\"editor-wrapper\">\r\n      <div className=\"collaboration-bar\">\r\n        <div className=\"room-info\">\r\n          <strong>Room:</strong> {roomId} | <strong>User:</strong> {username}\r\n          <span className={`connection-status ${connectionStatus === 'Connected' ? 'connected' : 'disconnected'}`}>\r\n            ● {connectionStatus}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"online-users\">\r\n          <span className=\"users-label\">Online ({users.length}):</span>\r\n          {users.map(user => (\r\n            <div \r\n              key={user.id} \r\n              className=\"user-badge\"\r\n              style={{ backgroundColor: getUserColor(user.id) }}\r\n            >\r\n              {user.username}\r\n              {user.id === currentUserRef.current && ' (You)'}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {typingUsersList.length > 0 && (\r\n          <div className=\"typing-indicator\">\r\n            <span className=\"typing-dots\">●●●</span>\r\n            {typingUsersList.map(t => t.username).join(', ')} \r\n            {typingUsersList.length === 1 ? ' is' : ' are'} typing in {activeFile}...\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"editor-container\">\r\n        <div className=\"sidebar\">\r\n          <FileSidebar\r\n            files={Object.keys(files)}\r\n            activeFile={activeFile}\r\n            setActiveFile={handleFileSwitch}\r\n            onAddFile={() => setShowNewFileModal(true)}\r\n  onAddFolder={() => setShowNewFolderModal(true)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"main-editor\">\r\n          <div className=\"editor-header\">\r\n            <div className=\"file-info\">\r\n              <strong>{activeFile}</strong>\r\n              <span className=\"file-language\">({getLanguage(activeFile)})</span>\r\n            </div>\r\n            <button className=\"run-button\" onClick={handleRun}>\r\n              ▶ Run Code\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"editor-container-with-cursors\">\r\n            <Editor\r\n              height=\"50vh\"\r\n              language={getLanguage(activeFile)}\r\n              value={files[activeFile] || \"\"}\r\n              onChange={handleCodeChange}\r\n              onMount={editor => {\r\n                editorRef.current = editor;\r\n                // Add cursor tracking\r\n                editor.onDidChangeCursorPosition(() => {\r\n                  if (socketRef.current?.connected && !isUpdatingFromSocket.current) {\r\n                    const selection = editor.getSelection();\r\n                    if (selection) {\r\n                      const position = {\r\n                        lineNumber: selection.positionLineNumber,\r\n                        column: selection.positionColumn\r\n                      };\r\n                      \r\n                      socketRef.current.emit('cursor-position', {\r\n                        roomId,\r\n                        filePath: activeFile,\r\n                        position,\r\n                        username\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              }}\r\n              theme=\"vs-dark\"\r\n              options={{\r\n                minimap: { enabled: false },\r\n                fontSize: 14,\r\n                wordWrap: 'on',\r\n                automaticLayout: true,\r\n                scrollBeyondLastLine: false,\r\n                renderWhitespace: 'selection',\r\n                smoothScrolling: true,\r\n                cursorBlinking: 'smooth',\r\n                cursorSmoothCaretAnimation: true,\r\n              }}\r\n            />\r\n            \r\n            {/* Render other users' cursors */}\r\n            {Object.entries(userCursors).map(([userId, cursor]) => (\r\n              cursor.activeFile === activeFile && (\r\n                <div\r\n                  key={userId}\r\n                  className=\"user-cursor\"\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: `${(cursor.position?.lineNumber || 0) * 18}px`,\r\n                    left: `${(cursor.position?.column || 0) * 8}px`,\r\n                    borderLeft: `2px solid ${getUserColor(userId)}`,\r\n                    height: '18px',\r\n                    pointerEvents: 'none',\r\n                    zIndex: 1000,\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"user-cursor-label\"\r\n                    style={{\r\n                      backgroundColor: getUserColor(userId),\r\n                      color: 'white',\r\n                      padding: '2px 6px',\r\n                      borderRadius: '3px',\r\n                      fontSize: '11px',\r\n                      position: 'absolute',\r\n                      top: '-20px',\r\n                      left: '0',\r\n                      whiteSpace: 'nowrap',\r\n                    }}\r\n                  >\r\n                    {cursor.username}\r\n                  </div>\r\n                </div>\r\n              )\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"output-panel\">\r\n            <div className=\"output-header\">\r\n              <strong>Output Preview</strong>\r\n              <button className=\"refresh-output\" onClick={handleRun}>\r\n                🔄 Refresh\r\n              </button>\r\n            </div>\r\n            <iframe\r\n              ref={iframeRef}\r\n              title=\"Live Code Output\"\r\n              className=\"output-frame\"\r\n              sandbox=\"allow-scripts allow-same-origin allow-forms\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showNewFileModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Create New File</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"filename.html/.css/.js\"\r\n              value={newFileName}\r\n              onChange={(e) => setNewFileName(e.target.value)}\r\n            />\r\n            <div className=\"modal-actions\">\r\n              <button onClick={() => setShowNewFileModal(false)}>Cancel</button>\r\n              <button onClick={createNewFile}>Create</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showNewFolderModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Create New Folder</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Folder name\"\r\n              value={newFolderName}\r\n              onChange={(e) => setNewFolderName(e.target.value)}\r\n            />\r\n            <div className=\"modal-actions\">\r\n              <button onClick={() => setShowNewFolderModal(false)}>Cancel</button>\r\n              <button onClick={createNewFolder}>Create</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n   \r\n\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}\r\n\r\nexport default EditorPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AACvF,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,SAAS,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMkB,cAAc,GAAGlB,MAAM,CAAC,KAAK,CAAC;EACpC,MAAMmB,cAAc,GAAGnB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMoB,SAAS,GAAGpB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMqB,SAAS,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMsB,oBAAoB,GAAGtB,MAAM,CAAC,KAAK,CAAC;EAC1C,MAAMuB,mBAAmB,GAAGvB,MAAM,CAAC,CAAC,CAAC;EAErC,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,YAAY,CAAC;EAC1D,MAAM,CAAC6B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9B,QAAQ,CAAC,eAAe,CAAC;EACzE,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACuC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACyC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAAC2C,WAAW,EAAEC,cAAc,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC6C,aAAa,EAAEC,gBAAgB,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EACpD;EACA,MAAM+C,UAAU,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAChG,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC/B,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACnB,WAAW,CAAC,CAACoB,OAAO,CAACJ,MAAM,CAAC;IACtD,OAAOF,UAAU,CAACG,KAAK,GAAGH,UAAU,CAACO,MAAM,CAAC;EAC9C,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGtD,WAAW,CAC/BuD,QAAQ,CAAC,OAAO3C,MAAM,EAAE4C,QAAQ,EAAEC,OAAO,KAAK;IAC5C,IAAI;MACF,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QACjDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEnD,MAAM;UAAE4C,QAAQ;UAAEC;QAAQ,CAAC;MACpD,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAAC;IAC1C;EACF,CAAC,EAAE,IAAI,CAAC,EACR,EACF,CAAC;;EAED;;EAEA;EACA,MAAMG,gBAAgB,GAAGnE,WAAW,CAAEoE,SAAS,IAAK;IAClD,IAAIrD,SAAS,CAACsD,OAAO,EAAE;MACrBtD,SAAS,CAACsD,OAAO,CAACC,UAAU,CAAC,CAAC;IAChC;IAEA,MAAMC,MAAM,GAAGjE,EAAE,CAAC,uBAAuB,EAAE;MACzCkE,UAAU,EAAE,CAAC,WAAW,CAAC;MACzBC,OAAO,EAAE,KAAK;MACdC,oBAAoB,EAAE,CAAC;MACvBC,iBAAiB,EAAE,IAAI;MACvBC,OAAO,EAAE;IACX,CAAC,CAAC;IAEFL,MAAM,CAACM,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBZ,OAAO,CAACa,GAAG,CAAC,wBAAwB,CAAC;MACrCjD,mBAAmB,CAAC,WAAW,CAAC;MAChCZ,cAAc,CAACoD,OAAO,GAAGE,MAAM,CAACQ,EAAE;MAClCR,MAAM,CAACS,IAAI,CAAC,WAAW,EAAE;QACvBpE,MAAM;QACNU,QAAQ;QACRE,KAAK,EAAE4C;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFG,MAAM,CAACM,EAAE,CAAC,YAAY,EAAE,MAAM;MAC5BZ,OAAO,CAACa,GAAG,CAAC,6BAA6B,CAAC;MAC1CjD,mBAAmB,CAAC,cAAc,CAAC;IACrC,CAAC,CAAC;IAEF0C,MAAM,CAACM,EAAE,CAAC,WAAW,EAAE,MAAM;MAC3BZ,OAAO,CAACa,GAAG,CAAC,0BAA0B,CAAC;MACvCjD,mBAAmB,CAAC,WAAW,CAAC;MAChC0C,MAAM,CAACS,IAAI,CAAC,WAAW,EAAE;QACvBpE,MAAM;QACNU,QAAQ;QACRE,KAAK,EAAEA;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF+C,MAAM,CAACM,EAAE,CAAC,YAAY,EAAE,CAAC;MAAErD,KAAK,EAAEyD,SAAS;MAAEnD,KAAK,EAAEoD;IAAU,CAAC,KAAK;MAClEjB,OAAO,CAACa,GAAG,CAAC,yBAAyB,EAAE;QAAEtD,KAAK,EAAE0B,MAAM,CAACC,IAAI,CAAC8B,SAAS,CAAC;QAAEnD,KAAK,EAAEoD,SAAS,CAAC7B;MAAO,CAAC,CAAC;MAClG5B,QAAQ,CAACwD,SAAS,CAAC;MACnBlD,QAAQ,CAACmD,SAAS,CAAC;IACrB,CAAC,CAAC;IAEFX,MAAM,CAACM,EAAE,CAAC,aAAa,EAAE,CAAC;MAAEM,QAAQ;MAAEC,IAAI;MAAEC,MAAM;MAAEC,QAAQ;MAAEhE,QAAQ,EAAEiE;IAAe,CAAC,KAAK;MAC3F,IAAIF,MAAM,KAAKpE,cAAc,CAACoD,OAAO,EAAE;QACrCJ,OAAO,CAACa,GAAG,CAAC,qBAAqB,EAAES,cAAc,EAAE,KAAK,EAAEJ,QAAQ,CAAC;QAEnE/D,oBAAoB,CAACiD,OAAO,GAAG,IAAI;QAEnC5C,QAAQ,CAAC+D,IAAI,IAAI;UACf,MAAMC,QAAQ,GAAG;YAAE,GAAGD,IAAI;YAAE,CAACL,QAAQ,GAAGC;UAAK,CAAC;;UAE9C;UACA,IAAID,QAAQ,KAAKzD,UAAU,IAAIR,SAAS,CAACmD,OAAO,EAAE;YAChD,MAAMqB,KAAK,GAAGxE,SAAS,CAACmD,OAAO,CAACsB,QAAQ,CAAC,CAAC;YAC1C,IAAID,KAAK,IAAIA,KAAK,CAACE,QAAQ,CAAC,CAAC,KAAKR,IAAI,EAAE;cACtC;cACA,MAAMS,gBAAgB,GAAG3E,SAAS,CAACmD,OAAO,CAACyB,YAAY,CAAC,CAAC;cACzD,MAAMC,UAAU,GAAG7E,SAAS,CAACmD,OAAO,CAAC2B,YAAY,CAAC,CAAC;;cAEnD;cACAN,KAAK,CAACO,QAAQ,CAACb,IAAI,CAAC;;cAEpB;cACA,IAAIS,gBAAgB,IAAI,CAACP,QAAQ,EAAE;gBACjCpE,SAAS,CAACmD,OAAO,CAAC6B,YAAY,CAACL,gBAAgB,CAAC;gBAChD3E,SAAS,CAACmD,OAAO,CAAC8B,YAAY,CAACJ,UAAU,CAAC;cAC5C;YACF;UACF;UAEA,OAAON,QAAQ;QACjB,CAAC,CAAC;;QAEF;QACA,IAAIH,QAAQ,EAAE;UACZjD,cAAc,CAACmD,IAAI,KAAK;YACtB,GAAGA,IAAI;YACP,CAACH,MAAM,GAAG;cACR,GAAGG,IAAI,CAACH,MAAM,CAAC;cACfC,QAAQ;cACR5D,UAAU,EAAEyD,QAAQ;cACpB7D,QAAQ,EAAEiE;YACZ;UACF,CAAC,CAAC,CAAC;QACL;;QAEA;QACA,IAAIJ,QAAQ,KAAKzD,UAAU,EAAE;UAC3BS,cAAc,CAACqD,IAAI,KAAK;YACtB,GAAGA,IAAI;YACP,CAACH,MAAM,GAAG;cAAE/D,QAAQ,EAAEiE,cAAc;cAAEa,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;YAAE;UAC9D,CAAC,CAAC,CAAC;QACL;QAEAC,UAAU,CAAC,MAAM;UACfnF,oBAAoB,CAACiD,OAAO,GAAG,KAAK;QACtC,CAAC,EAAE,GAAG,CAAC;MACT;IACF,CAAC,CAAC;IAEFE,MAAM,CAACM,EAAE,CAAC,aAAa,EAAE,CAAC;MAAE7B,MAAM;MAAE1B,QAAQ,EAAEkF;IAAY,CAAC,KAAK;MAC9DvC,OAAO,CAACa,GAAG,CAAC,iBAAiB,EAAE0B,WAAW,CAAC;MAC3CzE,QAAQ,CAACyD,IAAI,IAAI;QACf,MAAMiB,MAAM,GAAGjB,IAAI,CAACkB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC5B,EAAE,KAAK/B,MAAM,CAAC;QAC9C,IAAI,CAACyD,MAAM,EAAE;UACX,OAAO,CAAC,GAAGjB,IAAI,EAAE;YAAET,EAAE,EAAE/B,MAAM;YAAE1B,QAAQ,EAAEkF;UAAY,CAAC,CAAC;QACzD;QACA,OAAOhB,IAAI;MACb,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFjB,MAAM,CAACM,EAAE,CAAC,WAAW,EAAE,CAAC;MAAE7B,MAAM;MAAE1B,QAAQ,EAAEsF;IAAa,CAAC,KAAK;MAC7D3C,OAAO,CAACa,GAAG,CAAC,eAAe,EAAE8B,YAAY,CAAC;MAC1C7E,QAAQ,CAACyD,IAAI,IAAIA,IAAI,CAACqB,MAAM,CAACF,CAAC,IAAIA,CAAC,CAAC5B,EAAE,KAAK/B,MAAM,CAAC,CAAC;MACnDf,cAAc,CAACuD,IAAI,IAAI;QACrB,MAAMsB,SAAS,GAAG;UAAE,GAAGtB;QAAK,CAAC;QAC7B,OAAOsB,SAAS,CAAC9D,MAAM,CAAC;QACxB,OAAO8D,SAAS;MAClB,CAAC,CAAC;MACFzE,cAAc,CAACmD,IAAI,IAAI;QACrB,MAAMuB,UAAU,GAAG;UAAE,GAAGvB;QAAK,CAAC;QAC9B,OAAOuB,UAAU,CAAC/D,MAAM,CAAC;QACzB,OAAO+D,UAAU;MACnB,CAAC,CAAC;MACF5E,cAAc,CAACqD,IAAI,IAAI;QACrB,MAAMwB,SAAS,GAAG;UAAE,GAAGxB;QAAK,CAAC;QAC7B,OAAOwB,SAAS,CAAChE,MAAM,CAAC;QACxB,OAAOgE,SAAS;MAClB,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFzC,MAAM,CAACM,EAAE,CAAC,iBAAiB,EAAE,CAAC;MAAE7B,MAAM;MAAE1B,QAAQ,EAAE2F,cAAc;MAAE3B,QAAQ;MAAE5D,UAAU,EAAEwF;IAAe,CAAC,KAAK;MAC3G,IAAIlE,MAAM,KAAK/B,cAAc,CAACoD,OAAO,IAAI6C,cAAc,KAAKxF,UAAU,EAAE;QACtEW,cAAc,CAACmD,IAAI,KAAK;UACtB,GAAGA,IAAI;UACP,CAACxC,MAAM,GAAG;YACRsC,QAAQ;YACR5D,UAAU,EAAEwF,cAAc;YAC1B5F,QAAQ,EAAE2F,cAAc;YACxBb,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;UACtB;QACF,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC;IAEF/B,MAAM,CAACM,EAAE,CAAC,aAAa,EAAE,CAAC;MAAE7B,MAAM;MAAE1B,QAAQ,EAAE6F,cAAc;MAAEhC;IAAS,CAAC,KAAK;MAC3E,IAAInC,MAAM,KAAK/B,cAAc,CAACoD,OAAO,IAAIc,QAAQ,KAAKzD,UAAU,EAAE;QAChES,cAAc,CAACqD,IAAI,KAAK;UACtB,GAAGA,IAAI;UACP,CAACxC,MAAM,GAAG;YAAE1B,QAAQ,EAAE6F,cAAc;YAAEf,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;UAAE;QAC9D,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC;IAEFvF,SAAS,CAACsD,OAAO,GAAGE,MAAM;IAC1B,OAAOA,MAAM;EACf,CAAC,EAAE,CAACjD,QAAQ,EAAEV,MAAM,EAAEc,UAAU,EAAEF,KAAK,CAAC,CAAC;;EAEzC;EACA3B,SAAS,CAAC,MAAM;IACd,MAAMuH,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMf,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MACtBnE,cAAc,CAACqD,IAAI,IAAI;QACrB,MAAM8B,OAAO,GAAG;UAAE,GAAG9B;QAAK,CAAC;QAC3BtC,MAAM,CAACC,IAAI,CAACmE,OAAO,CAAC,CAACC,OAAO,CAACvE,MAAM,IAAI;UACrC,IAAIsD,GAAG,GAAGgB,OAAO,CAACtE,MAAM,CAAC,CAACoD,SAAS,GAAG,IAAI,EAAE;YAC1C,OAAOkB,OAAO,CAACtE,MAAM,CAAC;UACxB;QACF,CAAC,CAAC;QACF,OAAOsE,OAAO;MAChB,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAME,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAvH,SAAS,CAAC,MAAM;IACd,IAAI,CAACe,MAAM,EAAE;MACXE,QAAQ,CAAC,OAAO,CAAC;MACjB;IACF;IAEA,IAAIE,cAAc,CAACqD,OAAO,EAAE;IAC5BrD,cAAc,CAACqD,OAAO,GAAG,IAAI;IAE7B,MAAMoD,IAAI,GAAI5G,QAAQ,CAAC6G,KAAK,IAAI7G,QAAQ,CAAC6G,KAAK,CAACpG,QAAQ,IAC1CqG,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAChC,OAAO;IACpBrG,WAAW,CAACkG,IAAI,CAAC;IAEjB,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMzD,SAAS,GAAG,MAAM0D,UAAU,CAAC,CAAC;QACpCrG,QAAQ,CAAC2C,SAAS,CAAC;QACnBD,gBAAgB,CAACC,SAAS,CAAC;QAC3BuD,YAAY,CAACI,OAAO,CAAC,UAAU,EAAEN,IAAI,CAAC;MACxC,CAAC,CAAC,OAAOvD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CrC,mBAAmB,CAAC,uBAAuB,CAAC;MAC9C;IACF,CAAC;IAEDgG,UAAU,CAAC,CAAC;IAEZ,OAAO,MAAM;MACX,IAAI9G,SAAS,CAACsD,OAAO,EAAE;QACrBtD,SAAS,CAACsD,OAAO,CAACC,UAAU,CAAC,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,CAAC1D,MAAM,EAAEE,QAAQ,EAAED,QAAQ,CAAC6G,KAAK,EAAEI,UAAU,EAAE3D,gBAAgB,CAAC,CAAC;;EAEpE;EACAtE,SAAS,CAAC,MAAM;IAAA,IAAAmI,kBAAA;IACd,IAAI,CAAC9G,SAAS,CAACmD,OAAO,IAAI,GAAA2D,kBAAA,GAACjH,SAAS,CAACsD,OAAO,cAAA2D,kBAAA,eAAjBA,kBAAA,CAAmBC,SAAS,GAAE;IAEzD,MAAMC,MAAM,GAAGhH,SAAS,CAACmD,OAAO;IAEhC,MAAM8D,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,IAAI/G,oBAAoB,CAACiD,OAAO,EAAE;MAElC,MAAM+D,SAAS,GAAGF,MAAM,CAACpC,YAAY,CAAC,CAAC;MACvC,IAAIsC,SAAS,EAAE;QACb,MAAM9C,QAAQ,GAAG;UACf+C,UAAU,EAAED,SAAS,CAACE,kBAAkB;UACxCC,MAAM,EAAEH,SAAS,CAACI;QACpB,CAAC;QAEDzH,SAAS,CAACsD,OAAO,CAACW,IAAI,CAAC,iBAAiB,EAAE;UACxCpE,MAAM;UACNuE,QAAQ,EAAEzD,UAAU;UACpB4D,QAAQ;UACRhE;QACF,CAAC,CAAC;MACJ;IACF,CAAC;IAED,MAAMmH,UAAU,GAAGP,MAAM,CAACQ,yBAAyB,CAACP,kBAAkB,CAAC;IACvE,OAAO,MAAMM,UAAU,CAACE,OAAO,CAAC,CAAC;EACnC,CAAC,EAAE,CAAC/H,MAAM,EAAEc,UAAU,EAAEJ,QAAQ,CAAC,CAAC;;EAElC;EACA,MAAMsH,gBAAgB,GAAG5I,WAAW,CAAE6I,KAAK,IAAK;IAC9C,IAAI,CAACA,KAAK,EAAEA,KAAK,GAAG,EAAE;IACtB,IAAIzH,oBAAoB,CAACiD,OAAO,EAAE;IAElC,MAAM+B,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAC5BjF,mBAAmB,CAACgD,OAAO,GAAG+B,SAAS;IAEvC3E,QAAQ,CAAC+D,IAAI,IAAI;MACf,IAAIA,IAAI,CAAC9D,UAAU,CAAC,KAAKmH,KAAK,EAAE;QAAA,IAAAC,mBAAA;QAC9B,MAAMrD,QAAQ,GAAG;UAAE,GAAGD,IAAI;UAAE,CAAC9D,UAAU,GAAGmH;QAAM,CAAC;QAEjD,KAAAC,mBAAA,GAAI/H,SAAS,CAACsD,OAAO,cAAAyE,mBAAA,eAAjBA,mBAAA,CAAmBb,SAAS,EAAE;UAAA,IAAAc,kBAAA;UAChC,MAAMX,SAAS,IAAAW,kBAAA,GAAG7H,SAAS,CAACmD,OAAO,cAAA0E,kBAAA,uBAAjBA,kBAAA,CAAmBjD,YAAY,CAAC,CAAC;UACnD,MAAMR,QAAQ,GAAG8C,SAAS,GAAG;YAC3BC,UAAU,EAAED,SAAS,CAACE,kBAAkB;YACxCC,MAAM,EAAEH,SAAS,CAACI;UACpB,CAAC,GAAG,IAAI;;UAER;UACAzH,SAAS,CAACsD,OAAO,CAACW,IAAI,CAAC,aAAa,EAAE;YACpCpE,MAAM;YACNuE,QAAQ,EAAEzD,UAAU;YACpB0D,IAAI,EAAEyD,KAAK;YACXvD,QAAQ;YACRc,SAAS;YACT9E;UACF,CAAC,CAAC;;UAEF;UACAP,SAAS,CAACsD,OAAO,CAACW,IAAI,CAAC,aAAa,EAAE;YACpCpE,MAAM;YACNuE,QAAQ,EAAEzD,UAAU;YACpBJ;UACF,CAAC,CAAC;QACJ;;QAEA;QACAgC,aAAa,CAAC1C,MAAM,EAAEc,UAAU,EAAEmH,KAAK,CAAC;QACxC,OAAOpD,QAAQ;MACjB;MACA,OAAOD,IAAI;IACb,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC9D,UAAU,EAAEd,MAAM,EAAE0C,aAAa,EAAEhC,QAAQ,CAAC,CAAC;EACnD,MAAM0H,aAAa,GAAGA,CAAA,KAAM;IAC1BzG,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAM0G,eAAe,GAAGA,CAAA,KAAM;IAC5BxG,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMyG,aAAa,GAAGA,CAAA,KAAM;IAAA,IAAAC,mBAAA;IAC1B,IAAI,CAACzG,WAAW,EAAE;IAElB,MAAM0G,OAAO,GAAG1G,WAAW,CAAC2G,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;IAC5C,IAAIC,cAAc,GAAG,EAAE;IAEvB,IAAIH,OAAO,KAAK,MAAM,EAAE;MACtBG,cAAc,GAAG,uGAAuG;IAC1H,CAAC,MAAM,IAAIH,OAAO,KAAK,KAAK,EAAE;MAC5BG,cAAc,GAAG,qBAAqB;IACxC,CAAC,MAAM,IAAIH,OAAO,KAAK,IAAI,EAAE;MAC3BG,cAAc,GAAG,yBAAyB;IAC5C;IAEA,MAAM9D,QAAQ,GAAG;MAAE,GAAGjE,KAAK;MAAE,CAACkB,WAAW,GAAG6G;IAAe,CAAC;IAC5D9H,QAAQ,CAACgE,QAAQ,CAAC;IAClB9D,aAAa,CAACe,WAAW,CAAC;IAC1BH,mBAAmB,CAAC,KAAK,CAAC;IAC1BI,cAAc,CAAC,EAAE,CAAC;;IAElB;IACAW,aAAa,CAAC1C,MAAM,EAAE8B,WAAW,EAAE6G,cAAc,CAAC;IAClD,KAAAJ,mBAAA,GAAIpI,SAAS,CAACsD,OAAO,cAAA8E,mBAAA,eAAjBA,mBAAA,CAAmBlB,SAAS,EAAE;MAChClH,SAAS,CAACsD,OAAO,CAACW,IAAI,CAAC,aAAa,EAAE;QACpCpE,MAAM;QACNuE,QAAQ,EAAEzC,WAAW;QACrB0C,IAAI,EAAEmE,cAAc;QACpBjI;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMkI,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAAC5G,aAAa,EAAE;;IAEpB;IACA;IACAH,qBAAqB,CAAC,KAAK,CAAC;IAC5BI,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EACC;EACA,MAAM4G,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAI,CAACjI,KAAK,IAAI,CAACL,SAAS,CAACkD,OAAO,EAAE;IAElC,MAAMqF,IAAI,GAAGlI,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE;IACtC,MAAMmI,GAAG,GAAGnI,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE;IACpC,MAAMoI,EAAE,GAAGpI,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE;IAEnC,MAAMqI,QAAQ,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmBF,GAAG;AACtB;AACA;AACA,YAAYD,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,cAAcE,EAAE;AAChB;AACA;AACA;AACA,KAAK;IAED,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,QAAQ,CAAC,EAAE;MAAEG,IAAI,EAAE;IAAY,CAAC,CAAC;IACxD,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IACrC3I,SAAS,CAACkD,OAAO,CAAC+F,GAAG,GAAGH,GAAG;IAC3B1D,UAAU,CAAC,MAAM2D,GAAG,CAACG,eAAe,CAACJ,GAAG,CAAC,EAAE,IAAI,CAAC;EAClD,CAAC;;EAED;EACA,MAAMK,gBAAgB,GAAIC,QAAQ,IAAK;IAAA,IAAAC,mBAAA;IACrC7I,aAAa,CAAC4I,QAAQ,CAAC;IACvB,KAAAC,mBAAA,GAAIzJ,SAAS,CAACsD,OAAO,cAAAmG,mBAAA,eAAjBA,mBAAA,CAAmBvC,SAAS,EAAE;MAChClH,SAAS,CAACsD,OAAO,CAACW,IAAI,CAAC,aAAa,EAAE;QACpCpE,MAAM;QACNuE,QAAQ,EAAEoF,QAAQ;QAClBjJ;MACF,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACAlB,eAAe,CAAC,MAAM;IACpB,IAAIW,SAAS,CAACsD,OAAO,EAAE;MACrBtD,SAAS,CAACsD,OAAO,CAACC,UAAU,CAAC,CAAC;IAChC;EACF,CAAC,CAAC;EAEF,MAAMmG,WAAW,GAAIC,IAAI,IAAK;IAC5B,IAAIA,IAAI,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE,OAAO,YAAY;IAC7C,IAAID,IAAI,CAACC,QAAQ,CAAC,OAAO,CAAC,EAAE,OAAO,MAAM;IACzC,IAAID,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,KAAK;IACvC,OAAO,WAAW;EACpB,CAAC;EAED,IAAI,CAACnJ,KAAK,EAAE;IACV,oBACEf,OAAA;MAAKmK,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BpK,OAAA;QAAKmK,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BpK,OAAA;UAAKmK,SAAS,EAAC;QAAiB;UAAAL,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OAAM,CAAC,eACvCtK,OAAA;UAAAoK,QAAA,EAAK;QAA+B;UAAAN,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OAAK,CAAC,eAC1CtK,OAAA;UAAKmK,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAEjJ;QAAgB;UAAA2I,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAR,QAAA,EAAAO,YAAA;QAAAzC,UAAA;QAAA0C,YAAA;MAAA,OACxD;IAAC;MAAAR,QAAA,EAAAO,YAAA;MAAAzC,UAAA;MAAA0C,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,MAAMC,eAAe,GAAG9H,MAAM,CAAC+H,MAAM,CAAC/I,WAAW,CAAC;EAElD,oBACEzB,OAAA;IAAKmK,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BpK,OAAA;MAAKmK,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCpK,OAAA;QAAKmK,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBpK,OAAA;UAAAoK,QAAA,EAAQ;QAAK;UAAAN,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACnK,MAAM,EAAC,KAAG,eAAAH,OAAA;UAAAoK,QAAA,EAAQ;QAAK;UAAAN,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACzJ,QAAQ,eAClEb,OAAA;UAAMmK,SAAS,EAAE,qBAAqBhJ,gBAAgB,KAAK,WAAW,GAAG,WAAW,GAAG,cAAc,EAAG;UAAAiJ,QAAA,GAAC,SACrG,EAACjJ,gBAAgB;QAAA;UAAA2I,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OACf,CAAC;MAAA;QAAAR,QAAA,EAAAO,YAAA;QAAAzC,UAAA;QAAA0C,YAAA;MAAA,OACJ,CAAC,eAENtK,OAAA;QAAKmK,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BpK,OAAA;UAAMmK,SAAS,EAAC,aAAa;UAAAC,QAAA,GAAC,UAAQ,EAAC/I,KAAK,CAACuB,MAAM,EAAC,IAAE;QAAA;UAAAkH,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OAAM,CAAC,EAC5DjJ,KAAK,CAACoJ,GAAG,CAACzD,IAAI,iBACbhH,OAAA;UAEEmK,SAAS,EAAC,YAAY;UACtBO,KAAK,EAAE;YAAEC,eAAe,EAAErI,YAAY,CAAC0E,IAAI,CAAC1C,EAAE;UAAE,CAAE;UAAA8F,QAAA,GAEjDpD,IAAI,CAACnG,QAAQ,EACbmG,IAAI,CAAC1C,EAAE,KAAK9D,cAAc,CAACoD,OAAO,IAAI,QAAQ;QAAA,GAL1CoD,IAAI,CAAC1C,EAAE;UAAAwF,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OAMT,CACN,CAAC;MAAA;QAAAR,QAAA,EAAAO,YAAA;QAAAzC,UAAA;QAAA0C,YAAA;MAAA,OACC,CAAC,EAELC,eAAe,CAAC3H,MAAM,GAAG,CAAC,iBACzB5C,OAAA;QAAKmK,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BpK,OAAA;UAAMmK,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAG;UAAAN,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OAAM,CAAC,EACvCC,eAAe,CAACE,GAAG,CAACG,CAAC,IAAIA,CAAC,CAAC/J,QAAQ,CAAC,CAACgK,IAAI,CAAC,IAAI,CAAC,EAC/CN,eAAe,CAAC3H,MAAM,KAAK,CAAC,GAAG,KAAK,GAAG,MAAM,EAAC,aAAW,EAAC3B,UAAU,EAAC,KACxE;MAAA;QAAA6I,QAAA,EAAAO,YAAA;QAAAzC,UAAA;QAAA0C,YAAA;MAAA,OAAK,CACN;IAAA;MAAAR,QAAA,EAAAO,YAAA;MAAAzC,UAAA;MAAA0C,YAAA;IAAA,OACE,CAAC,eAENtK,OAAA;MAAKmK,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BpK,OAAA;QAAKmK,SAAS,EAAC,SAAS;QAAAC,QAAA,eACtBpK,OAAA,CAACF,WAAW;UACViB,KAAK,EAAE0B,MAAM,CAACC,IAAI,CAAC3B,KAAK,CAAE;UAC1BE,UAAU,EAAEA,UAAW;UACvBC,aAAa,EAAE2I,gBAAiB;UAChCiB,SAAS,EAAEA,CAAA,KAAMhJ,mBAAmB,CAAC,IAAI,CAAE;UACrDiJ,WAAW,EAAEA,CAAA,KAAM/I,qBAAqB,CAAC,IAAI;QAAE;UAAA8H,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OACtC;MAAC;QAAAR,QAAA,EAAAO,YAAA;QAAAzC,UAAA;QAAA0C,YAAA;MAAA,OACC,CAAC,eAENtK,OAAA;QAAKmK,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BpK,OAAA;UAAKmK,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BpK,OAAA;YAAKmK,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBpK,OAAA;cAAAoK,QAAA,EAASnJ;YAAU;cAAA6I,QAAA,EAAAO,YAAA;cAAAzC,UAAA;cAAA0C,YAAA;YAAA,OAAS,CAAC,eAC7BtK,OAAA;cAAMmK,SAAS,EAAC,eAAe;cAAAC,QAAA,GAAC,GAAC,EAACJ,WAAW,CAAC/I,UAAU,CAAC,EAAC,GAAC;YAAA;cAAA6I,QAAA,EAAAO,YAAA;cAAAzC,UAAA;cAAA0C,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAR,QAAA,EAAAO,YAAA;YAAAzC,UAAA;YAAA0C,YAAA;UAAA,OAC/D,CAAC,eACNtK,OAAA;YAAQmK,SAAS,EAAC,YAAY;YAACa,OAAO,EAAEhC,SAAU;YAAAoB,QAAA,EAAC;UAEnD;YAAAN,QAAA,EAAAO,YAAA;YAAAzC,UAAA;YAAA0C,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAR,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OACN,CAAC,eAENtK,OAAA;UAAKmK,SAAS,EAAC,+BAA+B;UAAAC,QAAA,gBAC5CpK,OAAA,CAACJ,MAAM;YACLqL,MAAM,EAAC,MAAM;YACbC,QAAQ,EAAElB,WAAW,CAAC/I,UAAU,CAAE;YAClCmH,KAAK,EAAErH,KAAK,CAACE,UAAU,CAAC,IAAI,EAAG;YAC/BkK,QAAQ,EAAEhD,gBAAiB;YAC3BiD,OAAO,EAAE3D,MAAM,IAAI;cACjBhH,SAAS,CAACmD,OAAO,GAAG6D,MAAM;cAC1B;cACAA,MAAM,CAACQ,yBAAyB,CAAC,MAAM;gBAAA,IAAAoD,mBAAA;gBACrC,IAAI,CAAAA,mBAAA,GAAA/K,SAAS,CAACsD,OAAO,cAAAyH,mBAAA,eAAjBA,mBAAA,CAAmB7D,SAAS,IAAI,CAAC7G,oBAAoB,CAACiD,OAAO,EAAE;kBACjE,MAAM+D,SAAS,GAAGF,MAAM,CAACpC,YAAY,CAAC,CAAC;kBACvC,IAAIsC,SAAS,EAAE;oBACb,MAAM9C,QAAQ,GAAG;sBACf+C,UAAU,EAAED,SAAS,CAACE,kBAAkB;sBACxCC,MAAM,EAAEH,SAAS,CAACI;oBACpB,CAAC;oBAEDzH,SAAS,CAACsD,OAAO,CAACW,IAAI,CAAC,iBAAiB,EAAE;sBACxCpE,MAAM;sBACNuE,QAAQ,EAAEzD,UAAU;sBACpB4D,QAAQ;sBACRhE;oBACF,CAAC,CAAC;kBACJ;gBACF;cACF,CAAC,CAAC;YACJ,CAAE;YACFyK,KAAK,EAAC,SAAS;YACfC,OAAO,EAAE;cACPC,OAAO,EAAE;gBAAEC,OAAO,EAAE;cAAM,CAAC;cAC3BC,QAAQ,EAAE,EAAE;cACZC,QAAQ,EAAE,IAAI;cACdC,eAAe,EAAE,IAAI;cACrBC,oBAAoB,EAAE,KAAK;cAC3BC,gBAAgB,EAAE,WAAW;cAC7BC,eAAe,EAAE,IAAI;cACrBC,cAAc,EAAE,QAAQ;cACxBC,0BAA0B,EAAE;YAC9B;UAAE;YAAAnC,QAAA,EAAAO,YAAA;YAAAzC,UAAA;YAAA0C,YAAA;UAAA,OACH,CAAC,EAGD7H,MAAM,CAACyJ,OAAO,CAACvK,WAAW,CAAC,CAAC8I,GAAG,CAAC,CAAC,CAAClI,MAAM,EAAE4J,MAAM,CAAC;YAAA,IAAAC,gBAAA,EAAAC,iBAAA;YAAA,OAChDF,MAAM,CAAClL,UAAU,KAAKA,UAAU,iBAC9BjB,OAAA;cAEEmK,SAAS,EAAC,aAAa;cACvBO,KAAK,EAAE;gBACL7F,QAAQ,EAAE,UAAU;gBACpByH,GAAG,EAAE,GAAG,CAAC,EAAAF,gBAAA,GAAAD,MAAM,CAACtH,QAAQ,cAAAuH,gBAAA,uBAAfA,gBAAA,CAAiBxE,UAAU,KAAI,CAAC,IAAI,EAAE,IAAI;gBACnD2E,IAAI,EAAE,GAAG,CAAC,EAAAF,iBAAA,GAAAF,MAAM,CAACtH,QAAQ,cAAAwH,iBAAA,uBAAfA,iBAAA,CAAiBvE,MAAM,KAAI,CAAC,IAAI,CAAC,IAAI;gBAC/C0E,UAAU,EAAE,aAAalK,YAAY,CAACC,MAAM,CAAC,EAAE;gBAC/C0I,MAAM,EAAE,MAAM;gBACdwB,aAAa,EAAE,MAAM;gBACrBC,MAAM,EAAE;cACV,CAAE;cAAAtC,QAAA,eAEFpK,OAAA;gBACEmK,SAAS,EAAC,mBAAmB;gBAC7BO,KAAK,EAAE;kBACLC,eAAe,EAAErI,YAAY,CAACC,MAAM,CAAC;kBACrCoK,KAAK,EAAE,OAAO;kBACdC,OAAO,EAAE,SAAS;kBAClBC,YAAY,EAAE,KAAK;kBACnBnB,QAAQ,EAAE,MAAM;kBAChB7G,QAAQ,EAAE,UAAU;kBACpByH,GAAG,EAAE,OAAO;kBACZC,IAAI,EAAE,GAAG;kBACTO,UAAU,EAAE;gBACd,CAAE;gBAAA1C,QAAA,EAED+B,MAAM,CAACtL;cAAQ;gBAAAiJ,QAAA,EAAAO,YAAA;gBAAAzC,UAAA;gBAAA0C,YAAA;cAAA,OACb;YAAC,GA3BD/H,MAAM;cAAAuH,QAAA,EAAAO,YAAA;cAAAzC,UAAA;cAAA0C,YAAA;YAAA,OA4BR,CACN;UAAA,CACF,CAAC;QAAA;UAAAR,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OACC,CAAC,eAENtK,OAAA;UAAKmK,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BpK,OAAA;YAAKmK,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5BpK,OAAA;cAAAoK,QAAA,EAAQ;YAAc;cAAAN,QAAA,EAAAO,YAAA;cAAAzC,UAAA;cAAA0C,YAAA;YAAA,OAAQ,CAAC,eAC/BtK,OAAA;cAAQmK,SAAS,EAAC,gBAAgB;cAACa,OAAO,EAAEhC,SAAU;cAAAoB,QAAA,EAAC;YAEvD;cAAAN,QAAA,EAAAO,YAAA;cAAAzC,UAAA;cAAA0C,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAR,QAAA,EAAAO,YAAA;YAAAzC,UAAA;YAAA0C,YAAA;UAAA,OACN,CAAC,eACNtK,OAAA;YACE+M,GAAG,EAAErM,SAAU;YACfsM,KAAK,EAAC,kBAAkB;YACxB7C,SAAS,EAAC,cAAc;YACxB8C,OAAO,EAAC;UAA6C;YAAAnD,QAAA,EAAAO,YAAA;YAAAzC,UAAA;YAAA0C,YAAA;UAAA,OACtD,CAAC;QAAA;UAAAR,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OACC,CAAC;MAAA;QAAAR,QAAA,EAAAO,YAAA;QAAAzC,UAAA;QAAA0C,YAAA;MAAA,OACH,CAAC;IAAA;MAAAR,QAAA,EAAAO,YAAA;MAAAzC,UAAA;MAAA0C,YAAA;IAAA,OACH,CAAC,EACLzI,gBAAgB,iBACf7B,OAAA;MAAKmK,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BpK,OAAA;QAAKmK,SAAS,EAAC,OAAO;QAAAC,QAAA,gBACpBpK,OAAA;UAAAoK,QAAA,EAAI;QAAe;UAAAN,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OAAI,CAAC,eACxBtK,OAAA;UACEuJ,IAAI,EAAC,MAAM;UACX2D,WAAW,EAAC,wBAAwB;UACpC9E,KAAK,EAAEnG,WAAY;UACnBkJ,QAAQ,EAAGgC,CAAC,IAAKjL,cAAc,CAACiL,CAAC,CAACC,MAAM,CAAChF,KAAK;QAAE;UAAA0B,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OACjD,CAAC,eACFtK,OAAA;UAAKmK,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BpK,OAAA;YAAQgL,OAAO,EAAEA,CAAA,KAAMlJ,mBAAmB,CAAC,KAAK,CAAE;YAAAsI,QAAA,EAAC;UAAM;YAAAN,QAAA,EAAAO,YAAA;YAAAzC,UAAA;YAAA0C,YAAA;UAAA,OAAQ,CAAC,eAClEtK,OAAA;YAAQgL,OAAO,EAAEvC,aAAc;YAAA2B,QAAA,EAAC;UAAM;YAAAN,QAAA,EAAAO,YAAA;YAAAzC,UAAA;YAAA0C,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAR,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAR,QAAA,EAAAO,YAAA;QAAAzC,UAAA;QAAA0C,YAAA;MAAA,OACH;IAAC;MAAAR,QAAA,EAAAO,YAAA;MAAAzC,UAAA;MAAA0C,YAAA;IAAA,OACH,CACN,EAEAvI,kBAAkB,iBACjB/B,OAAA;MAAKmK,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BpK,OAAA;QAAKmK,SAAS,EAAC,OAAO;QAAAC,QAAA,gBACpBpK,OAAA;UAAAoK,QAAA,EAAI;QAAiB;UAAAN,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OAAI,CAAC,eAC1BtK,OAAA;UACEuJ,IAAI,EAAC,MAAM;UACX2D,WAAW,EAAC,aAAa;UACzB9E,KAAK,EAAEjG,aAAc;UACrBgJ,QAAQ,EAAGgC,CAAC,IAAK/K,gBAAgB,CAAC+K,CAAC,CAACC,MAAM,CAAChF,KAAK;QAAE;UAAA0B,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OACnD,CAAC,eACFtK,OAAA;UAAKmK,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BpK,OAAA;YAAQgL,OAAO,EAAEA,CAAA,KAAMhJ,qBAAqB,CAAC,KAAK,CAAE;YAAAoI,QAAA,EAAC;UAAM;YAAAN,QAAA,EAAAO,YAAA;YAAAzC,UAAA;YAAA0C,YAAA;UAAA,OAAQ,CAAC,eACpEtK,OAAA;YAAQgL,OAAO,EAAEjC,eAAgB;YAAAqB,QAAA,EAAC;UAAM;YAAAN,QAAA,EAAAO,YAAA;YAAAzC,UAAA;YAAA0C,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAR,QAAA,EAAAO,YAAA;UAAAzC,UAAA;UAAA0C,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAR,QAAA,EAAAO,YAAA;QAAAzC,UAAA;QAAA0C,YAAA;MAAA,OACH;IAAC;MAAAR,QAAA,EAAAO,YAAA;MAAAzC,UAAA;MAAA0C,YAAA;IAAA,OACH,CACN;EAAA;IAAAR,QAAA,EAAAO,YAAA;IAAAzC,UAAA;IAAA0C,YAAA;EAAA,OACE,CAAC;AAEV;AAACpK,EAAA,CAzoBQD,UAAU;EAAA,QACER,SAAS,EACXD,WAAW,EACXE,WAAW,EAgb5BC,eAAe;AAAA;AAAA0N,EAAA,GAnbRpN,UAAU;AA4oBnB,SAAS6C,QAAQA,CAACwK,IAAI,EAAEC,IAAI,EAAE;EAC5B,IAAIpJ,OAAO;EACX,OAAO,SAASqJ,gBAAgBA,CAAC,GAAGC,IAAI,EAAE;IACxC,MAAMC,KAAK,GAAGA,CAAA,KAAM;MAClBC,YAAY,CAACxJ,OAAO,CAAC;MACrBmJ,IAAI,CAAC,GAAGG,IAAI,CAAC;IACf,CAAC;IACDE,YAAY,CAACxJ,OAAO,CAAC;IACrBA,OAAO,GAAG2B,UAAU,CAAC4H,KAAK,EAAEH,IAAI,CAAC;EACnC,CAAC;AACH;AAEA,eAAetN,UAAU;AAAC,IAAAoN,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}