{"ast":null,"code":"var _jsxFileName = \"D:\\\\realtime-code-editor\\\\client\\\\src\\\\pages\\\\EditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { useLocation, useParams, useNavigate, useBeforeUnload } from 'react-router-dom';\nimport Editor from '@monaco-editor/react';\nimport { io } from 'socket.io-client';\nimport FileSidebar from '../components/FileSidebar';\nimport '../styles/editor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditorPage() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const socketRef = useRef(null);\n  const initializedRef = useRef(false);\n  const currentUserRef = useRef(null);\n  const editorRef = useRef(null);\n  const iframeRef = useRef(null);\n  const isUpdatingFromSocket = useRef(false);\n  const lastChangeTimestamp = useRef(0);\n  const [username, setUsername] = useState('');\n  const [files, setFiles] = useState(null);\n  const [activeFile, setActiveFile] = useState('index.html');\n  const [connectionStatus, setConnectionStatus] = useState('Connecting...');\n  const [users, setUsers] = useState([]);\n  const [activeUsers, setActiveUsers] = useState({});\n  const [typingUsers, setTypingUsers] = useState({});\n  const [userCursors, setUserCursors] = useState({});\n  const [showNewFileModal, setShowNewFileModal] = useState(false);\n  const [showNewFolderModal, setShowNewFolderModal] = useState(false);\n  const [newFileName, setNewFileName] = useState('');\n  const [newFolderName, setNewFolderName] = useState('');\n  // Add to your existing state\n  const [fileTree, setFileTree] = useState(null);\n  // Colors for different users\n  const userColors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD', '#98D8C8'];\n  const getUserColor = userId => {\n    const index = Object.keys(activeUsers).indexOf(userId);\n    return userColors[index % userColors.length];\n  };\n\n  // Debounced save function\n  const debouncedSave = useCallback(debounce(async (roomId, filename, content) => {\n    try {\n      await fetch('http://localhost:5000/api/code/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomId,\n          filename,\n          content\n        })\n      });\n    } catch (err) {\n      console.error('Error saving file:', err);\n    }\n  }, 2000), []);\n  const loadFiles = async () => {\n    const {\n      files,\n      tree\n    } = await fetchFiles();\n    setFiles(files);\n    setFileTree(tree);\n    setActiveFile('index.html');\n  };\n  // Fetch files from backend\n  const fetchFiles = useCallback(async () => {\n    if (!roomId) return;\n    try {\n      const response = await fetch(`http://localhost:5000/api/code/${roomId}`);\n      if (!response.ok) {\n        if (response.status === 404) {\n          // Create default files structure\n          const defaultFiles = {\n            'index.html': '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>',\n            'style.css': '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}',\n            'script.js': '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");'\n          };\n\n          // Save default files to database\n          await Promise.all(Object.entries(defaultFiles).map(([filename, content]) => debouncedSave(roomId, filename, content)));\n\n          // Create default tree structure\n          const defaultTree = {\n            name: 'root',\n            type: 'folder',\n            path: '',\n            children: [{\n              name: 'index.html',\n              type: 'file',\n              path: 'index.html',\n              content: defaultFiles['index.html']\n            }, {\n              name: 'style.css',\n              type: 'file',\n              path: 'style.css',\n              content: defaultFiles['style.css']\n            }, {\n              name: 'script.js',\n              type: 'file',\n              path: 'script.js',\n              content: defaultFiles['script.js']\n            }]\n          };\n          return {\n            files: defaultFiles,\n            tree: defaultTree\n          };\n        }\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const {\n        files,\n        tree\n      } = await response.json();\n\n      // Ensure required files exist\n      const requiredFiles = ['index.html', 'style.css', 'script.js'];\n      const completeFiles = {\n        ...files\n      };\n      requiredFiles.forEach(file => {\n        if (!completeFiles[file]) {\n          completeFiles[file] = file.endsWith('.html') ? '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>' : file.endsWith('.css') ? '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}' : '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");';\n\n          // Add missing file to tree if it doesn't exist\n          if (!tree.children.some(child => child.name === file)) {\n            tree.children.push({\n              name: file,\n              type: 'file',\n              path: file,\n              content: completeFiles[file]\n            });\n          }\n        }\n      });\n      return {\n        files: completeFiles,\n        tree: tree\n      };\n    } catch (error) {\n      console.error('Error loading files:', error);\n\n      // Fallback to default structure\n      const defaultFiles = {\n        'index.html': '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>',\n        'style.css': '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}',\n        'script.js': '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");'\n      };\n      const defaultTree = {\n        name: 'root',\n        type: 'folder',\n        path: '',\n        children: [{\n          name: 'index.html',\n          type: 'file',\n          path: 'index.html',\n          content: defaultFiles['index.html']\n        }, {\n          name: 'style.css',\n          type: 'file',\n          path: 'style.css',\n          content: defaultFiles['style.css']\n        }, {\n          name: 'script.js',\n          type: 'file',\n          path: 'script.js',\n          content: defaultFiles['script.js']\n        }]\n      };\n      return {\n        files: defaultFiles,\n        tree: defaultTree\n      };\n    }\n  }, [roomId, debouncedSave]);\n  // Initialize socket connection\n  const initializeSocket = useCallback(filesData => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    const socket = io('http://localhost:5000', {\n      transports: ['websocket'],\n      upgrade: false,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      timeout: 10000\n    });\n    socket.on('connect', () => {\n      console.log('🟢 Connected to server');\n      setConnectionStatus('Connected');\n      currentUserRef.current = socket.id;\n      socket.emit('join-room', {\n        roomId,\n        username,\n        files: filesData\n      });\n    });\n    socket.on('disconnect', () => {\n      console.log('🔴 Disconnected from server');\n      setConnectionStatus('Disconnected');\n    });\n    socket.on('reconnect', () => {\n      console.log('🟡 Reconnected to server');\n      setConnectionStatus('Connected');\n      socket.emit('join-room', {\n        roomId,\n        username,\n        files: files\n      });\n    });\n    socket.on('room-state', ({\n      files: roomFiles,\n      users: roomUsers\n    }) => {\n      console.log('📋 Received room state:', {\n        files: Object.keys(roomFiles),\n        users: roomUsers.length\n      });\n      setFiles(roomFiles);\n      setUsers(roomUsers);\n    });\n    socket.on('code-update', ({\n      filePath,\n      code,\n      sender,\n      position,\n      username: senderUsername\n    }) => {\n      if (sender !== currentUserRef.current) {\n        console.log('📝 Code update from', senderUsername, 'for', filePath);\n        isUpdatingFromSocket.current = true;\n\n        // Update both files state and file tree state in a single batch\n        setFiles(prevFiles => {\n          const newFiles = {\n            ...prevFiles,\n            [filePath]: code\n          };\n\n          // Update editor content if it's the active file\n          if (filePath === activeFile && editorRef.current) {\n            const model = editorRef.current.getModel();\n            if (model && model.getValue() !== code) {\n              // Save current cursor position\n              const currentSelection = editorRef.current.getSelection();\n              const scrollInfo = editorRef.current.getScrollTop();\n\n              // Update content\n              model.setValue(code);\n\n              // Restore cursor position if it was the current user's cursor\n              if (currentSelection && !position) {\n                editorRef.current.setSelection(currentSelection);\n                editorRef.current.setScrollTop(scrollInfo);\n              }\n            }\n          }\n          return newFiles;\n        });\n        // Handle remote file deletion\n\n        // Handle remote file rename\n\n        // Update the file tree structure\n        setFileTree(prevTree => {\n          if (!prevTree) return prevTree;\n\n          // Create a deep clone of the tree\n          const newTree = JSON.parse(JSON.stringify(prevTree));\n\n          // Function to find and update the file in the tree\n          const updateFileContent = nodes => {\n            for (let node of nodes) {\n              if (node.path === filePath && node.type === 'file') {\n                node.content = code;\n                return true;\n              }\n              if (node.children && updateFileContent(node.children)) {\n                return true;\n              }\n            }\n            return false;\n          };\n          updateFileContent(newTree.children);\n          return newTree;\n        });\n\n        // Update user cursor position\n        if (position) {\n          setUserCursors(prev => ({\n            ...prev,\n            [sender]: {\n              ...prev[sender],\n              position,\n              activeFile: filePath,\n              username: senderUsername\n            }\n          }));\n        }\n\n        // Show typing indicator\n        if (filePath === activeFile) {\n          setTypingUsers(prev => ({\n            ...prev,\n            [sender]: {\n              username: senderUsername,\n              timestamp: Date.now()\n            }\n          }));\n        }\n        setTimeout(() => {\n          isUpdatingFromSocket.current = false;\n        }, 100);\n      }\n    });\n    socket.on('file-deleted', ({\n      path\n    }) => {\n      setFiles(prev => {\n        const newFiles = {\n          ...prev\n        };\n        delete newFiles[path];\n        return newFiles;\n      });\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n        const newTree = JSON.parse(JSON.stringify(prevTree));\n        const removeNode = nodes => {\n          for (let i = 0; i < nodes.length; i++) {\n            if (nodes[i].path === path) {\n              nodes.splice(i, 1);\n              return true;\n            }\n            if (nodes[i].children && removeNode(nodes[i].children)) {\n              return true;\n            }\n          }\n          return false;\n        };\n        removeNode(newTree.children);\n        return newTree;\n      });\n    });\n    socket.on('user-joined', ({\n      userId,\n      username: newUsername\n    }) => {\n      console.log('👤 User joined:', newUsername);\n      setUsers(prev => {\n        const exists = prev.find(u => u.id === userId);\n        if (!exists) {\n          return [...prev, {\n            id: userId,\n            username: newUsername\n          }];\n        }\n        return prev;\n      });\n    });\n    socket.on('user-left', ({\n      userId,\n      username: leftUsername\n    }) => {\n      console.log('👤 User left:', leftUsername);\n      setUsers(prev => prev.filter(u => u.id !== userId));\n      setActiveUsers(prev => {\n        const newActive = {\n          ...prev\n        };\n        delete newActive[userId];\n        return newActive;\n      });\n      setUserCursors(prev => {\n        const newCursors = {\n          ...prev\n        };\n        delete newCursors[userId];\n        return newCursors;\n      });\n      setTypingUsers(prev => {\n        const newTyping = {\n          ...prev\n        };\n        delete newTyping[userId];\n        return newTyping;\n      });\n    });\n    socket.on('cursor-position', ({\n      userId,\n      username: cursorUsername,\n      position,\n      activeFile: userActiveFile\n    }) => {\n      if (userId !== currentUserRef.current && userActiveFile === activeFile) {\n        setUserCursors(prev => ({\n          ...prev,\n          [userId]: {\n            position,\n            activeFile: userActiveFile,\n            username: cursorUsername,\n            timestamp: Date.now()\n          }\n        }));\n      }\n    });\n    socket.on('user-typing', ({\n      userId,\n      username: typingUsername,\n      filePath\n    }) => {\n      if (userId !== currentUserRef.current && filePath === activeFile) {\n        setTypingUsers(prev => ({\n          ...prev,\n          [userId]: {\n            username: typingUsername,\n            timestamp: Date.now()\n          }\n        }));\n      }\n    });\n    // Listen for remote file creation\n    socket.on('remote-file-created', ({\n      filePath,\n      content\n    }) => {\n      setFiles(prev => ({\n        ...prev,\n        [filePath]: content\n      }));\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n        const newTree = JSON.parse(JSON.stringify(prevTree)); // Deep copy\n        const parts = filePath.split('/');\n        const fileName = parts.pop(); // last item is the file name\n        const folderPathParts = parts;\n        let current = newTree;\n        for (const part of folderPathParts) {\n          let folder = current.children.find(child => child.name === part && child.type === 'folder');\n          if (!folder) {\n            folder = {\n              name: part,\n              type: 'folder',\n              path: (current.path || '') + part + '/',\n              children: []\n            };\n            current.children.push(folder);\n          }\n          current = folder;\n        }\n\n        // Add the new file under the right folder\n        current.children.push({\n          name: fileName,\n          type: 'file',\n          path: filePath,\n          content\n        });\n        return newTree;\n      });\n    });\n\n    // Listen for remote folder creation\n    socket.on('remote-folder-created', ({\n      path\n    }) => {\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n        const exists = prevTree.children.some(child => child.path === path);\n        if (!exists) {\n          return {\n            ...prevTree,\n            children: [...prevTree.children, {\n              name: path.replace(/\\/$/, '').split('/').pop(),\n              type: 'folder',\n              path,\n              children: []\n            }]\n          };\n        }\n        return prevTree;\n      });\n    });\n    socketRef.current = socket;\n    return socket;\n  }, [username, roomId, activeFile, files]);\n\n  // Clear old typing indicators\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      setTypingUsers(prev => {\n        const updated = {\n          ...prev\n        };\n        Object.keys(updated).forEach(userId => {\n          if (now - updated[userId].timestamp > 3000) {\n            delete updated[userId];\n          }\n        });\n        return updated;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Main initialization effect\n  useEffect(() => {\n    if (!roomId) {\n      navigate('/room');\n      return;\n    }\n    if (initializedRef.current) return;\n    initializedRef.current = true;\n    const user = location.state && location.state.username || localStorage.getItem('username') || 'Guest';\n    setUsername(user);\n    const initialize = async () => {\n      try {\n        // 1. Fetch files - now returns { files, tree }\n        const {\n          files: filesData,\n          tree\n        } = await fetchFiles();\n\n        // 2. Set both states\n        setFiles(filesData);\n        setFileTree(tree); // Make sure you have this state: const [fileTree, setFileTree] = useState(null);\n\n        // 3. Initialize socket with the flat files data\n        initializeSocket(filesData);\n\n        // 4. Set username (unchanged)\n        localStorage.setItem('username', user);\n\n        // 5. Set default active file if needed\n        if (!activeFile) {\n          setActiveFile('index.html');\n        }\n      } catch (error) {\n        console.error('Initialization error:', error);\n        setConnectionStatus('Initialization failed');\n      }\n    };\n    initialize();\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [roomId, navigate, location.state, fetchFiles, initializeSocket]);\n\n  // Track cursor position more frequently\n  useEffect(() => {\n    var _socketRef$current;\n    if (!editorRef.current || !((_socketRef$current = socketRef.current) !== null && _socketRef$current !== void 0 && _socketRef$current.connected)) return;\n    const editor = editorRef.current;\n    const handleCursorChange = () => {\n      if (isUpdatingFromSocket.current) return;\n      const selection = editor.getSelection();\n      if (selection) {\n        const position = {\n          lineNumber: selection.positionLineNumber,\n          column: selection.positionColumn\n        };\n        socketRef.current.emit('cursor-position', {\n          roomId,\n          filePath: activeFile,\n          position,\n          username\n        });\n      }\n    };\n    const disposable = editor.onDidChangeCursorPosition(handleCursorChange);\n    return () => disposable.dispose();\n  }, [roomId, activeFile, username]);\n\n  // Handle code changes with real-time sync\n  const handleCodeChange = useCallback(value => {\n    if (!value) value = '';\n    if (isUpdatingFromSocket.current) return;\n    const timestamp = Date.now();\n    lastChangeTimestamp.current = timestamp;\n    setFiles(prev => {\n      if (prev[activeFile] !== value) {\n        var _socketRef$current2;\n        const newFiles = {\n          ...prev,\n          [activeFile]: value\n        };\n        if ((_socketRef$current2 = socketRef.current) !== null && _socketRef$current2 !== void 0 && _socketRef$current2.connected) {\n          var _editorRef$current;\n          const selection = (_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.getSelection();\n          const position = selection ? {\n            lineNumber: selection.positionLineNumber,\n            column: selection.positionColumn\n          } : null;\n\n          // Emit real-time changes\n          socketRef.current.emit('code-change', {\n            roomId,\n            filePath: activeFile,\n            code: value,\n            position,\n            timestamp,\n            username\n          });\n\n          // Emit typing indicator\n          socketRef.current.emit('user-typing', {\n            roomId,\n            filePath: activeFile,\n            username\n          });\n        }\n\n        // Debounced save to database\n        debouncedSave(roomId, activeFile, value);\n        return newFiles;\n      }\n      return prev;\n    });\n  }, [activeFile, roomId, debouncedSave, username]);\n  const handleAddFile = () => {\n    setShowNewFileModal(true);\n  };\n  const handleAddFolder = () => {\n    setShowNewFolderModal(true);\n  };\n  const createNewFile = async () => {\n    if (!newFileName) return;\n    const fileExt = newFileName.split('.').pop();\n    let defaultContent = '';\n    if (fileExt === 'html') {\n      defaultContent = '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>New File</title>\\n</head>\\n<body>\\n    \\n</body>\\n</html>';\n    } else if (fileExt === 'css') {\n      defaultContent = '/* Your CSS here */';\n    } else if (fileExt === 'js') {\n      defaultContent = '// Your JavaScript here';\n    }\n    try {\n      var _socketRef$current3, _socketRef$current4;\n      // Save to backend first\n      await fetch('http://localhost:5000/api/code/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomId,\n          filePath: newFileName,\n          content: defaultContent\n        })\n      });\n\n      // Then update local state\n      setFiles(prev => ({\n        ...prev,\n        [newFileName]: defaultContent\n      }));\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n\n        // Check if file already exists in tree\n        const exists = prevTree.children.some(child => child.path === newFileName);\n        if (!exists) {\n          return {\n            ...prevTree,\n            children: [...prevTree.children, {\n              name: newFileName,\n              type: 'file',\n              path: newFileName,\n              content: defaultContent\n            }]\n          };\n        }\n        return prevTree;\n      });\n      if ((_socketRef$current3 = socketRef.current) !== null && _socketRef$current3 !== void 0 && _socketRef$current3.connected) {\n        socketRef.current.emit('new-file-created', {\n          roomId,\n          filePath: newFileName,\n          content: defaultContent,\n          username\n        });\n      }\n      setActiveFile(newFileName);\n      setShowNewFileModal(false);\n      setNewFileName('');\n\n      // Notify other users\n      if ((_socketRef$current4 = socketRef.current) !== null && _socketRef$current4 !== void 0 && _socketRef$current4.connected) {\n        socketRef.current.emit('code-change', {\n          roomId,\n          filePath: newFileName,\n          code: defaultContent,\n          username\n        });\n      }\n    } catch (error) {\n      console.error('Error creating file:', error);\n    }\n  };\n  const createFileAtPath = async path => {\n    var _socketRef$current5;\n    const fileExt = path.split('.').pop();\n    let defaultContent = '';\n    if (fileExt === 'html') defaultContent = '<!DOCTYPE html>\\n<html>\\n<head>\\n<title></title>\\n</head>\\n<body>\\n</body>\\n</html>';\n    if (fileExt === 'css') defaultContent = '/* CSS here */';\n    if (fileExt === 'js') defaultContent = '// JS here';\n    await fetch('http://localhost:5000/api/code/save', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        roomId,\n        filePath: path,\n        content: defaultContent\n      })\n    });\n    setFiles(prev => ({\n      ...prev,\n      [path]: defaultContent\n    }));\n    setFileTree(prevTree => {\n      if (!prevTree) return prevTree;\n      const newNode = {\n        name: path.split('/').pop(),\n        type: 'file',\n        path,\n        content: defaultContent\n      };\n\n      // Recursively insert file under the correct folder\n      const insertFile = (tree, folderPath) => {\n        if (tree.path === folderPath) {\n          tree.children.push(newNode);\n          return true;\n        }\n        for (const child of tree.children) {\n          if (child.type === 'folder' && insertFile(child, folderPath)) return true;\n        }\n        return false;\n      };\n      const updatedTree = JSON.parse(JSON.stringify(prevTree));\n      insertFile(updatedTree, path.substring(0, path.lastIndexOf('/') + 1));\n      return updatedTree;\n    });\n    if ((_socketRef$current5 = socketRef.current) !== null && _socketRef$current5 !== void 0 && _socketRef$current5.connected) {\n      socketRef.current.emit('new-file-created', {\n        roomId,\n        filePath: path,\n        content: defaultContent,\n        username\n      });\n    }\n  };\n  const createNewFolder = async () => {\n    if (!newFolderName) return;\n    try {\n      var _socketRef$current6;\n      // Ensure folder path ends with /\n      const folderPath = newFolderName.endsWith('/') ? newFolderName : `${newFolderName}/`;\n\n      // Save to backend\n      await fetch('http://localhost:5000/api/code/createFolder', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomId,\n          path: folderPath\n        })\n      });\n\n      // Update local state\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n\n        // Check if folder already exists\n        const exists = prevTree.children.some(child => child.path === folderPath);\n        if (!exists) {\n          return {\n            ...prevTree,\n            children: [...prevTree.children, {\n              name: newFolderName,\n              type: 'folder',\n              path: folderPath,\n              children: []\n            }]\n          };\n        }\n        return prevTree;\n      });\n      setShowNewFolderModal(false);\n      setNewFolderName('');\n      if ((_socketRef$current6 = socketRef.current) !== null && _socketRef$current6 !== void 0 && _socketRef$current6.connected) {\n        socketRef.current.emit('new-folder-created', {\n          roomId,\n          path: folderPath,\n          username\n        });\n      }\n    } catch (error) {\n      console.error('Error creating folder:', error);\n    }\n  };\n  // Handle running the code\n  const handleRun = () => {\n    if (!files || !iframeRef.current) return;\n    const html = files['index.html'] || '';\n    const css = files['style.css'] || '';\n    const js = files['script.js'] || '';\n    const combined = `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <style>${css}</style>\n        </head>\n        <body>\n          ${html}\n          <script>\n            // Error handling for iframe\n            window.onerror = function(msg, url, line, col, error) {\n              console.error('Error:', msg, 'at', line + ':' + col);\n              return false;\n            };\n            ${js}\n          </script>\n        </body>\n      </html>\n    `;\n    const blob = new Blob([combined], {\n      type: 'text/html'\n    });\n    const url = URL.createObjectURL(blob);\n    iframeRef.current.src = url;\n    setTimeout(() => URL.revokeObjectURL(url), 1000);\n  };\n\n  // Handle file switching\n  const handleFileSwitch = fileName => {\n    var _socketRef$current7;\n    setActiveFile(fileName);\n    if ((_socketRef$current7 = socketRef.current) !== null && _socketRef$current7 !== void 0 && _socketRef$current7.connected) {\n      socketRef.current.emit('file-switch', {\n        roomId,\n        filePath: fileName,\n        username\n      });\n    }\n  };\n\n  // Cleanup on page unload\n  useBeforeUnload(() => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n  });\n  const getLanguage = file => {\n    if (file.endsWith('.js')) return 'javascript';\n    if (file.endsWith('.html')) return 'html';\n    if (file.endsWith('.css')) return 'css';\n    return 'plaintext';\n  };\n  if (!files || !fileTree) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading collaborative editor...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status\",\n          children: connectionStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 7\n    }, this);\n  }\n  const typingUsersList = Object.values(typingUsers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collaboration-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Room:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 11\n        }, this), \" \", roomId, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 45\n        }, this), \" \", username, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `connection-status ${connectionStatus === 'Connected' ? 'connected' : 'disconnected'}`,\n          children: [\"\\u25CF \", connectionStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"online-users\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"users-label\",\n          children: [\"Online (\", users.length, \"):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 11\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-badge\",\n          style: {\n            backgroundColor: getUserColor(user.id)\n          },\n          children: [user.username, user.id === currentUserRef.current && ' (You)']\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 9\n      }, this), typingUsersList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"typing-dots\",\n          children: \"\\u25CF\\u25CF\\u25CF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 13\n        }, this), typingUsersList.map(t => t.username).join(', '), typingUsersList.length === 1 ? ' is' : ' are', \" typing in \", activeFile, \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 911,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: /*#__PURE__*/_jsxDEV(FileSidebar, {\n          tree: fileTree,\n          activeFile: activeFile,\n          setActiveFile: handleFileSwitch,\n          onAddFile: handleAddFile,\n          onAddFolder: handleAddFolder,\n          onAddFileToFolder: createFileAtPath,\n          roomId: roomId,\n          setFiles: setFiles // Pass down the setter\n          ,\n          setFileTree: setFileTree // Pass down the setter\n          ,\n          socketRef: socketRef // Pass down the ref\n          ,\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: activeFile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-language\",\n              children: [\"(\", getLanguage(activeFile), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 940,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"run-button\",\n            onClick: handleRun,\n            children: \"\\u25B6 Run Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 942,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-container-with-cursors\",\n          children: [/*#__PURE__*/_jsxDEV(Editor, {\n            height: \"50vh\",\n            language: getLanguage(activeFile),\n            value: files[activeFile] || \"\",\n            onChange: handleCodeChange,\n            onMount: editor => {\n              editorRef.current = editor;\n              // Add cursor tracking\n              editor.onDidChangeCursorPosition(() => {\n                var _socketRef$current8;\n                if ((_socketRef$current8 = socketRef.current) !== null && _socketRef$current8 !== void 0 && _socketRef$current8.connected && !isUpdatingFromSocket.current) {\n                  const selection = editor.getSelection();\n                  if (selection) {\n                    const position = {\n                      lineNumber: selection.positionLineNumber,\n                      column: selection.positionColumn\n                    };\n                    socketRef.current.emit('cursor-position', {\n                      roomId,\n                      filePath: activeFile,\n                      position,\n                      username\n                    });\n                  }\n                }\n              });\n            },\n            theme: \"vs-dark\",\n            options: {\n              minimap: {\n                enabled: false\n              },\n              fontSize: 14,\n              wordWrap: 'on',\n              automaticLayout: true,\n              scrollBeyondLastLine: false,\n              renderWhitespace: 'selection',\n              smoothScrolling: true,\n              cursorBlinking: 'smooth',\n              cursorSmoothCaretAnimation: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 948,\n            columnNumber: 13\n          }, this), Object.entries(userCursors).map(([userId, cursor]) => {\n            var _cursor$position, _cursor$position2;\n            return cursor.activeFile === activeFile && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-cursor\",\n              style: {\n                position: 'absolute',\n                top: `${(((_cursor$position = cursor.position) === null || _cursor$position === void 0 ? void 0 : _cursor$position.lineNumber) || 0) * 18}px`,\n                left: `${(((_cursor$position2 = cursor.position) === null || _cursor$position2 === void 0 ? void 0 : _cursor$position2.column) || 0) * 8}px`,\n                borderLeft: `2px solid ${getUserColor(userId)}`,\n                height: '18px',\n                pointerEvents: 'none',\n                zIndex: 1000\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-cursor-label\",\n                style: {\n                  backgroundColor: getUserColor(userId),\n                  color: 'white',\n                  padding: '2px 6px',\n                  borderRadius: '3px',\n                  fontSize: '11px',\n                  position: 'absolute',\n                  top: '-20px',\n                  left: '0',\n                  whiteSpace: 'nowrap'\n                },\n                children: cursor.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 19\n              }, this)\n            }, userId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 992,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 947,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Output Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1028,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"refresh-output\",\n              onClick: handleRun,\n              children: \"\\uD83D\\uDD04 Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1029,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            ref: iframeRef,\n            title: \"Live Code Output\",\n            className: \"output-frame\",\n            sandbox: \"allow-scripts allow-same-origin allow-forms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1033,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 7\n    }, this), showNewFileModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"filename.html/.css/.js\",\n          value: newFileName,\n          onChange: e => setNewFileName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowNewFileModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createNewFile,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1054,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 9\n    }, this), showNewFolderModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Folder name\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowNewFolderModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1071,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createNewFolder,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1070,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 887,\n    columnNumber: 5\n  }, this);\n}\n_s(EditorPage, \"oDOZax4eRIAnyaQFiN0xirCywwM=\", false, function () {\n  return [useParams, useLocation, useNavigate, useBeforeUnload];\n});\n_c = EditorPage;\nfunction debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","useLocation","useParams","useNavigate","useBeforeUnload","Editor","io","FileSidebar","jsxDEV","_jsxDEV","EditorPage","_s","roomId","location","navigate","socketRef","initializedRef","currentUserRef","editorRef","iframeRef","isUpdatingFromSocket","lastChangeTimestamp","username","setUsername","files","setFiles","activeFile","setActiveFile","connectionStatus","setConnectionStatus","users","setUsers","activeUsers","setActiveUsers","typingUsers","setTypingUsers","userCursors","setUserCursors","showNewFileModal","setShowNewFileModal","showNewFolderModal","setShowNewFolderModal","newFileName","setNewFileName","newFolderName","setNewFolderName","fileTree","setFileTree","userColors","getUserColor","userId","index","Object","keys","indexOf","length","debouncedSave","debounce","filename","content","fetch","method","headers","body","JSON","stringify","err","console","error","loadFiles","tree","fetchFiles","response","ok","status","defaultFiles","Promise","all","entries","map","defaultTree","name","type","path","children","Error","json","requiredFiles","completeFiles","forEach","file","endsWith","some","child","push","initializeSocket","filesData","current","disconnect","socket","transports","upgrade","reconnectionAttempts","reconnectionDelay","timeout","on","log","id","emit","roomFiles","roomUsers","filePath","code","sender","position","senderUsername","prevFiles","newFiles","model","getModel","getValue","currentSelection","getSelection","scrollInfo","getScrollTop","setValue","setSelection","setScrollTop","prevTree","newTree","parse","updateFileContent","nodes","node","prev","timestamp","Date","now","setTimeout","removeNode","i","splice","newUsername","exists","find","u","leftUsername","filter","newActive","newCursors","newTyping","cursorUsername","userActiveFile","typingUsername","parts","split","fileName","pop","folderPathParts","part","folder","replace","interval","setInterval","updated","clearInterval","user","state","localStorage","getItem","initialize","setItem","_socketRef$current","connected","editor","handleCursorChange","selection","lineNumber","positionLineNumber","column","positionColumn","disposable","onDidChangeCursorPosition","dispose","handleCodeChange","value","_socketRef$current2","_editorRef$current","handleAddFile","handleAddFolder","createNewFile","fileExt","defaultContent","_socketRef$current3","_socketRef$current4","createFileAtPath","_socketRef$current5","newNode","insertFile","folderPath","updatedTree","substring","lastIndexOf","createNewFolder","_socketRef$current6","handleRun","html","css","js","combined","blob","Blob","url","URL","createObjectURL","src","revokeObjectURL","handleFileSwitch","_socketRef$current7","getLanguage","className","_jsxFileName","columnNumber","typingUsersList","values","style","backgroundColor","t","join","onAddFile","onAddFolder","onAddFileToFolder","onClick","height","language","onChange","onMount","_socketRef$current8","theme","options","minimap","enabled","fontSize","wordWrap","automaticLayout","scrollBeyondLastLine","renderWhitespace","smoothScrolling","cursorBlinking","cursorSmoothCaretAnimation","cursor","_cursor$position","_cursor$position2","top","left","borderLeft","pointerEvents","zIndex","color","padding","borderRadius","whiteSpace","ref","title","sandbox","placeholder","e","target","_c","func","wait","executedFunction","args","later","clearTimeout","$RefreshReg$"],"sources":["D:/realtime-code-editor/client/src/pages/EditorPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { useLocation, useParams, useNavigate, useBeforeUnload } from 'react-router-dom';\r\nimport Editor from '@monaco-editor/react';\r\nimport { io } from 'socket.io-client';\r\nimport FileSidebar from '../components/FileSidebar';\r\nimport '../styles/editor.css';\r\n\r\nfunction EditorPage() {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const socketRef = useRef(null);\r\n  const initializedRef = useRef(false);\r\n  const currentUserRef = useRef(null);\r\n  const editorRef = useRef(null);\r\n  const iframeRef = useRef(null);\r\n  const isUpdatingFromSocket = useRef(false);\r\n  const lastChangeTimestamp = useRef(0);\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [files, setFiles] = useState(null);\r\n  const [activeFile, setActiveFile] = useState('index.html');\r\n  const [connectionStatus, setConnectionStatus] = useState('Connecting...');\r\n  const [users, setUsers] = useState([]);\r\n  const [activeUsers, setActiveUsers] = useState({});\r\n  const [typingUsers, setTypingUsers] = useState({});\r\n  const [userCursors, setUserCursors] = useState({});\r\nconst [showNewFileModal, setShowNewFileModal] = useState(false);\r\nconst [showNewFolderModal, setShowNewFolderModal] = useState(false);\r\nconst [newFileName, setNewFileName] = useState('');\r\nconst [newFolderName, setNewFolderName] = useState('');\r\n// Add to your existing state\r\nconst [fileTree, setFileTree] = useState(null);\r\n  // Colors for different users\r\n  const userColors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD', '#98D8C8'];\r\n  const getUserColor = (userId) => {\r\n    const index = Object.keys(activeUsers).indexOf(userId);\r\n    return userColors[index % userColors.length];\r\n  };\r\n\r\n  // Debounced save function\r\n  const debouncedSave = useCallback(\r\n    debounce(async (roomId, filename, content) => {\r\n      try {\r\n        await fetch('http://localhost:5000/api/code/save', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ roomId, filename, content }),\r\n        });\r\n      } catch (err) {\r\n        console.error('Error saving file:', err);\r\n      }\r\n    }, 2000),\r\n    []\r\n  );\r\nconst loadFiles = async () => {\r\n  const { files, tree } = await fetchFiles();\r\n  setFiles(files);\r\n  setFileTree(tree);\r\n  setActiveFile('index.html');\r\n};\r\n  // Fetch files from backend\r\n  const fetchFiles = useCallback(async () => {\r\n  if (!roomId) return;\r\n\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/api/code/${roomId}`);\r\n    \r\n    if (!response.ok) {\r\n      if (response.status === 404) {\r\n        // Create default files structure\r\n        const defaultFiles = {\r\n          'index.html': '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>',\r\n          'style.css': '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}',\r\n          'script.js': '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");'\r\n        };\r\n\r\n        // Save default files to database\r\n        await Promise.all(\r\n          Object.entries(defaultFiles).map(([filename, content]) =>\r\n            debouncedSave(roomId, filename, content)\r\n        ));\r\n\r\n        // Create default tree structure\r\n        const defaultTree = {\r\n          name: 'root',\r\n          type: 'folder',\r\n          path: '',\r\n          children: [\r\n            {\r\n              name: 'index.html',\r\n              type: 'file',\r\n              path: 'index.html',\r\n              content: defaultFiles['index.html']\r\n            },\r\n            {\r\n              name: 'style.css',\r\n              type: 'file',\r\n              path: 'style.css',\r\n              content: defaultFiles['style.css']\r\n            },\r\n            {\r\n              name: 'script.js',\r\n              type: 'file',\r\n              path: 'script.js',\r\n              content: defaultFiles['script.js']\r\n            }\r\n          ]\r\n        };\r\n\r\n        return {\r\n          files: defaultFiles,\r\n          tree: defaultTree\r\n        };\r\n      }\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    \r\n    const { files, tree } = await response.json();\r\n    \r\n    // Ensure required files exist\r\n    const requiredFiles = ['index.html', 'style.css', 'script.js'];\r\n    const completeFiles = { ...files };\r\n    \r\n    requiredFiles.forEach(file => {\r\n      if (!completeFiles[file]) {\r\n        completeFiles[file] = file.endsWith('.html') ? \r\n          '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>' :\r\n          file.endsWith('.css') ? \r\n          '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}' :\r\n          '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");';\r\n        \r\n        // Add missing file to tree if it doesn't exist\r\n        if (!tree.children.some(child => child.name === file)) {\r\n          tree.children.push({\r\n            name: file,\r\n            type: 'file',\r\n            path: file,\r\n            content: completeFiles[file]\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return {\r\n      files: completeFiles,\r\n      tree: tree\r\n    };\r\n  } catch (error) {\r\n    console.error('Error loading files:', error);\r\n    \r\n    // Fallback to default structure\r\n    const defaultFiles = {\r\n      'index.html': '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>',\r\n      'style.css': '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}',\r\n      'script.js': '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");'\r\n    };\r\n\r\n    const defaultTree = {\r\n      name: 'root',\r\n      type: 'folder',\r\n      path: '',\r\n      children: [\r\n        {\r\n          name: 'index.html',\r\n          type: 'file',\r\n          path: 'index.html',\r\n          content: defaultFiles['index.html']\r\n        },\r\n        {\r\n          name: 'style.css',\r\n          type: 'file',\r\n          path: 'style.css',\r\n          content: defaultFiles['style.css']\r\n        },\r\n        {\r\n          name: 'script.js',\r\n          type: 'file',\r\n          path: 'script.js',\r\n          content: defaultFiles['script.js']\r\n        }\r\n      ]\r\n    };\r\n\r\n    return {\r\n      files: defaultFiles,\r\n      tree: defaultTree\r\n    };\r\n  }\r\n}, [roomId, debouncedSave]);\r\n  // Initialize socket connection\r\n  const initializeSocket = useCallback((filesData) => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n    }\r\n\r\n    const socket = io('http://localhost:5000', {\r\n      transports: ['websocket'],\r\n      upgrade: false,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n      timeout: 10000,\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('🟢 Connected to server');\r\n      setConnectionStatus('Connected');\r\n      currentUserRef.current = socket.id;\r\n      socket.emit('join-room', { \r\n        roomId, \r\n        username,\r\n        files: filesData \r\n      });\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('🔴 Disconnected from server');\r\n      setConnectionStatus('Disconnected');\r\n    });\r\n\r\n    socket.on('reconnect', () => {\r\n      console.log('🟡 Reconnected to server');\r\n      setConnectionStatus('Connected');\r\n      socket.emit('join-room', { \r\n        roomId, \r\n        username,\r\n        files: files \r\n      });\r\n    });\r\n\r\n    socket.on('room-state', ({ files: roomFiles, users: roomUsers }) => {\r\n      console.log('📋 Received room state:', { files: Object.keys(roomFiles), users: roomUsers.length });\r\n      setFiles(roomFiles);\r\n      setUsers(roomUsers);\r\n    });\r\n\r\nsocket.on('code-update', ({ filePath, code, sender, position, username: senderUsername }) => {\r\n  if (sender !== currentUserRef.current) {\r\n    console.log('📝 Code update from', senderUsername, 'for', filePath);\r\n    \r\n    isUpdatingFromSocket.current = true;\r\n    \r\n    // Update both files state and file tree state in a single batch\r\n    setFiles(prevFiles => {\r\n      const newFiles = { ...prevFiles, [filePath]: code };\r\n      \r\n      // Update editor content if it's the active file\r\n      if (filePath === activeFile && editorRef.current) {\r\n        const model = editorRef.current.getModel();\r\n        if (model && model.getValue() !== code) {\r\n          // Save current cursor position\r\n          const currentSelection = editorRef.current.getSelection();\r\n          const scrollInfo = editorRef.current.getScrollTop();\r\n          \r\n          // Update content\r\n          model.setValue(code);\r\n          \r\n          // Restore cursor position if it was the current user's cursor\r\n          if (currentSelection && !position) {\r\n            editorRef.current.setSelection(currentSelection);\r\n            editorRef.current.setScrollTop(scrollInfo);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return newFiles;\r\n    });\r\n// Handle remote file deletion\r\n\r\n// Handle remote file rename\r\n\r\n    // Update the file tree structure\r\n    setFileTree(prevTree => {\r\n      if (!prevTree) return prevTree;\r\n      \r\n      // Create a deep clone of the tree\r\n      const newTree = JSON.parse(JSON.stringify(prevTree));\r\n      \r\n      // Function to find and update the file in the tree\r\n      const updateFileContent = (nodes) => {\r\n        for (let node of nodes) {\r\n          if (node.path === filePath && node.type === 'file') {\r\n            node.content = code;\r\n            return true;\r\n          }\r\n          if (node.children && updateFileContent(node.children)) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      };\r\n      \r\n      updateFileContent(newTree.children);\r\n      return newTree;\r\n    });\r\n\r\n    // Update user cursor position\r\n    if (position) {\r\n      setUserCursors(prev => ({\r\n        ...prev,\r\n        [sender]: { \r\n          ...prev[sender], \r\n          position, \r\n          activeFile: filePath,\r\n          username: senderUsername\r\n        }\r\n      }));\r\n    }\r\n\r\n    // Show typing indicator\r\n    if (filePath === activeFile) {\r\n      setTypingUsers(prev => ({\r\n        ...prev,\r\n        [sender]: { username: senderUsername, timestamp: Date.now() }\r\n      }));\r\n    }\r\n\r\n    setTimeout(() => {\r\n      isUpdatingFromSocket.current = false;\r\n    }, 100);\r\n  }\r\n});\r\nsocket.on('file-deleted', ({ path }) => {\r\n  setFiles(prev => {\r\n    const newFiles = { ...prev };\r\n    delete newFiles[path];\r\n    return newFiles;\r\n  });\r\n\r\n  setFileTree(prevTree => {\r\n    if (!prevTree) return prevTree;\r\n    \r\n    const newTree = JSON.parse(JSON.stringify(prevTree));\r\n    const removeNode = (nodes) => {\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        if (nodes[i].path === path) {\r\n          nodes.splice(i, 1);\r\n          return true;\r\n        }\r\n        if (nodes[i].children && removeNode(nodes[i].children)) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    };\r\n    \r\n    removeNode(newTree.children);\r\n    return newTree;\r\n  });\r\n});\r\n\r\n    socket.on('user-joined', ({ userId, username: newUsername }) => {\r\n      console.log('👤 User joined:', newUsername);\r\n      setUsers(prev => {\r\n        const exists = prev.find(u => u.id === userId);\r\n        if (!exists) {\r\n          return [...prev, { id: userId, username: newUsername }];\r\n        }\r\n        return prev;\r\n      });\r\n    });\r\n\r\n    socket.on('user-left', ({ userId, username: leftUsername }) => {\r\n      console.log('👤 User left:', leftUsername);\r\n      setUsers(prev => prev.filter(u => u.id !== userId));\r\n      setActiveUsers(prev => {\r\n        const newActive = { ...prev };\r\n        delete newActive[userId];\r\n        return newActive;\r\n      });\r\n      setUserCursors(prev => {\r\n        const newCursors = { ...prev };\r\n        delete newCursors[userId];\r\n        return newCursors;\r\n      });\r\n      setTypingUsers(prev => {\r\n        const newTyping = { ...prev };\r\n        delete newTyping[userId];\r\n        return newTyping;\r\n      });\r\n    });\r\n\r\n    socket.on('cursor-position', ({ userId, username: cursorUsername, position, activeFile: userActiveFile }) => {\r\n      if (userId !== currentUserRef.current && userActiveFile === activeFile) {\r\n        setUserCursors(prev => ({\r\n          ...prev,\r\n          [userId]: { \r\n            position, \r\n            activeFile: userActiveFile, \r\n            username: cursorUsername,\r\n            timestamp: Date.now()\r\n          }\r\n        }));\r\n      }\r\n    });\r\n\r\n    socket.on('user-typing', ({ userId, username: typingUsername, filePath }) => {\r\n      if (userId !== currentUserRef.current && filePath === activeFile) {\r\n        setTypingUsers(prev => ({\r\n          ...prev,\r\n          [userId]: { username: typingUsername, timestamp: Date.now() }\r\n        }));\r\n      }\r\n    });\r\n// Listen for remote file creation\r\nsocket.on('remote-file-created', ({ filePath, content }) => {\r\n  setFiles(prev => ({ ...prev, [filePath]: content }));\r\n\r\n  setFileTree(prevTree => {\r\n    if (!prevTree) return prevTree;\r\n\r\n    const newTree = JSON.parse(JSON.stringify(prevTree)); // Deep copy\r\n    const parts = filePath.split('/');\r\n    const fileName = parts.pop(); // last item is the file name\r\n    const folderPathParts = parts;\r\n\r\n    let current = newTree;\r\n\r\n    for (const part of folderPathParts) {\r\n      let folder = current.children.find(\r\n        child => child.name === part && child.type === 'folder'\r\n      );\r\n      if (!folder) {\r\n        folder = {\r\n          name: part,\r\n          type: 'folder',\r\n          path: (current.path || '') + part + '/',\r\n          children: []\r\n        };\r\n        current.children.push(folder);\r\n      }\r\n      current = folder;\r\n    }\r\n\r\n    // Add the new file under the right folder\r\n    current.children.push({\r\n      name: fileName,\r\n      type: 'file',\r\n      path: filePath,\r\n      content\r\n    });\r\n\r\n    return newTree;\r\n  });\r\n});\r\n\r\n\r\n// Listen for remote folder creation\r\nsocket.on('remote-folder-created', ({ path }) => {\r\n  setFileTree(prevTree => {\r\n    if (!prevTree) return prevTree;\r\n    const exists = prevTree.children.some(child => child.path === path);\r\n    if (!exists) {\r\n      return {\r\n        ...prevTree,\r\n        children: [\r\n          ...prevTree.children,\r\n          {\r\n            name: path.replace(/\\/$/, '').split('/').pop(),\r\n            type: 'folder',\r\n            path,\r\n            children: []\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    return prevTree;\r\n  });\r\n});\r\n\r\n    socketRef.current = socket;\r\n    return socket;\r\n  }, [username, roomId, activeFile, files]);\r\n\r\n  // Clear old typing indicators\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = Date.now();\r\n      setTypingUsers(prev => {\r\n        const updated = { ...prev };\r\n        Object.keys(updated).forEach(userId => {\r\n          if (now - updated[userId].timestamp > 3000) {\r\n            delete updated[userId];\r\n          }\r\n        });\r\n        return updated;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Main initialization effect\r\n  useEffect(() => {\r\n    if (!roomId) {\r\n      navigate('/room');\r\n      return;\r\n    }\r\n\r\n    if (initializedRef.current) return;\r\n    initializedRef.current = true;\r\n\r\n    const user = (location.state && location.state.username) ||\r\n                 localStorage.getItem('username') ||\r\n                 'Guest';\r\n    setUsername(user);\r\n\r\n  const initialize = async () => {\r\n  try {\r\n    // 1. Fetch files - now returns { files, tree }\r\n    const { files: filesData, tree } = await fetchFiles();\r\n    \r\n    // 2. Set both states\r\n    setFiles(filesData);\r\n    setFileTree(tree); // Make sure you have this state: const [fileTree, setFileTree] = useState(null);\r\n    \r\n    // 3. Initialize socket with the flat files data\r\n    initializeSocket(filesData);\r\n    \r\n    // 4. Set username (unchanged)\r\n    localStorage.setItem('username', user);\r\n    \r\n    // 5. Set default active file if needed\r\n    if (!activeFile) {\r\n      setActiveFile('index.html');\r\n    }\r\n  } catch (error) {\r\n    console.error('Initialization error:', error);\r\n    setConnectionStatus('Initialization failed');\r\n  }\r\n};\r\n\r\n    initialize();\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, [roomId, navigate, location.state, fetchFiles, initializeSocket]);\r\n\r\n  // Track cursor position more frequently\r\n  useEffect(() => {\r\n    if (!editorRef.current || !socketRef.current?.connected) return;\r\n\r\n    const editor = editorRef.current;\r\n    \r\n    const handleCursorChange = () => {\r\n      if (isUpdatingFromSocket.current) return;\r\n      \r\n      const selection = editor.getSelection();\r\n      if (selection) {\r\n        const position = {\r\n          lineNumber: selection.positionLineNumber,\r\n          column: selection.positionColumn\r\n        };\r\n        \r\n        socketRef.current.emit('cursor-position', {\r\n          roomId,\r\n          filePath: activeFile,\r\n          position,\r\n          username\r\n        });\r\n      }\r\n    };\r\n\r\n    const disposable = editor.onDidChangeCursorPosition(handleCursorChange);\r\n    return () => disposable.dispose();\r\n  }, [roomId, activeFile, username]);\r\n\r\n  // Handle code changes with real-time sync\r\n  const handleCodeChange = useCallback((value) => {\r\n    if (!value) value = '';\r\n    if (isUpdatingFromSocket.current) return;\r\n    \r\n    const timestamp = Date.now();\r\n    lastChangeTimestamp.current = timestamp;\r\n    \r\n    setFiles(prev => {\r\n      if (prev[activeFile] !== value) {\r\n        const newFiles = { ...prev, [activeFile]: value };\r\n        \r\n        if (socketRef.current?.connected) {\r\n          const selection = editorRef.current?.getSelection();\r\n          const position = selection ? {\r\n            lineNumber: selection.positionLineNumber,\r\n            column: selection.positionColumn\r\n          } : null;\r\n          \r\n          // Emit real-time changes\r\n          socketRef.current.emit('code-change', {\r\n            roomId,\r\n            filePath: activeFile,\r\n            code: value,\r\n            position,\r\n            timestamp,\r\n            username\r\n          });\r\n\r\n          // Emit typing indicator\r\n          socketRef.current.emit('user-typing', {\r\n            roomId,\r\n            filePath: activeFile,\r\n            username\r\n          });\r\n        }\r\n        \r\n        // Debounced save to database\r\n        debouncedSave(roomId, activeFile, value);\r\n        return newFiles;\r\n      }\r\n      return prev;\r\n    });\r\n  }, [activeFile, roomId, debouncedSave, username]);\r\nconst handleAddFile = () => {\r\n  setShowNewFileModal(true);\r\n};\r\n\r\nconst handleAddFolder = () => {\r\n  setShowNewFolderModal(true);\r\n};\r\nconst createNewFile = async () => {\r\n  if (!newFileName) return;\r\n  \r\n  const fileExt = newFileName.split('.').pop();\r\n  let defaultContent = '';\r\n  \r\n  if (fileExt === 'html') {\r\n    defaultContent = '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>New File</title>\\n</head>\\n<body>\\n    \\n</body>\\n</html>';\r\n  } else if (fileExt === 'css') {\r\n    defaultContent = '/* Your CSS here */';\r\n  } else if (fileExt === 'js') {\r\n    defaultContent = '// Your JavaScript here';\r\n  }\r\n  \r\n  try {\r\n    // Save to backend first\r\n    await fetch('http://localhost:5000/api/code/save', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ \r\n        roomId, \r\n        filePath: newFileName, \r\n        content: defaultContent \r\n      }),\r\n    });\r\n\r\n    // Then update local state\r\n    setFiles(prev => ({ ...prev, [newFileName]: defaultContent }));\r\n    \r\n    setFileTree(prevTree => {\r\n      if (!prevTree) return prevTree;\r\n      \r\n      // Check if file already exists in tree\r\n      const exists = prevTree.children.some(child => \r\n        child.path === newFileName\r\n      );\r\n      \r\n      if (!exists) {\r\n        return {\r\n          ...prevTree,\r\n          children: [\r\n            ...prevTree.children,\r\n            {\r\n              name: newFileName,\r\n              type: 'file',\r\n              path: newFileName,\r\n              content: defaultContent\r\n            }\r\n          ]\r\n        };\r\n      }\r\n      return prevTree;\r\n    });\r\n        if (socketRef.current?.connected) {\r\n      socketRef.current.emit('new-file-created', {\r\n        roomId,\r\n        filePath: newFileName,\r\n        content: defaultContent,\r\n        username\r\n      });\r\n    }\r\n\r\n    setActiveFile(newFileName);\r\n    setShowNewFileModal(false);\r\n    setNewFileName('');\r\n    \r\n    // Notify other users\r\n    if (socketRef.current?.connected) {\r\n      socketRef.current.emit('code-change', {\r\n        roomId,\r\n        filePath: newFileName,\r\n        code: defaultContent,\r\n        username\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('Error creating file:', error);\r\n  }\r\n};\r\nconst createFileAtPath = async (path) => {\r\n  const fileExt = path.split('.').pop();\r\n  let defaultContent = '';\r\n  if (fileExt === 'html') defaultContent = '<!DOCTYPE html>\\n<html>\\n<head>\\n<title></title>\\n</head>\\n<body>\\n</body>\\n</html>';\r\n  if (fileExt === 'css') defaultContent = '/* CSS here */';\r\n  if (fileExt === 'js') defaultContent = '// JS here';\r\n\r\n  await fetch('http://localhost:5000/api/code/save', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ roomId, filePath: path, content: defaultContent }),\r\n  });\r\n\r\n  setFiles(prev => ({ ...prev, [path]: defaultContent }));\r\n  setFileTree(prevTree => {\r\n    if (!prevTree) return prevTree;\r\n\r\n    const newNode = {\r\n      name: path.split('/').pop(),\r\n      type: 'file',\r\n      path,\r\n      content: defaultContent\r\n    };\r\n\r\n    // Recursively insert file under the correct folder\r\n    const insertFile = (tree, folderPath) => {\r\n      if (tree.path === folderPath) {\r\n        tree.children.push(newNode);\r\n        return true;\r\n      }\r\n      for (const child of tree.children) {\r\n        if (child.type === 'folder' && insertFile(child, folderPath)) return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    const updatedTree = JSON.parse(JSON.stringify(prevTree));\r\n    insertFile(updatedTree, path.substring(0, path.lastIndexOf('/') + 1));\r\n    return updatedTree;\r\n  });\r\n\r\n  if (socketRef.current?.connected) {\r\n    socketRef.current.emit('new-file-created', {\r\n      roomId,\r\n      filePath: path,\r\n      content: defaultContent,\r\n      username\r\n    });\r\n  }\r\n};\r\n\r\nconst createNewFolder = async () => {\r\n  if (!newFolderName) return;\r\n  \r\n  try {\r\n    // Ensure folder path ends with /\r\n    const folderPath = newFolderName.endsWith('/') ? \r\n      newFolderName : `${newFolderName}/`;\r\n    \r\n    // Save to backend\r\n    await fetch('http://localhost:5000/api/code/createFolder', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ \r\n        roomId, \r\n        path: folderPath \r\n      }),\r\n    });\r\n\r\n    // Update local state\r\n    setFileTree(prevTree => {\r\n      if (!prevTree) return prevTree;\r\n      \r\n      // Check if folder already exists\r\n      const exists = prevTree.children.some(child => \r\n        child.path === folderPath\r\n      );\r\n      \r\n      if (!exists) {\r\n        return {\r\n          ...prevTree,\r\n          children: [\r\n            ...prevTree.children,\r\n            {\r\n              name: newFolderName,\r\n              type: 'folder',\r\n              path: folderPath,\r\n              children: []\r\n            }\r\n          ]\r\n        };\r\n      }\r\n      return prevTree;\r\n    });\r\n    \r\n    setShowNewFolderModal(false);\r\n    setNewFolderName('');\r\n        if (socketRef.current?.connected) {\r\n      socketRef.current.emit('new-folder-created', {\r\n        roomId,\r\n        path: folderPath,\r\n        username\r\n      });\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error creating folder:', error);\r\n  }\r\n};\r\n  // Handle running the code\r\n  const handleRun = () => {\r\n    if (!files || !iframeRef.current) return;\r\n\r\n    const html = files['index.html'] || '';\r\n    const css = files['style.css'] || '';\r\n    const js = files['script.js'] || '';\r\n\r\n    const combined = `\r\n      <!DOCTYPE html>\r\n      <html>\r\n        <head>\r\n          <meta charset=\"UTF-8\">\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n          <style>${css}</style>\r\n        </head>\r\n        <body>\r\n          ${html}\r\n          <script>\r\n            // Error handling for iframe\r\n            window.onerror = function(msg, url, line, col, error) {\r\n              console.error('Error:', msg, 'at', line + ':' + col);\r\n              return false;\r\n            };\r\n            ${js}\r\n          </script>\r\n        </body>\r\n      </html>\r\n    `;\r\n\r\n    const blob = new Blob([combined], { type: 'text/html' });\r\n    const url = URL.createObjectURL(blob);\r\n    iframeRef.current.src = url;\r\n    setTimeout(() => URL.revokeObjectURL(url), 1000);\r\n  };\r\n\r\n  // Handle file switching\r\n  const handleFileSwitch = (fileName) => {\r\n    setActiveFile(fileName);\r\n    if (socketRef.current?.connected) {\r\n      socketRef.current.emit('file-switch', {\r\n        roomId,\r\n        filePath: fileName,\r\n        username\r\n      });\r\n    }\r\n  };\r\n\r\n  // Cleanup on page unload\r\n  useBeforeUnload(() => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n    }\r\n  });\r\n\r\n  const getLanguage = (file) => {\r\n    if (file.endsWith('.js')) return 'javascript';\r\n    if (file.endsWith('.html')) return 'html';\r\n    if (file.endsWith('.css')) return 'css';\r\n    return 'plaintext';\r\n  };\r\n\r\n  if (!files || !fileTree) {\r\n    return (\r\n      <div className=\"editor-wrapper\">\r\n        <div className=\"loading-screen\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <div>Loading collaborative editor...</div>\r\n          <div className=\"connection-status\">{connectionStatus}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const typingUsersList = Object.values(typingUsers);\r\n\r\n  return (\r\n    <div className=\"editor-wrapper\">\r\n      <div className=\"collaboration-bar\">\r\n        <div className=\"room-info\">\r\n          <strong>Room:</strong> {roomId} | <strong>User:</strong> {username}\r\n          <span className={`connection-status ${connectionStatus === 'Connected' ? 'connected' : 'disconnected'}`}>\r\n            ● {connectionStatus}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"online-users\">\r\n          <span className=\"users-label\">Online ({users.length}):</span>\r\n          {users.map(user => (\r\n            <div \r\n              key={user.id} \r\n              className=\"user-badge\"\r\n              style={{ backgroundColor: getUserColor(user.id) }}\r\n            >\r\n              {user.username}\r\n              {user.id === currentUserRef.current && ' (You)'}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {typingUsersList.length > 0 && (\r\n          <div className=\"typing-indicator\">\r\n            <span className=\"typing-dots\">●●●</span>\r\n            {typingUsersList.map(t => t.username).join(', ')} \r\n            {typingUsersList.length === 1 ? ' is' : ' are'} typing in {activeFile}...\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"editor-container\">\r\n        <div className=\"sidebar\">\r\n          <FileSidebar\r\n            tree={fileTree} \r\n           activeFile={activeFile}\r\n         setActiveFile={handleFileSwitch}\r\n         onAddFile={handleAddFile}\r\n             onAddFolder={handleAddFolder}\r\n               onAddFileToFolder={createFileAtPath}\r\n               roomId={roomId}\r\n               setFiles={setFiles}           // Pass down the setter\r\n          setFileTree={setFileTree}     // Pass down the setter\r\n      socketRef={socketRef}         // Pass down the ref\r\n      username={username}\r\n          /> \r\n        </div>\r\n\r\n        <div className=\"main-editor\">\r\n          <div className=\"editor-header\">\r\n            <div className=\"file-info\">\r\n              <strong>{activeFile}</strong>\r\n              <span className=\"file-language\">({getLanguage(activeFile)})</span>\r\n            </div>\r\n            <button className=\"run-button\" onClick={handleRun}>\r\n              ▶ Run Code\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"editor-container-with-cursors\">\r\n            <Editor\r\n              height=\"50vh\"\r\n              language={getLanguage(activeFile)}\r\n              value={files[activeFile] || \"\"}\r\n              onChange={handleCodeChange}\r\n              onMount={editor => {\r\n                editorRef.current = editor;\r\n                // Add cursor tracking\r\n                editor.onDidChangeCursorPosition(() => {\r\n                  if (socketRef.current?.connected && !isUpdatingFromSocket.current) {\r\n                    const selection = editor.getSelection();\r\n                    if (selection) {\r\n                      const position = {\r\n                        lineNumber: selection.positionLineNumber,\r\n                        column: selection.positionColumn\r\n                      };\r\n                      \r\n                      socketRef.current.emit('cursor-position', {\r\n                        roomId,\r\n                        filePath: activeFile,\r\n                        position,\r\n                        username\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              }}\r\n              theme=\"vs-dark\"\r\n              options={{\r\n                minimap: { enabled: false },\r\n                fontSize: 14,\r\n                wordWrap: 'on',\r\n                automaticLayout: true,\r\n                scrollBeyondLastLine: false,\r\n                renderWhitespace: 'selection',\r\n                smoothScrolling: true,\r\n                cursorBlinking: 'smooth',\r\n                cursorSmoothCaretAnimation: true,\r\n              }}\r\n            />\r\n            \r\n            {/* Render other users' cursors */}\r\n            {Object.entries(userCursors).map(([userId, cursor]) => (\r\n              cursor.activeFile === activeFile && (\r\n                <div\r\n                  key={userId}\r\n                  className=\"user-cursor\"\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: `${(cursor.position?.lineNumber || 0) * 18}px`,\r\n                    left: `${(cursor.position?.column || 0) * 8}px`,\r\n                    borderLeft: `2px solid ${getUserColor(userId)}`,\r\n                    height: '18px',\r\n                    pointerEvents: 'none',\r\n                    zIndex: 1000,\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"user-cursor-label\"\r\n                    style={{\r\n                      backgroundColor: getUserColor(userId),\r\n                      color: 'white',\r\n                      padding: '2px 6px',\r\n                      borderRadius: '3px',\r\n                      fontSize: '11px',\r\n                      position: 'absolute',\r\n                      top: '-20px',\r\n                      left: '0',\r\n                      whiteSpace: 'nowrap',\r\n                    }}\r\n                  >\r\n                    {cursor.username}\r\n                  </div>\r\n                </div>\r\n              )\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"output-panel\">\r\n            <div className=\"output-header\">\r\n              <strong>Output Preview</strong>\r\n              <button className=\"refresh-output\" onClick={handleRun}>\r\n                🔄 Refresh\r\n              </button>\r\n            </div>\r\n            <iframe\r\n              ref={iframeRef}\r\n              title=\"Live Code Output\"\r\n              className=\"output-frame\"\r\n              sandbox=\"allow-scripts allow-same-origin allow-forms\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showNewFileModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Create New File</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"filename.html/.css/.js\"\r\n              value={newFileName}\r\n              onChange={(e) => setNewFileName(e.target.value)}\r\n            />\r\n            <div className=\"modal-actions\">\r\n              <button onClick={() => setShowNewFileModal(false)}>Cancel</button>\r\n              <button onClick={createNewFile}>Create</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showNewFolderModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Create New Folder</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Folder name\"\r\n              value={newFolderName}\r\n              onChange={(e) => setNewFolderName(e.target.value)}\r\n            />\r\n            <div className=\"modal-actions\">\r\n              <button onClick={() => setShowNewFolderModal(false)}>Cancel</button>\r\n              <button onClick={createNewFolder}>Create</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n   \r\n\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}\r\n\r\nexport default EditorPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}