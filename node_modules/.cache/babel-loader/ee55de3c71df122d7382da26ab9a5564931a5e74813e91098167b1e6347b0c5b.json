{"ast":null,"code":"var _jsxFileName = \"D:\\\\realtime-code-editor\\\\client\\\\src\\\\pages\\\\EditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { useLocation, useParams, useNavigate, useBeforeUnload } from 'react-router-dom';\nimport Editor from '@monaco-editor/react';\nimport { io } from 'socket.io-client';\nimport FileSidebar from '../components/FileSidebar';\nimport '../styles/editor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditorPage() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const socketRef = useRef(null);\n  const initializedRef = useRef(false);\n  const currentUserRef = useRef(null);\n  const editorRef = useRef(null);\n  const iframeRef = useRef(null);\n  const isUpdatingFromSocket = useRef(false);\n  const lastChangeTimestamp = useRef(0);\n  const [username, setUsername] = useState('');\n  const [files, setFiles] = useState(null);\n  const [activeFile, setActiveFile] = useState('index.html');\n  const [connectionStatus, setConnectionStatus] = useState('Connecting...');\n  const [users, setUsers] = useState([]);\n  const [activeUsers, setActiveUsers] = useState({});\n  const [typingUsers, setTypingUsers] = useState({});\n  const [userCursors, setUserCursors] = useState({});\n  const [showNewFileModal, setShowNewFileModal] = useState(false);\n  const [showNewFolderModal, setShowNewFolderModal] = useState(false);\n  const [newFileName, setNewFileName] = useState('');\n  const [newFolderName, setNewFolderName] = useState('');\n  // Add to your existing state\n  const [fileTree, setFileTree] = useState(null);\n  // Colors for different users\n  const userColors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD', '#98D8C8'];\n  const getUserColor = userId => {\n    const index = Object.keys(activeUsers).indexOf(userId);\n    return userColors[index % userColors.length];\n  };\n\n  // Debounced save function\n  const debouncedSave = useCallback(debounce(async (roomId, filename, content) => {\n    try {\n      await fetch('http://localhost:5000/api/code/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomId,\n          filename,\n          content\n        })\n      });\n    } catch (err) {\n      console.error('Error saving file:', err);\n    }\n  }, 2000), []);\n  // const loadFiles = async () => {\n  //   const { files, tree } = await fetchFiles();\n  //   setFiles(files);\n  //   setFileTree(tree);\n  //   setActiveFile('index.html');\n  // };\n  // Fetch files from backend\n  const fetchFiles = useCallback(async () => {\n    if (!roomId) return;\n    try {\n      const response = await fetch(`http://localhost:5000/api/code/${roomId}`);\n      if (!response.ok) {\n        if (response.status === 404) {\n          // Create default files structure\n          const defaultFiles = {\n            'index.html': '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>',\n            'style.css': '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}',\n            'script.js': '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");'\n          };\n\n          // Save default files to database\n          await Promise.all(Object.entries(defaultFiles).map(([filename, content]) => debouncedSave(roomId, filename, content)));\n\n          // Create default tree structure\n          const defaultTree = {\n            name: 'root',\n            type: 'folder',\n            path: '',\n            children: [{\n              name: 'index.html',\n              type: 'file',\n              path: 'index.html',\n              content: defaultFiles['index.html']\n            }, {\n              name: 'style.css',\n              type: 'file',\n              path: 'style.css',\n              content: defaultFiles['style.css']\n            }, {\n              name: 'script.js',\n              type: 'file',\n              path: 'script.js',\n              content: defaultFiles['script.js']\n            }]\n          };\n          return {\n            files: defaultFiles,\n            tree: defaultTree\n          };\n        }\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const {\n        files,\n        tree\n      } = await response.json();\n\n      // Ensure required files exist\n      const requiredFiles = ['index.html', 'style.css', 'script.js'];\n      const completeFiles = {\n        ...files\n      };\n      requiredFiles.forEach(file => {\n        if (!completeFiles[file]) {\n          completeFiles[file] = file.endsWith('.html') ? '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>' : file.endsWith('.css') ? '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}' : '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");';\n\n          // Add missing file to tree if it doesn't exist\n          if (!tree.children.some(child => child.name === file)) {\n            tree.children.push({\n              name: file,\n              type: 'file',\n              path: file,\n              content: completeFiles[file]\n            });\n          }\n        }\n      });\n      return {\n        files: completeFiles,\n        tree: tree\n      };\n    } catch (error) {\n      console.error('Error loading files:', error);\n\n      // Fallback to default structure\n      const defaultFiles = {\n        'index.html': '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>',\n        'style.css': '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}',\n        'script.js': '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");'\n      };\n      const defaultTree = {\n        name: 'root',\n        type: 'folder',\n        path: '',\n        children: [{\n          name: 'index.html',\n          type: 'file',\n          path: 'index.html',\n          content: defaultFiles['index.html']\n        }, {\n          name: 'style.css',\n          type: 'file',\n          path: 'style.css',\n          content: defaultFiles['style.css']\n        }, {\n          name: 'script.js',\n          type: 'file',\n          path: 'script.js',\n          content: defaultFiles['script.js']\n        }]\n      };\n      return {\n        files: defaultFiles,\n        tree: defaultTree\n      };\n    }\n  }, [roomId, debouncedSave]);\n  // Initialize socket connection\n  const initializeSocket = useCallback(filesData => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    const socket = io('http://localhost:5000', {\n      transports: ['websocket'],\n      upgrade: false,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      timeout: 10000\n    });\n    socket.on('connect', () => {\n      console.log('🟢 Connected to server');\n      setConnectionStatus('Connected');\n      currentUserRef.current = socket.id;\n      socket.emit('join-room', {\n        roomId,\n        username,\n        files: filesData\n      });\n    });\n    socket.on('disconnect', () => {\n      console.log('🔴 Disconnected from server');\n      setConnectionStatus('Disconnected');\n    });\n    socket.on('reconnect', () => {\n      console.log('🟡 Reconnected to server');\n      setConnectionStatus('Connected');\n      socket.emit('join-room', {\n        roomId,\n        username,\n        files: files\n      });\n    });\n    socket.on('room-state', ({\n      files: roomFiles,\n      users: roomUsers\n    }) => {\n      console.log('📋 Received room state:', {\n        files: Object.keys(roomFiles),\n        users: roomUsers.length\n      });\n      setFiles(roomFiles);\n      setUsers(roomUsers);\n    });\n    socket.on('code-update', ({\n      filePath,\n      code,\n      sender,\n      position,\n      username: senderUsername\n    }) => {\n      if (sender !== currentUserRef.current) {\n        console.log('📝 Code update from', senderUsername, 'for', filePath);\n        isUpdatingFromSocket.current = true;\n\n        // Update both files state and file tree state in a single batch\n        setFiles(prevFiles => {\n          const newFiles = {\n            ...prevFiles,\n            [filePath]: code\n          };\n\n          // Update editor content if it's the active file\n          if (filePath === activeFile && editorRef.current) {\n            const model = editorRef.current.getModel();\n            if (model && model.getValue() !== code) {\n              // Save current cursor position\n              const currentSelection = editorRef.current.getSelection();\n              const scrollInfo = editorRef.current.getScrollTop();\n\n              // Update content\n              model.setValue(code);\n\n              // Restore cursor position if it was the current user's cursor\n              if (currentSelection && !position) {\n                editorRef.current.setSelection(currentSelection);\n                editorRef.current.setScrollTop(scrollInfo);\n              }\n            }\n          }\n          return newFiles;\n        });\n        // Update the file tree structure\n        setFileTree(prevTree => {\n          if (!prevTree) return prevTree;\n\n          // Create a deep clone of the tree\n          const newTree = JSON.parse(JSON.stringify(prevTree));\n\n          // Function to find and update the file in the tree\n          const updateFileContent = nodes => {\n            for (let node of nodes) {\n              if (node.path === filePath && node.type === 'file') {\n                node.content = code;\n                return true;\n              }\n              if (node.children && updateFileContent(node.children)) {\n                return true;\n              }\n            }\n            return false;\n          };\n          updateFileContent(newTree.children);\n          return newTree;\n        });\n\n        // Update user cursor position\n        if (position) {\n          setUserCursors(prev => ({\n            ...prev,\n            [sender]: {\n              ...prev[sender],\n              position,\n              activeFile: filePath,\n              username: senderUsername\n            }\n          }));\n        }\n\n        // Show typing indicator\n        if (filePath === activeFile) {\n          setTypingUsers(prev => ({\n            ...prev,\n            [sender]: {\n              username: senderUsername,\n              timestamp: Date.now()\n            }\n          }));\n        }\n        setTimeout(() => {\n          isUpdatingFromSocket.current = false;\n        }, 100);\n      }\n    });\n    socket.on('file-deleted', ({\n      path\n    }) => {\n      setFiles(prev => {\n        const newFiles = {\n          ...prev\n        };\n        delete newFiles[path];\n        return newFiles;\n      });\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n        const newTree = JSON.parse(JSON.stringify(prevTree));\n        const removeNode = nodes => {\n          for (let i = 0; i < nodes.length; i++) {\n            if (nodes[i].path === path) {\n              nodes.splice(i, 1);\n              return true;\n            }\n            if (nodes[i].children && removeNode(nodes[i].children)) {\n              return true;\n            }\n          }\n          return false;\n        };\n        removeNode(newTree.children);\n        return newTree;\n      });\n    });\n    socket.on('file-renamed', ({\n      oldPath,\n      newPath\n    }) => {\n      setFiles(prev => {\n        const newFiles = {\n          ...prev\n        };\n        if (newFiles[oldPath]) {\n          newFiles[newPath] = newFiles[oldPath];\n          delete newFiles[oldPath];\n        }\n        return newFiles;\n      });\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n        const newTree = JSON.parse(JSON.stringify(prevTree));\n        const updateNode = nodes => {\n          for (let node of nodes) {\n            if (node.path === oldPath) {\n              const newName = newPath.split('/').pop();\n              node.name = newName;\n              node.path = newPath;\n              return true;\n            }\n            if (node.children && updateNode(node.children)) {\n              return true;\n            }\n          }\n          return false;\n        };\n        updateNode(newTree.children);\n        return newTree;\n      });\n      if (activeFile === oldPath) {\n        setActiveFile(newPath);\n      }\n    });\n    socket.on('folder-renamed', ({\n      oldPath,\n      newPath\n    }) => {\n      // Update files\n      setFiles(prev => {\n        const updated = {};\n        for (const key in prev) {\n          if (key.startsWith(oldPath)) {\n            const newKey = key.replace(oldPath, newPath);\n            updated[newKey] = prev[key];\n          } else {\n            updated[key] = prev[key];\n          }\n        }\n        return updated;\n      });\n\n      // Update file tree\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n        const newTree = JSON.parse(JSON.stringify(prevTree));\n        const updatePaths = nodes => {\n          nodes.forEach(node => {\n            if (node.path.startsWith(oldPath)) {\n              node.path = node.path.replace(oldPath, newPath);\n              if (node.type === 'folder') {\n                node.name = newPath.replace(/\\/$/, '').split('/').pop();\n              }\n            }\n            if (node.children) updatePaths(node.children);\n          });\n        };\n        updatePaths(newTree.children);\n        return newTree;\n      });\n    });\n    socket.on('folder-deleted', ({\n      path\n    }) => {\n      setFiles(prev => {\n        const updated = {};\n        for (const key in prev) {\n          if (!key.startsWith(path)) {\n            updated[key] = prev[key];\n          }\n        }\n        return updated;\n      });\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n        const newTree = JSON.parse(JSON.stringify(prevTree));\n        const removeFolder = nodes => {\n          for (let i = 0; i < nodes.length; i++) {\n            if (nodes[i].path === path) {\n              nodes.splice(i, 1);\n              return true;\n            }\n            if (nodes[i].children && removeFolder(nodes[i].children)) {\n              return true;\n            }\n          }\n          return false;\n        };\n        removeFolder(newTree.children);\n        return newTree;\n      });\n    });\n    socket.on('user-joined', ({\n      userId,\n      username: newUsername\n    }) => {\n      console.log('👤 User joined:', newUsername);\n      setUsers(prev => {\n        const exists = prev.find(u => u.id === userId);\n        if (!exists) {\n          return [...prev, {\n            id: userId,\n            username: newUsername\n          }];\n        }\n        return prev;\n      });\n    });\n    socket.on('user-left', ({\n      userId,\n      username: leftUsername\n    }) => {\n      console.log('👤 User left:', leftUsername);\n      setUsers(prev => prev.filter(u => u.id !== userId));\n      setActiveUsers(prev => {\n        const newActive = {\n          ...prev\n        };\n        delete newActive[userId];\n        return newActive;\n      });\n      setUserCursors(prev => {\n        const newCursors = {\n          ...prev\n        };\n        delete newCursors[userId];\n        return newCursors;\n      });\n      setTypingUsers(prev => {\n        const newTyping = {\n          ...prev\n        };\n        delete newTyping[userId];\n        return newTyping;\n      });\n    });\n    socket.on('cursor-position', ({\n      userId,\n      username: cursorUsername,\n      position,\n      activeFile: userActiveFile\n    }) => {\n      if (userId !== currentUserRef.current && userActiveFile === activeFile) {\n        setUserCursors(prev => ({\n          ...prev,\n          [userId]: {\n            position,\n            activeFile: userActiveFile,\n            username: cursorUsername,\n            timestamp: Date.now()\n          }\n        }));\n      }\n    });\n    socket.on('user-typing', ({\n      userId,\n      username: typingUsername,\n      filePath\n    }) => {\n      if (userId !== currentUserRef.current && filePath === activeFile) {\n        setTypingUsers(prev => ({\n          ...prev,\n          [userId]: {\n            username: typingUsername,\n            timestamp: Date.now()\n          }\n        }));\n      }\n    });\n    // Listen for remote file creation\n    socket.on('remote-file-created', ({\n      filePath,\n      content\n    }) => {\n      setFiles(prev => ({\n        ...prev,\n        [filePath]: content\n      }));\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n        const newTree = JSON.parse(JSON.stringify(prevTree)); // Deep copy\n        const parts = filePath.split('/');\n        const fileName = parts.pop(); // last item is the file name\n        const folderPathParts = parts;\n        let current = newTree;\n        for (const part of folderPathParts) {\n          let folder = current.children.find(child => child.name === part && child.type === 'folder');\n          if (!folder) {\n            folder = {\n              name: part,\n              type: 'folder',\n              path: (current.path || '') + part + '/',\n              children: []\n            };\n            current.children.push(folder);\n          }\n          current = folder;\n        }\n\n        // Add the new file under the right folder\n        current.children.push({\n          name: fileName,\n          type: 'file',\n          path: filePath,\n          content\n        });\n        return newTree;\n      });\n    });\n\n    // Listen for remote folder creation\n    socket.on('remote-folder-created', ({\n      path\n    }) => {\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n        const exists = prevTree.children.some(child => child.path === path);\n        if (!exists) {\n          return {\n            ...prevTree,\n            children: [...prevTree.children, {\n              name: path.replace(/\\/$/, '').split('/').pop(),\n              type: 'folder',\n              path,\n              children: []\n            }]\n          };\n        }\n        return prevTree;\n      });\n    });\n    socketRef.current = socket;\n    return socket;\n  }, [username, roomId, activeFile, files]);\n\n  // Clear old typing indicators\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      setTypingUsers(prev => {\n        const updated = {\n          ...prev\n        };\n        Object.keys(updated).forEach(userId => {\n          if (now - updated[userId].timestamp > 3000) {\n            delete updated[userId];\n          }\n        });\n        return updated;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    if (!socketRef.current) return;\n    const socket = socketRef.current;\n    socket.on('file-deleted', ({\n      path\n    }) => {\n      setFiles(prev => {\n        const newFiles = {\n          ...prev\n        };\n        delete newFiles[path];\n        return newFiles;\n      });\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n        const newTree = JSON.parse(JSON.stringify(prevTree));\n        const removeNode = nodes => {\n          for (let i = 0; i < nodes.length; i++) {\n            if (nodes[i].path === path) {\n              nodes.splice(i, 1);\n              return true;\n            }\n            if (nodes[i].children && removeNode(nodes[i].children)) {\n              return true;\n            }\n          }\n          return false;\n        };\n        removeNode(newTree.children);\n        return newTree;\n      });\n    });\n    socket.on('file-renamed', ({\n      oldPath,\n      newPath\n    }) => {\n      setFiles(prev => {\n        const newFiles = {\n          ...prev\n        };\n        if (newFiles[oldPath]) {\n          newFiles[newPath] = newFiles[oldPath];\n          delete newFiles[oldPath];\n        }\n        return newFiles;\n      });\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n        const newTree = JSON.parse(JSON.stringify(prevTree));\n        const updateNode = nodes => {\n          for (let node of nodes) {\n            if (node.path === oldPath) {\n              const newName = newPath.split('/').pop();\n              node.name = newName;\n              node.path = newPath;\n              return true;\n            }\n            if (node.children && updateNode(node.children)) {\n              return true;\n            }\n          }\n          return false;\n        };\n        updateNode(newTree.children);\n        return newTree;\n      });\n      if (activeFile === oldPath) {\n        setActiveFile(newPath);\n      }\n    });\n    return () => {\n      socket.off('file-deleted');\n      socket.off('file-renamed');\n    };\n  }, [activeFile]);\n  useEffect(() => {\n    if (!socketRef.current) return;\n    const socket = socketRef.current;\n\n    // 🔁 Folder Renamed\n    socket.on('folder-renamed', ({\n      oldPath,\n      newPath\n    }) => {\n      setFiles(prev => {\n        const updated = {};\n        for (const key in prev) {\n          if (key.startsWith(oldPath)) {\n            const updatedKey = key.replace(oldPath, newPath);\n            updated[updatedKey] = prev[key];\n          } else {\n            updated[key] = prev[key];\n          }\n        }\n        return updated;\n      });\n      setFileTree(prev => {\n        if (!prev) return prev;\n        const tree = JSON.parse(JSON.stringify(prev));\n        const updatePaths = nodes => {\n          nodes.forEach(node => {\n            if (node.path.startsWith(oldPath)) {\n              node.path = node.path.replace(oldPath, newPath);\n              if (node.type === 'folder') {\n                node.name = newPath.replace(/\\/$/, '').split('/').pop();\n              }\n            }\n            if (node.children) updatePaths(node.children);\n          });\n        };\n        updatePaths(tree.children);\n        return tree;\n      });\n    });\n\n    // 🗑️ Folder Deleted\n    socket.on('folder-deleted', ({\n      path\n    }) => {\n      setFiles(prev => {\n        const updated = {};\n        for (const key in prev) {\n          if (!key.startsWith(path)) {\n            updated[key] = prev[key];\n          }\n        }\n        return updated;\n      });\n      setFileTree(prev => {\n        if (!prev) return prev;\n        const tree = JSON.parse(JSON.stringify(prev));\n        const removeFolder = nodes => {\n          for (let i = 0; i < nodes.length; i++) {\n            if (nodes[i].path === path) {\n              nodes.splice(i, 1);\n              return true;\n            }\n            if (nodes[i].children && removeFolder(nodes[i].children)) {\n              return true;\n            }\n          }\n          return false;\n        };\n        removeFolder(tree.children);\n        return tree;\n      });\n    });\n    return () => {\n      socket.off('folder-renamed');\n      socket.off('folder-deleted');\n    };\n  }, []);\n\n  // Main initialization effect\n  useEffect(() => {\n    if (!roomId) {\n      navigate('/room');\n      return;\n    }\n    if (initializedRef.current) return;\n    initializedRef.current = true;\n    const user = location.state && location.state.username || localStorage.getItem('username') || 'Guest';\n    setUsername(user);\n    const initialize = async () => {\n      try {\n        // 1. Fetch files - now returns { files, tree }\n        const {\n          files: filesData,\n          tree\n        } = await fetchFiles();\n\n        // 2. Set both states\n        setFiles(filesData);\n        setFileTree(tree); // Make sure you have this state: const [fileTree, setFileTree] = useState(null);\n\n        // 3. Initialize socket with the flat files data\n        initializeSocket(filesData);\n\n        // 4. Set username (unchanged)\n        localStorage.setItem('username', user);\n\n        // 5. Set default active file if needed\n        if (!activeFile) {\n          setActiveFile('index.html');\n        }\n      } catch (error) {\n        console.error('Initialization error:', error);\n        setConnectionStatus('Initialization failed');\n      }\n    };\n    initialize();\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [roomId, navigate, location.state, fetchFiles, initializeSocket]);\n\n  // Track cursor position more frequently\n  useEffect(() => {\n    var _socketRef$current;\n    if (!editorRef.current || !((_socketRef$current = socketRef.current) !== null && _socketRef$current !== void 0 && _socketRef$current.connected)) return;\n    const editor = editorRef.current;\n    const handleCursorChange = () => {\n      if (isUpdatingFromSocket.current) return;\n      const selection = editor.getSelection();\n      if (selection) {\n        const position = {\n          lineNumber: selection.positionLineNumber,\n          column: selection.positionColumn\n        };\n        socketRef.current.emit('cursor-position', {\n          roomId,\n          filePath: activeFile,\n          position,\n          username\n        });\n      }\n    };\n    const disposable = editor.onDidChangeCursorPosition(handleCursorChange);\n    return () => disposable.dispose();\n  }, [roomId, activeFile, username]);\n\n  // Handle code changes with real-time sync\n  const handleCodeChange = useCallback(value => {\n    if (!value) value = '';\n    if (isUpdatingFromSocket.current) return;\n    const timestamp = Date.now();\n    lastChangeTimestamp.current = timestamp;\n    setFiles(prev => {\n      if (prev[activeFile] !== value) {\n        var _socketRef$current2;\n        const newFiles = {\n          ...prev,\n          [activeFile]: value\n        };\n        if ((_socketRef$current2 = socketRef.current) !== null && _socketRef$current2 !== void 0 && _socketRef$current2.connected) {\n          var _editorRef$current;\n          const selection = (_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.getSelection();\n          const position = selection ? {\n            lineNumber: selection.positionLineNumber,\n            column: selection.positionColumn\n          } : null;\n\n          // Emit real-time changes\n          socketRef.current.emit('code-change', {\n            roomId,\n            filePath: activeFile,\n            code: value,\n            position,\n            timestamp,\n            username\n          });\n\n          // Emit typing indicator\n          socketRef.current.emit('user-typing', {\n            roomId,\n            filePath: activeFile,\n            username\n          });\n        }\n\n        // Debounced save to database\n        debouncedSave(roomId, activeFile, value);\n        return newFiles;\n      }\n      return prev;\n    });\n  }, [activeFile, roomId, debouncedSave, username]);\n  const handleAddFile = () => {\n    setShowNewFileModal(true);\n  };\n  const handleAddFolder = async folderPath => {\n    try {\n      var _socketRef$current3;\n      // Call backend API to create folder\n      const response = await fetch('http://localhost:5000/api/code/createFolder', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomId,\n          path: folderPath\n        })\n      });\n      if (!response.ok) throw new Error('Folder creation failed');\n\n      // Update the file tree state\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n        const folderName = folderPath.replace(/\\/$/, '');\n        const newFolder = {\n          name: folderName.split('/').pop(),\n          type: 'folder',\n          path: folderPath,\n          children: []\n        };\n        return {\n          ...prevTree,\n          children: [...prevTree.children, newFolder]\n        };\n      });\n\n      // Notify other users\n      if ((_socketRef$current3 = socketRef.current) !== null && _socketRef$current3 !== void 0 && _socketRef$current3.connected) {\n        socketRef.current.emit('folder-created', {\n          roomId,\n          path: folderPath,\n          username\n        });\n      }\n    } catch (error) {\n      console.error('Folder creation error:', error);\n      alert('Failed to create folder');\n    }\n  };\n  const createNewFile = async () => {\n    if (!newFileName) return;\n    const fileExt = newFileName.split('.').pop();\n    let defaultContent = '';\n    if (fileExt === 'html') {\n      defaultContent = '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>New File</title>\\n</head>\\n<body>\\n    \\n</body>\\n</html>';\n    } else if (fileExt === 'css') {\n      defaultContent = '/* Your CSS here */';\n    } else if (fileExt === 'js') {\n      defaultContent = '// Your JavaScript here';\n    }\n    try {\n      var _socketRef$current4, _socketRef$current5;\n      // Save to backend first\n      await fetch('http://localhost:5000/api/code/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomId,\n          filePath: newFileName,\n          content: defaultContent\n        })\n      });\n\n      // Then update local state\n      setFiles(prev => ({\n        ...prev,\n        [newFileName]: defaultContent\n      }));\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n\n        // Check if file already exists in tree\n        const exists = prevTree.children.some(child => child.path === newFileName);\n        if (!exists) {\n          return {\n            ...prevTree,\n            children: [...prevTree.children, {\n              name: newFileName,\n              type: 'file',\n              path: newFileName,\n              content: defaultContent\n            }]\n          };\n        }\n        return prevTree;\n      });\n      if ((_socketRef$current4 = socketRef.current) !== null && _socketRef$current4 !== void 0 && _socketRef$current4.connected) {\n        socketRef.current.emit('new-file-created', {\n          roomId,\n          filePath: newFileName,\n          content: defaultContent,\n          username\n        });\n      }\n      setActiveFile(newFileName);\n      setShowNewFileModal(false);\n      setNewFileName('');\n\n      // Notify other users\n      if ((_socketRef$current5 = socketRef.current) !== null && _socketRef$current5 !== void 0 && _socketRef$current5.connected) {\n        socketRef.current.emit('code-change', {\n          roomId,\n          filePath: newFileName,\n          code: defaultContent,\n          username\n        });\n      }\n    } catch (error) {\n      console.error('Error creating file:', error);\n    }\n  };\n  const createFileAtPath = async (path, content = '// placeholder') => {\n    var _socketRef$current6;\n    const fileExt = path.split('.').pop();\n    let defaultContent = content;\n    if (!content) {\n      if (fileExt === 'html') defaultContent = '<!DOCTYPE html>\\n<html>\\n<head>\\n<title></title>\\n</head>\\n<body>\\n</body>\\n</html>';else if (fileExt === 'css') defaultContent = '/* CSS here */';else if (fileExt === 'js') defaultContent = '// JS here';else defaultContent = '//placeholder';\n    }\n    await fetch('http://localhost:5000/api/code/save', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        roomId,\n        filePath: path,\n        content: defaultContent\n      })\n    });\n    setFiles(prev => ({\n      ...prev,\n      [path]: defaultContent\n    }));\n    setFileTree(prevTree => {\n      if (!prevTree) return prevTree;\n      const newNode = {\n        name: path.split('/').pop(),\n        type: 'file',\n        path,\n        content: defaultContent\n      };\n\n      // Recursively insert file under the correct folder\n      const insertFile = (tree, folderPath) => {\n        if (tree.path === folderPath) {\n          tree.children.push(newNode);\n          return true;\n        }\n        for (const child of tree.children) {\n          if (child.type === 'folder' && insertFile(child, folderPath)) return true;\n        }\n        return false;\n      };\n      const updatedTree = JSON.parse(JSON.stringify(prevTree));\n      insertFile(updatedTree, path.substring(0, path.lastIndexOf('/') + 1));\n      return updatedTree;\n    });\n    if ((_socketRef$current6 = socketRef.current) !== null && _socketRef$current6 !== void 0 && _socketRef$current6.connected) {\n      socketRef.current.emit('new-file-created', {\n        roomId,\n        filePath: path,\n        content: defaultContent,\n        username\n      });\n    }\n  };\n  const createNewFolder = async () => {\n    if (!newFolderName) return;\n    try {\n      var _socketRef$current7;\n      // Ensure folder path ends with /\n      const folderPath = newFolderName.endsWith('/') ? newFolderName : `${newFolderName}/`;\n\n      // Save to backend\n      await fetch('http://localhost:5000/api/code/createFolder', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomId,\n          path: folderPath\n        })\n      });\n\n      // Update local state\n      setFileTree(prevTree => {\n        if (!prevTree) return prevTree;\n\n        // Check if folder already exists\n        const exists = prevTree.children.some(child => child.path === folderPath);\n        if (!exists) {\n          return {\n            ...prevTree,\n            children: [...prevTree.children, {\n              name: newFolderName,\n              type: 'folder',\n              path: folderPath,\n              children: []\n            }]\n          };\n        }\n        return prevTree;\n      });\n      setShowNewFolderModal(false);\n      setNewFolderName('');\n      if ((_socketRef$current7 = socketRef.current) !== null && _socketRef$current7 !== void 0 && _socketRef$current7.connected) {\n        socketRef.current.emit('new-folder-created', {\n          roomId,\n          path: folderPath,\n          username\n        });\n      }\n    } catch (error) {\n      console.error('Error creating folder:', error);\n    }\n  };\n  // Handle running the code\n  const handleRun = () => {\n    if (!files || !iframeRef.current) return;\n    const html = files['index.html'] || '';\n    const css = files['style.css'] || '';\n    const js = files['script.js'] || '';\n    const combined = `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <style>${css}</style>\n        </head>\n        <body>\n          ${html}\n          <script>\n            // Error handling for iframe\n            window.onerror = function(msg, url, line, col, error) {\n              console.error('Error:', msg, 'at', line + ':' + col);\n              return false;\n            };\n            ${js}\n          </script>\n        </body>\n      </html>\n    `;\n    const blob = new Blob([combined], {\n      type: 'text/html'\n    });\n    const url = URL.createObjectURL(blob);\n    iframeRef.current.src = url;\n    setTimeout(() => URL.revokeObjectURL(url), 1000);\n  };\n\n  // Handle file switching\n  const handleFileSwitch = fileName => {\n    var _socketRef$current8;\n    setActiveFile(fileName);\n    if ((_socketRef$current8 = socketRef.current) !== null && _socketRef$current8 !== void 0 && _socketRef$current8.connected) {\n      socketRef.current.emit('file-switch', {\n        roomId,\n        filePath: fileName,\n        username\n      });\n    }\n  };\n\n  // Cleanup on page unload\n  useBeforeUnload(() => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n  });\n  const getLanguage = file => {\n    if (file.endsWith('.js')) return 'javascript';\n    if (file.endsWith('.html')) return 'html';\n    if (file.endsWith('.css')) return 'css';\n    return 'plaintext';\n  };\n  if (!files || !fileTree) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading collaborative editor...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status\",\n          children: connectionStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1167,\n      columnNumber: 7\n    }, this);\n  }\n  const typingUsersList = Object.values(typingUsers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collaboration-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Room:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 11\n        }, this), \" \", roomId, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 45\n        }, this), \" \", username, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `connection-status ${connectionStatus === 'Connected' ? 'connected' : 'disconnected'}`,\n          children: [\"\\u25CF \", connectionStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"online-users\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"users-label\",\n          children: [\"Online (\", users.length, \"):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1190,\n          columnNumber: 11\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-badge\",\n          style: {\n            backgroundColor: getUserColor(user.id)\n          },\n          children: [user.username, user.id === currentUserRef.current && ' (You)']\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1189,\n        columnNumber: 9\n      }, this), typingUsersList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"typing-dots\",\n          children: \"\\u25CF\\u25CF\\u25CF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 13\n        }, this), typingUsersList.map(t => t.username).join(', '), typingUsersList.length === 1 ? ' is' : ' are', \" typing in \", activeFile, \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: /*#__PURE__*/_jsxDEV(FileSidebar, {\n          tree: fileTree,\n          activeFile: activeFile,\n          setActiveFile: handleFileSwitch,\n          onAddFile: handleAddFile,\n          onAddFolder: handleAddFolder,\n          onAddFileToFolder: createFileAtPath,\n          roomId: roomId,\n          setFiles: setFiles // Pass down the setter\n          ,\n          setFileTree: setFileTree // Pass down the setter\n          ,\n          socketRef: socketRef // Pass down the ref\n          ,\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: activeFile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-language\",\n              children: [\"(\", getLanguage(activeFile), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"run-button\",\n            onClick: handleRun,\n            children: \"\\u25B6 Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-container-with-cursors\",\n          children: [/*#__PURE__*/_jsxDEV(Editor, {\n            height: \"50vh\",\n            language: getLanguage(activeFile),\n            value: files[activeFile] || \"\",\n            onChange: handleCodeChange,\n            onMount: editor => {\n              editorRef.current = editor;\n              // Add cursor tracking\n              editor.onDidChangeCursorPosition(() => {\n                var _socketRef$current9;\n                if ((_socketRef$current9 = socketRef.current) !== null && _socketRef$current9 !== void 0 && _socketRef$current9.connected && !isUpdatingFromSocket.current) {\n                  const selection = editor.getSelection();\n                  if (selection) {\n                    const position = {\n                      lineNumber: selection.positionLineNumber,\n                      column: selection.positionColumn\n                    };\n                    socketRef.current.emit('cursor-position', {\n                      roomId,\n                      filePath: activeFile,\n                      position,\n                      username\n                    });\n                  }\n                }\n              });\n            },\n            theme: \"vs-dark\",\n            options: {\n              minimap: {\n                enabled: false\n              },\n              fontSize: 14,\n              wordWrap: 'on',\n              automaticLayout: true,\n              scrollBeyondLastLine: false,\n              renderWhitespace: 'selection',\n              smoothScrolling: true,\n              cursorBlinking: 'smooth',\n              cursorSmoothCaretAnimation: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1241,\n            columnNumber: 13\n          }, this), Object.entries(userCursors).map(([userId, cursor]) => {\n            var _cursor$position, _cursor$position2;\n            return cursor.activeFile === activeFile && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-cursor\",\n              style: {\n                position: 'absolute',\n                top: `${(((_cursor$position = cursor.position) === null || _cursor$position === void 0 ? void 0 : _cursor$position.lineNumber) || 0) * 18}px`,\n                left: `${(((_cursor$position2 = cursor.position) === null || _cursor$position2 === void 0 ? void 0 : _cursor$position2.column) || 0) * 8}px`,\n                borderLeft: `2px solid ${getUserColor(userId)}`,\n                height: '18px',\n                pointerEvents: 'none',\n                zIndex: 1000\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-cursor-label\",\n                style: {\n                  backgroundColor: getUserColor(userId),\n                  color: 'white',\n                  padding: '2px 6px',\n                  borderRadius: '3px',\n                  fontSize: '11px',\n                  position: 'absolute',\n                  top: '-20px',\n                  left: '0',\n                  whiteSpace: 'nowrap'\n                },\n                children: cursor.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1298,\n                columnNumber: 19\n              }, this)\n            }, userId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1285,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Output Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"refresh-output\",\n              onClick: handleRun,\n              children: \"\\uD83D\\uDD04 Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            ref: iframeRef,\n            title: \"Live Code Output\",\n            className: \"output-frame\",\n            sandbox: \"allow-scripts allow-same-origin allow-forms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1212,\n      columnNumber: 7\n    }, this), showNewFileModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"filename.html/.css/.js\",\n          value: newFileName,\n          onChange: e => setNewFileName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowNewFileModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createNewFile,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1347,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1345,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1337,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1336,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1180,\n    columnNumber: 5\n  }, this);\n}\n_s(EditorPage, \"RyLG/158rNSZjq37C5ceRw+v2Vs=\", false, function () {\n  return [useParams, useLocation, useNavigate, useBeforeUnload];\n});\n_c = EditorPage;\nfunction debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","useLocation","useParams","useNavigate","useBeforeUnload","Editor","io","FileSidebar","jsxDEV","_jsxDEV","EditorPage","_s","roomId","location","navigate","socketRef","initializedRef","currentUserRef","editorRef","iframeRef","isUpdatingFromSocket","lastChangeTimestamp","username","setUsername","files","setFiles","activeFile","setActiveFile","connectionStatus","setConnectionStatus","users","setUsers","activeUsers","setActiveUsers","typingUsers","setTypingUsers","userCursors","setUserCursors","showNewFileModal","setShowNewFileModal","showNewFolderModal","setShowNewFolderModal","newFileName","setNewFileName","newFolderName","setNewFolderName","fileTree","setFileTree","userColors","getUserColor","userId","index","Object","keys","indexOf","length","debouncedSave","debounce","filename","content","fetch","method","headers","body","JSON","stringify","err","console","error","fetchFiles","response","ok","status","defaultFiles","Promise","all","entries","map","defaultTree","name","type","path","children","tree","Error","json","requiredFiles","completeFiles","forEach","file","endsWith","some","child","push","initializeSocket","filesData","current","disconnect","socket","transports","upgrade","reconnectionAttempts","reconnectionDelay","timeout","on","log","id","emit","roomFiles","roomUsers","filePath","code","sender","position","senderUsername","prevFiles","newFiles","model","getModel","getValue","currentSelection","getSelection","scrollInfo","getScrollTop","setValue","setSelection","setScrollTop","prevTree","newTree","parse","updateFileContent","nodes","node","prev","timestamp","Date","now","setTimeout","removeNode","i","splice","oldPath","newPath","updateNode","newName","split","pop","updated","key","startsWith","newKey","replace","updatePaths","removeFolder","newUsername","exists","find","u","leftUsername","filter","newActive","newCursors","newTyping","cursorUsername","userActiveFile","typingUsername","parts","fileName","folderPathParts","part","folder","interval","setInterval","clearInterval","off","updatedKey","user","state","localStorage","getItem","initialize","setItem","_socketRef$current","connected","editor","handleCursorChange","selection","lineNumber","positionLineNumber","column","positionColumn","disposable","onDidChangeCursorPosition","dispose","handleCodeChange","value","_socketRef$current2","_editorRef$current","handleAddFile","handleAddFolder","folderPath","_socketRef$current3","folderName","newFolder","alert","createNewFile","fileExt","defaultContent","_socketRef$current4","_socketRef$current5","createFileAtPath","_socketRef$current6","newNode","insertFile","updatedTree","substring","lastIndexOf","createNewFolder","_socketRef$current7","handleRun","html","css","js","combined","blob","Blob","url","URL","createObjectURL","src","revokeObjectURL","handleFileSwitch","_socketRef$current8","getLanguage","className","_jsxFileName","columnNumber","typingUsersList","values","style","backgroundColor","t","join","onAddFile","onAddFolder","onAddFileToFolder","onClick","height","language","onChange","onMount","_socketRef$current9","theme","options","minimap","enabled","fontSize","wordWrap","automaticLayout","scrollBeyondLastLine","renderWhitespace","smoothScrolling","cursorBlinking","cursorSmoothCaretAnimation","cursor","_cursor$position","_cursor$position2","top","left","borderLeft","pointerEvents","zIndex","color","padding","borderRadius","whiteSpace","ref","title","sandbox","placeholder","e","target","_c","func","wait","executedFunction","args","later","clearTimeout","$RefreshReg$"],"sources":["D:/realtime-code-editor/client/src/pages/EditorPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { useLocation, useParams, useNavigate, useBeforeUnload } from 'react-router-dom';\r\nimport Editor from '@monaco-editor/react';\r\nimport { io } from 'socket.io-client';\r\nimport FileSidebar from '../components/FileSidebar';\r\nimport '../styles/editor.css';\r\n\r\nfunction EditorPage() {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const socketRef = useRef(null);\r\n  const initializedRef = useRef(false);\r\n  const currentUserRef = useRef(null);\r\n  const editorRef = useRef(null);\r\n  const iframeRef = useRef(null);\r\n  const isUpdatingFromSocket = useRef(false);\r\n  const lastChangeTimestamp = useRef(0);\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [files, setFiles] = useState(null);\r\n  const [activeFile, setActiveFile] = useState('index.html');\r\n  const [connectionStatus, setConnectionStatus] = useState('Connecting...');\r\n  const [users, setUsers] = useState([]);\r\n  const [activeUsers, setActiveUsers] = useState({});\r\n  const [typingUsers, setTypingUsers] = useState({});\r\n  const [userCursors, setUserCursors] = useState({});\r\nconst [showNewFileModal, setShowNewFileModal] = useState(false);\r\nconst [showNewFolderModal, setShowNewFolderModal] = useState(false);\r\nconst [newFileName, setNewFileName] = useState('');\r\nconst [newFolderName, setNewFolderName] = useState('');\r\n// Add to your existing state\r\nconst [fileTree, setFileTree] = useState(null);\r\n  // Colors for different users\r\n  const userColors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD', '#98D8C8'];\r\n  const getUserColor = (userId) => {\r\n    const index = Object.keys(activeUsers).indexOf(userId);\r\n    return userColors[index % userColors.length];\r\n  };\r\n\r\n  // Debounced save function\r\n  const debouncedSave = useCallback(\r\n    debounce(async (roomId, filename, content) => {\r\n      try {\r\n        await fetch('http://localhost:5000/api/code/save', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ roomId, filename, content }),\r\n        });\r\n      } catch (err) {\r\n        console.error('Error saving file:', err);\r\n      }\r\n    }, 2000),\r\n    []\r\n  );\r\n// const loadFiles = async () => {\r\n//   const { files, tree } = await fetchFiles();\r\n//   setFiles(files);\r\n//   setFileTree(tree);\r\n//   setActiveFile('index.html');\r\n// };\r\n  // Fetch files from backend\r\n  const fetchFiles = useCallback(async () => {\r\n  if (!roomId) return;\r\n\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/api/code/${roomId}`);\r\n    \r\n    if (!response.ok) {\r\n      if (response.status === 404) {\r\n        // Create default files structure\r\n        const defaultFiles = {\r\n          'index.html': '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>',\r\n          'style.css': '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}',\r\n          'script.js': '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");'\r\n        };\r\n\r\n        // Save default files to database\r\n        await Promise.all(\r\n          Object.entries(defaultFiles).map(([filename, content]) =>\r\n            debouncedSave(roomId, filename, content)\r\n        ));\r\n\r\n        // Create default tree structure\r\n        const defaultTree = {\r\n          name: 'root',\r\n          type: 'folder',\r\n          path: '',\r\n          children: [\r\n            {\r\n              name: 'index.html',\r\n              type: 'file',\r\n              path: 'index.html',\r\n              content: defaultFiles['index.html']\r\n            },\r\n            {\r\n              name: 'style.css',\r\n              type: 'file',\r\n              path: 'style.css',\r\n              content: defaultFiles['style.css']\r\n            },\r\n            {\r\n              name: 'script.js',\r\n              type: 'file',\r\n              path: 'script.js',\r\n              content: defaultFiles['script.js']\r\n            }\r\n          ]\r\n        };\r\n\r\n        return {\r\n          files: defaultFiles,\r\n          tree: defaultTree\r\n        };\r\n      }\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    \r\n    const { files, tree } = await response.json();\r\n    \r\n    // Ensure required files exist\r\n    const requiredFiles = ['index.html', 'style.css', 'script.js'];\r\n    const completeFiles = { ...files };\r\n    \r\n    requiredFiles.forEach(file => {\r\n      if (!completeFiles[file]) {\r\n        completeFiles[file] = file.endsWith('.html') ? \r\n          '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>' :\r\n          file.endsWith('.css') ? \r\n          '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}' :\r\n          '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");';\r\n        \r\n        // Add missing file to tree if it doesn't exist\r\n        if (!tree.children.some(child => child.name === file)) {\r\n          tree.children.push({\r\n            name: file,\r\n            type: 'file',\r\n            path: file,\r\n            content: completeFiles[file]\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return {\r\n      files: completeFiles,\r\n      tree: tree\r\n    };\r\n  } catch (error) {\r\n    console.error('Error loading files:', error);\r\n    \r\n    // Fallback to default structure\r\n    const defaultFiles = {\r\n      'index.html': '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>My App</title>\\n</head>\\n<body>\\n    <h1>Hello World!</h1>\\n</body>\\n</html>',\r\n      'style.css': '/* Add your CSS styles here */\\nbody {\\n    font-family: Arial, sans-serif;\\n    margin: 0;\\n    padding: 20px;\\n}',\r\n      'script.js': '// Add your JavaScript code here\\nconsole.log(\"Hello from JavaScript!\");'\r\n    };\r\n\r\n    const defaultTree = {\r\n      name: 'root',\r\n      type: 'folder',\r\n      path: '',\r\n      children: [\r\n        {\r\n          name: 'index.html',\r\n          type: 'file',\r\n          path: 'index.html',\r\n          content: defaultFiles['index.html']\r\n        },\r\n        {\r\n          name: 'style.css',\r\n          type: 'file',\r\n          path: 'style.css',\r\n          content: defaultFiles['style.css']\r\n        },\r\n        {\r\n          name: 'script.js',\r\n          type: 'file',\r\n          path: 'script.js',\r\n          content: defaultFiles['script.js']\r\n        }\r\n      ]\r\n    };\r\n\r\n    return {\r\n      files: defaultFiles,\r\n      tree: defaultTree\r\n    };\r\n  }\r\n}, [roomId, debouncedSave]);\r\n  // Initialize socket connection\r\n  const initializeSocket = useCallback((filesData) => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n    }\r\n\r\n    const socket = io('http://localhost:5000', {\r\n      transports: ['websocket'],\r\n      upgrade: false,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n      timeout: 10000,\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('🟢 Connected to server');\r\n      setConnectionStatus('Connected');\r\n      currentUserRef.current = socket.id;\r\n      socket.emit('join-room', { \r\n        roomId, \r\n        username,\r\n        files: filesData \r\n      });\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('🔴 Disconnected from server');\r\n      setConnectionStatus('Disconnected');\r\n    });\r\n\r\n    socket.on('reconnect', () => {\r\n      console.log('🟡 Reconnected to server');\r\n      setConnectionStatus('Connected');\r\n      socket.emit('join-room', { \r\n        roomId, \r\n        username,\r\n        files: files \r\n      });\r\n    });\r\n\r\n    socket.on('room-state', ({ files: roomFiles, users: roomUsers }) => {\r\n      console.log('📋 Received room state:', { files: Object.keys(roomFiles), users: roomUsers.length });\r\n      setFiles(roomFiles);\r\n      setUsers(roomUsers);\r\n    });\r\n\r\nsocket.on('code-update', ({ filePath, code, sender, position, username: senderUsername }) => {\r\n  if (sender !== currentUserRef.current) {\r\n    console.log('📝 Code update from', senderUsername, 'for', filePath);\r\n    \r\n    isUpdatingFromSocket.current = true;\r\n    \r\n    // Update both files state and file tree state in a single batch\r\n    setFiles(prevFiles => {\r\n      const newFiles = { ...prevFiles, [filePath]: code };\r\n      \r\n      // Update editor content if it's the active file\r\n      if (filePath === activeFile && editorRef.current) {\r\n        const model = editorRef.current.getModel();\r\n        if (model && model.getValue() !== code) {\r\n          // Save current cursor position\r\n          const currentSelection = editorRef.current.getSelection();\r\n          const scrollInfo = editorRef.current.getScrollTop();\r\n          \r\n          // Update content\r\n          model.setValue(code);\r\n          \r\n          // Restore cursor position if it was the current user's cursor\r\n          if (currentSelection && !position) {\r\n            editorRef.current.setSelection(currentSelection);\r\n            editorRef.current.setScrollTop(scrollInfo);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return newFiles;\r\n    });\r\n    // Update the file tree structure\r\n    setFileTree(prevTree => {\r\n      if (!prevTree) return prevTree;\r\n      \r\n      // Create a deep clone of the tree\r\n      const newTree = JSON.parse(JSON.stringify(prevTree));\r\n      \r\n      // Function to find and update the file in the tree\r\n      const updateFileContent = (nodes) => {\r\n        for (let node of nodes) {\r\n          if (node.path === filePath && node.type === 'file') {\r\n            node.content = code;\r\n            return true;\r\n          }\r\n          if (node.children && updateFileContent(node.children)) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      };\r\n      \r\n      updateFileContent(newTree.children);\r\n      return newTree;\r\n    });\r\n\r\n    // Update user cursor position\r\n    if (position) {\r\n      setUserCursors(prev => ({\r\n        ...prev,\r\n        [sender]: { \r\n          ...prev[sender], \r\n          position, \r\n          activeFile: filePath,\r\n          username: senderUsername\r\n        }\r\n      }));\r\n    }\r\n\r\n    // Show typing indicator\r\n    if (filePath === activeFile) {\r\n      setTypingUsers(prev => ({\r\n        ...prev,\r\n        [sender]: { username: senderUsername, timestamp: Date.now() }\r\n      }));\r\n    }\r\n\r\n    setTimeout(() => {\r\n      isUpdatingFromSocket.current = false;\r\n    }, 100);\r\n  }\r\n});\r\n\r\nsocket.on('file-deleted', ({ path }) => {\r\n  setFiles(prev => {\r\n    const newFiles = { ...prev };\r\n    delete newFiles[path];\r\n    return newFiles;\r\n  });\r\n\r\n  setFileTree(prevTree => {\r\n    if (!prevTree) return prevTree;\r\n    \r\n    const newTree = JSON.parse(JSON.stringify(prevTree));\r\n    const removeNode = (nodes) => {\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        if (nodes[i].path === path) {\r\n          nodes.splice(i, 1);\r\n          return true;\r\n        }\r\n        if (nodes[i].children && removeNode(nodes[i].children)) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    };\r\n    \r\n    removeNode(newTree.children);\r\n    return newTree;\r\n  });\r\n});\r\n\r\n socket.on('file-renamed', ({ oldPath, newPath }) => {\r\n  setFiles(prev => {\r\n    const newFiles = { ...prev };\r\n    if (newFiles[oldPath]) {\r\n      newFiles[newPath] = newFiles[oldPath];\r\n      delete newFiles[oldPath];\r\n    }\r\n    return newFiles;\r\n  });\r\n\r\n  setFileTree(prevTree => {\r\n    if (!prevTree) return prevTree;\r\n    \r\n    const newTree = JSON.parse(JSON.stringify(prevTree));\r\n    const updateNode = (nodes) => {\r\n      for (let node of nodes) {\r\n        if (node.path === oldPath) {\r\n          const newName = newPath.split('/').pop();\r\n          node.name = newName;\r\n          node.path = newPath;\r\n          return true;\r\n        }\r\n        if (node.children && updateNode(node.children)) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    };\r\n    \r\n    updateNode(newTree.children);\r\n    return newTree;\r\n  });\r\n\r\n  if (activeFile === oldPath) {\r\n    setActiveFile(newPath);\r\n  }\r\n});\r\nsocket.on('folder-renamed', ({ oldPath, newPath }) => {\r\n  // Update files\r\n  setFiles(prev => {\r\n    const updated = {};\r\n    for (const key in prev) {\r\n      if (key.startsWith(oldPath)) {\r\n        const newKey = key.replace(oldPath, newPath);\r\n        updated[newKey] = prev[key];\r\n      } else {\r\n        updated[key] = prev[key];\r\n      }\r\n    }\r\n    return updated;\r\n  });\r\n\r\n  // Update file tree\r\n  setFileTree(prevTree => {\r\n    if (!prevTree) return prevTree;\r\n    const newTree = JSON.parse(JSON.stringify(prevTree));\r\n\r\n    const updatePaths = (nodes) => {\r\n      nodes.forEach((node) => {\r\n        if (node.path.startsWith(oldPath)) {\r\n          node.path = node.path.replace(oldPath, newPath);\r\n          if (node.type === 'folder') {\r\n            node.name = newPath.replace(/\\/$/, '').split('/').pop();\r\n          }\r\n        }\r\n        if (node.children) updatePaths(node.children);\r\n      });\r\n    };\r\n\r\n    updatePaths(newTree.children);\r\n    return newTree;\r\n  });\r\n});\r\nsocket.on('folder-deleted', ({ path }) => {\r\n  setFiles(prev => {\r\n    const updated = {};\r\n    for (const key in prev) {\r\n      if (!key.startsWith(path)) {\r\n        updated[key] = prev[key];\r\n      }\r\n    }\r\n    return updated;\r\n  });\r\n\r\n  setFileTree(prevTree => {\r\n    if (!prevTree) return prevTree;\r\n    const newTree = JSON.parse(JSON.stringify(prevTree));\r\n\r\n    const removeFolder = (nodes) => {\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        if (nodes[i].path === path) {\r\n          nodes.splice(i, 1);\r\n          return true;\r\n        }\r\n        if (nodes[i].children && removeFolder(nodes[i].children)) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    };\r\n\r\n    removeFolder(newTree.children);\r\n    return newTree;\r\n  });\r\n});\r\n\r\n    socket.on('user-joined', ({ userId, username: newUsername }) => {\r\n      console.log('👤 User joined:', newUsername);\r\n      setUsers(prev => {\r\n        const exists = prev.find(u => u.id === userId);\r\n        if (!exists) {\r\n          return [...prev, { id: userId, username: newUsername }];\r\n        }\r\n        return prev;\r\n      });\r\n    });\r\n\r\n    socket.on('user-left', ({ userId, username: leftUsername }) => {\r\n      console.log('👤 User left:', leftUsername);\r\n      setUsers(prev => prev.filter(u => u.id !== userId));\r\n      setActiveUsers(prev => {\r\n        const newActive = { ...prev };\r\n        delete newActive[userId];\r\n        return newActive;\r\n      });\r\n      setUserCursors(prev => {\r\n        const newCursors = { ...prev };\r\n        delete newCursors[userId];\r\n        return newCursors;\r\n      });\r\n      setTypingUsers(prev => {\r\n        const newTyping = { ...prev };\r\n        delete newTyping[userId];\r\n        return newTyping;\r\n      });\r\n    });\r\n\r\n    socket.on('cursor-position', ({ userId, username: cursorUsername, position, activeFile: userActiveFile }) => {\r\n      if (userId !== currentUserRef.current && userActiveFile === activeFile) {\r\n        setUserCursors(prev => ({\r\n          ...prev,\r\n          [userId]: { \r\n            position, \r\n            activeFile: userActiveFile, \r\n            username: cursorUsername,\r\n            timestamp: Date.now()\r\n          }\r\n        }));\r\n      }\r\n    });\r\n\r\n    socket.on('user-typing', ({ userId, username: typingUsername, filePath }) => {\r\n      if (userId !== currentUserRef.current && filePath === activeFile) {\r\n        setTypingUsers(prev => ({\r\n          ...prev,\r\n          [userId]: { username: typingUsername, timestamp: Date.now() }\r\n        }));\r\n      }\r\n    });\r\n// Listen for remote file creation\r\nsocket.on('remote-file-created', ({ filePath, content }) => {\r\n  setFiles(prev => ({ ...prev, [filePath]: content }));\r\n\r\n  setFileTree(prevTree => {\r\n    if (!prevTree) return prevTree;\r\n\r\n    const newTree = JSON.parse(JSON.stringify(prevTree)); // Deep copy\r\n    const parts = filePath.split('/');\r\n    const fileName = parts.pop(); // last item is the file name\r\n    const folderPathParts = parts;\r\n\r\n    let current = newTree;\r\n\r\n    for (const part of folderPathParts) {\r\n      let folder = current.children.find(\r\n        child => child.name === part && child.type === 'folder'\r\n      );\r\n      if (!folder) {\r\n        folder = {\r\n          name: part,\r\n          type: 'folder',\r\n          path: (current.path || '') + part + '/',\r\n          children: []\r\n        };\r\n        current.children.push(folder);\r\n      }\r\n      current = folder;\r\n    }\r\n\r\n    // Add the new file under the right folder\r\n    current.children.push({\r\n      name: fileName,\r\n      type: 'file',\r\n      path: filePath,\r\n      content\r\n    });\r\n\r\n    return newTree;\r\n  });\r\n});\r\n\r\n// Listen for remote folder creation\r\nsocket.on('remote-folder-created', ({ path }) => {\r\n  setFileTree(prevTree => {\r\n    if (!prevTree) return prevTree;\r\n    const exists = prevTree.children.some(child => child.path === path);\r\n    if (!exists) {\r\n      return {\r\n        ...prevTree,\r\n        children: [\r\n          ...prevTree.children,\r\n          {\r\n            name: path.replace(/\\/$/, '').split('/').pop(),\r\n            type: 'folder',\r\n            path,\r\n            children: []\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    return prevTree;\r\n  });\r\n});\r\n\r\n    socketRef.current = socket;\r\n    return socket;\r\n  }, [username, roomId, activeFile, files]);\r\n\r\n  // Clear old typing indicators\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = Date.now();\r\n      setTypingUsers(prev => {\r\n        const updated = { ...prev };\r\n        Object.keys(updated).forEach(userId => {\r\n          if (now - updated[userId].timestamp > 3000) {\r\n            delete updated[userId];\r\n          }\r\n        });\r\n        return updated;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\nuseEffect(() => {\r\n  if (!socketRef.current) return;\r\n\r\n  const socket = socketRef.current;\r\n\r\n  socket.on('file-deleted', ({ path }) => {\r\n    setFiles(prev => {\r\n      const newFiles = { ...prev };\r\n      delete newFiles[path];\r\n      return newFiles;\r\n    });\r\n\r\n    setFileTree(prevTree => {\r\n      if (!prevTree) return prevTree;\r\n      const newTree = JSON.parse(JSON.stringify(prevTree));\r\n      const removeNode = (nodes) => {\r\n        for (let i = 0; i < nodes.length; i++) {\r\n          if (nodes[i].path === path) {\r\n            nodes.splice(i, 1);\r\n            return true;\r\n          }\r\n          if (nodes[i].children && removeNode(nodes[i].children)) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      };\r\n      removeNode(newTree.children);\r\n      return newTree;\r\n    });\r\n  });\r\n\r\n  socket.on('file-renamed', ({ oldPath, newPath }) => {\r\n    setFiles(prev => {\r\n      const newFiles = { ...prev };\r\n      if (newFiles[oldPath]) {\r\n        newFiles[newPath] = newFiles[oldPath];\r\n        delete newFiles[oldPath];\r\n      }\r\n      return newFiles;\r\n    });\r\n\r\n    setFileTree(prevTree => {\r\n      if (!prevTree) return prevTree;\r\n      const newTree = JSON.parse(JSON.stringify(prevTree));\r\n      const updateNode = (nodes) => {\r\n        for (let node of nodes) {\r\n          if (node.path === oldPath) {\r\n            const newName = newPath.split('/').pop();\r\n            node.name = newName;\r\n            node.path = newPath;\r\n            return true;\r\n          }\r\n          if (node.children && updateNode(node.children)) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      };\r\n      updateNode(newTree.children);\r\n      return newTree;\r\n    });\r\n\r\n    if (activeFile === oldPath) {\r\n      setActiveFile(newPath);\r\n    }\r\n  });\r\n\r\n  return () => {\r\n    socket.off('file-deleted');\r\n    socket.off('file-renamed');\r\n  };\r\n}, [activeFile]);\r\nuseEffect(() => {\r\n  if (!socketRef.current) return;\r\n  const socket = socketRef.current;\r\n\r\n  // 🔁 Folder Renamed\r\n  socket.on('folder-renamed', ({ oldPath, newPath }) => {\r\n    setFiles(prev => {\r\n      const updated = {};\r\n      for (const key in prev) {\r\n        if (key.startsWith(oldPath)) {\r\n          const updatedKey = key.replace(oldPath, newPath);\r\n          updated[updatedKey] = prev[key];\r\n        } else {\r\n          updated[key] = prev[key];\r\n        }\r\n      }\r\n      return updated;\r\n    });\r\n\r\n    setFileTree(prev => {\r\n      if (!prev) return prev;\r\n      const tree = JSON.parse(JSON.stringify(prev));\r\n      const updatePaths = (nodes) => {\r\n        nodes.forEach(node => {\r\n          if (node.path.startsWith(oldPath)) {\r\n            node.path = node.path.replace(oldPath, newPath);\r\n            if (node.type === 'folder') {\r\n              node.name = newPath.replace(/\\/$/, '').split('/').pop();\r\n            }\r\n          }\r\n          if (node.children) updatePaths(node.children);\r\n        });\r\n      };\r\n      updatePaths(tree.children);\r\n      return tree;\r\n    });\r\n  });\r\n\r\n  // 🗑️ Folder Deleted\r\n  socket.on('folder-deleted', ({ path }) => {\r\n    setFiles(prev => {\r\n      const updated = {};\r\n      for (const key in prev) {\r\n        if (!key.startsWith(path)) {\r\n          updated[key] = prev[key];\r\n        }\r\n      }\r\n      return updated;\r\n    });\r\n\r\n    setFileTree(prev => {\r\n      if (!prev) return prev;\r\n      const tree = JSON.parse(JSON.stringify(prev));\r\n      const removeFolder = (nodes) => {\r\n        for (let i = 0; i < nodes.length; i++) {\r\n          if (nodes[i].path === path) {\r\n            nodes.splice(i, 1);\r\n            return true;\r\n          }\r\n          if (nodes[i].children && removeFolder(nodes[i].children)) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      };\r\n      removeFolder(tree.children);\r\n      return tree;\r\n    });\r\n  });\r\n\r\n  return () => {\r\n    socket.off('folder-renamed');\r\n    socket.off('folder-deleted');\r\n  };\r\n}, []);\r\n\r\n  // Main initialization effect\r\n  useEffect(() => {\r\n    if (!roomId) {\r\n      navigate('/room');\r\n      return;\r\n    }\r\n\r\n    if (initializedRef.current) return;\r\n    initializedRef.current = true;\r\n\r\n    const user = (location.state && location.state.username) ||\r\n                 localStorage.getItem('username') ||\r\n                 'Guest';\r\n    setUsername(user);\r\n\r\n  const initialize = async () => {\r\n  try {\r\n    // 1. Fetch files - now returns { files, tree }\r\n    const { files: filesData, tree } = await fetchFiles();\r\n    \r\n    // 2. Set both states\r\n    setFiles(filesData);\r\n    setFileTree(tree); // Make sure you have this state: const [fileTree, setFileTree] = useState(null);\r\n    \r\n    // 3. Initialize socket with the flat files data\r\n    initializeSocket(filesData);\r\n    \r\n    // 4. Set username (unchanged)\r\n    localStorage.setItem('username', user);\r\n    \r\n    // 5. Set default active file if needed\r\n    if (!activeFile) {\r\n      setActiveFile('index.html');\r\n    }\r\n  } catch (error) {\r\n    console.error('Initialization error:', error);\r\n    setConnectionStatus('Initialization failed');\r\n  }\r\n};\r\n\r\n    initialize();\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, [roomId, navigate, location.state, fetchFiles, initializeSocket]);\r\n\r\n  // Track cursor position more frequently\r\n  useEffect(() => {\r\n    if (!editorRef.current || !socketRef.current?.connected) return;\r\n\r\n    const editor = editorRef.current;\r\n    \r\n    const handleCursorChange = () => {\r\n      if (isUpdatingFromSocket.current) return;\r\n      \r\n      const selection = editor.getSelection();\r\n      if (selection) {\r\n        const position = {\r\n          lineNumber: selection.positionLineNumber,\r\n          column: selection.positionColumn\r\n        };\r\n        \r\n        socketRef.current.emit('cursor-position', {\r\n          roomId,\r\n          filePath: activeFile,\r\n          position,\r\n          username\r\n        });\r\n      }\r\n    };\r\n\r\n    const disposable = editor.onDidChangeCursorPosition(handleCursorChange);\r\n    return () => disposable.dispose();\r\n  }, [roomId, activeFile, username]);\r\n\r\n  // Handle code changes with real-time sync\r\n  const handleCodeChange = useCallback((value) => {\r\n    if (!value) value = '';\r\n    if (isUpdatingFromSocket.current) return;\r\n    \r\n    const timestamp = Date.now();\r\n    lastChangeTimestamp.current = timestamp;\r\n    \r\n    setFiles(prev => {\r\n      if (prev[activeFile] !== value) {\r\n        const newFiles = { ...prev, [activeFile]: value };\r\n        \r\n        if (socketRef.current?.connected) {\r\n          const selection = editorRef.current?.getSelection();\r\n          const position = selection ? {\r\n            lineNumber: selection.positionLineNumber,\r\n            column: selection.positionColumn\r\n          } : null;\r\n          \r\n          // Emit real-time changes\r\n          socketRef.current.emit('code-change', {\r\n            roomId,\r\n            filePath: activeFile,\r\n            code: value,\r\n            position,\r\n            timestamp,\r\n            username\r\n          });\r\n\r\n          // Emit typing indicator\r\n          socketRef.current.emit('user-typing', {\r\n            roomId,\r\n            filePath: activeFile,\r\n            username\r\n          });\r\n        }\r\n        \r\n        // Debounced save to database\r\n        debouncedSave(roomId, activeFile, value);\r\n        return newFiles;\r\n      }\r\n      return prev;\r\n    });\r\n  }, [activeFile, roomId, debouncedSave, username]);\r\nconst handleAddFile = () => {\r\n  setShowNewFileModal(true);\r\n};\r\n\r\nconst handleAddFolder = async (folderPath) => {\r\n  try {\r\n    // Call backend API to create folder\r\n    const response = await fetch('http://localhost:5000/api/code/createFolder', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ roomId, path: folderPath }),\r\n    });\r\n\r\n    if (!response.ok) throw new Error('Folder creation failed');\r\n\r\n    // Update the file tree state\r\n    setFileTree(prevTree => {\r\n      if (!prevTree) return prevTree;\r\n      \r\n      const folderName = folderPath.replace(/\\/$/, '');\r\n      const newFolder = {\r\n        name: folderName.split('/').pop(),\r\n        type: 'folder',\r\n        path: folderPath,\r\n        children: []\r\n      };\r\n\r\n      return {\r\n        ...prevTree,\r\n        children: [...prevTree.children, newFolder]\r\n      };\r\n    });\r\n\r\n    // Notify other users\r\n    if (socketRef.current?.connected) {\r\n      socketRef.current.emit('folder-created', {\r\n        roomId,\r\n        path: folderPath,\r\n        username\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('Folder creation error:', error);\r\n    alert('Failed to create folder');\r\n  }\r\n};\r\n\r\nconst createNewFile = async () => {\r\n  if (!newFileName) return;\r\n  \r\n  const fileExt = newFileName.split('.').pop();\r\n  let defaultContent = '';\r\n  \r\n  if (fileExt === 'html') {\r\n    defaultContent = '<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>New File</title>\\n</head>\\n<body>\\n    \\n</body>\\n</html>';\r\n  } else if (fileExt === 'css') {\r\n    defaultContent = '/* Your CSS here */';\r\n  } else if (fileExt === 'js') {\r\n    defaultContent = '// Your JavaScript here';\r\n  }\r\n  \r\n  try {\r\n    // Save to backend first\r\n    await fetch('http://localhost:5000/api/code/save', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ \r\n        roomId, \r\n        filePath: newFileName, \r\n        content: defaultContent \r\n      }),\r\n    });\r\n\r\n    // Then update local state\r\n    setFiles(prev => ({ ...prev, [newFileName]: defaultContent }));\r\n    \r\n    setFileTree(prevTree => {\r\n      if (!prevTree) return prevTree;\r\n      \r\n      // Check if file already exists in tree\r\n      const exists = prevTree.children.some(child => \r\n        child.path === newFileName\r\n      );\r\n      \r\n      if (!exists) {\r\n        return {\r\n          ...prevTree,\r\n          children: [\r\n            ...prevTree.children,\r\n            {\r\n              name: newFileName,\r\n              type: 'file',\r\n              path: newFileName,\r\n              content: defaultContent\r\n            }\r\n          ]\r\n        };\r\n      }\r\n      return prevTree;\r\n    });\r\n        if (socketRef.current?.connected) {\r\n      socketRef.current.emit('new-file-created', {\r\n        roomId,\r\n        filePath: newFileName,\r\n        content: defaultContent,\r\n        username\r\n      });\r\n    }\r\n\r\n    setActiveFile(newFileName);\r\n    setShowNewFileModal(false);\r\n    setNewFileName('');\r\n    \r\n    // Notify other users\r\n    if (socketRef.current?.connected) {\r\n      socketRef.current.emit('code-change', {\r\n        roomId,\r\n        filePath: newFileName,\r\n        code: defaultContent,\r\n        username\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('Error creating file:', error);\r\n  }\r\n};\r\nconst createFileAtPath = async (path,content = '// placeholder') => {\r\n  const fileExt = path.split('.').pop();\r\n  let defaultContent = content;\r\n  if(!content){\r\n  if (fileExt === 'html') defaultContent = '<!DOCTYPE html>\\n<html>\\n<head>\\n<title></title>\\n</head>\\n<body>\\n</body>\\n</html>';\r\n  else if (fileExt === 'css') defaultContent = '/* CSS here */';\r\n else if (fileExt === 'js') defaultContent = '// JS here';\r\n else defaultContent='//placeholder';\r\n  }\r\n  await fetch('http://localhost:5000/api/code/save', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ roomId, filePath: path, content: defaultContent }),\r\n  });\r\n\r\n  setFiles(prev => ({ ...prev, [path]: defaultContent }));\r\n  setFileTree(prevTree => {\r\n    if (!prevTree) return prevTree;\r\n\r\n    const newNode = {\r\n      name: path.split('/').pop(),\r\n      type: 'file',\r\n      path,\r\n      content: defaultContent\r\n    };\r\n\r\n    // Recursively insert file under the correct folder\r\n    const insertFile = (tree, folderPath) => {\r\n      if (tree.path === folderPath) {\r\n        tree.children.push(newNode);\r\n        return true;\r\n      }\r\n      for (const child of tree.children) {\r\n        if (child.type === 'folder' && insertFile(child, folderPath)) return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    const updatedTree = JSON.parse(JSON.stringify(prevTree));\r\n    insertFile(updatedTree, path.substring(0, path.lastIndexOf('/') + 1));\r\n    return updatedTree;\r\n  });\r\n\r\n  if (socketRef.current?.connected) {\r\n    socketRef.current.emit('new-file-created', {\r\n      roomId,\r\n      filePath: path,\r\n      content: defaultContent,\r\n      username\r\n    });\r\n  }\r\n};\r\n\r\nconst createNewFolder = async () => {\r\n  if (!newFolderName) return;\r\n  \r\n  try {\r\n    // Ensure folder path ends with /\r\n    const folderPath = newFolderName.endsWith('/') ? \r\n      newFolderName : `${newFolderName}/`;\r\n    \r\n    // Save to backend\r\n    await fetch('http://localhost:5000/api/code/createFolder', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ \r\n        roomId, \r\n        path: folderPath \r\n      }),\r\n    });\r\n\r\n    // Update local state\r\n    setFileTree(prevTree => {\r\n      if (!prevTree) return prevTree;\r\n      \r\n      // Check if folder already exists\r\n      const exists = prevTree.children.some(child => \r\n        child.path === folderPath\r\n      );\r\n      \r\n      if (!exists) {\r\n        return {\r\n          ...prevTree,\r\n          children: [\r\n            ...prevTree.children,\r\n            {\r\n              name: newFolderName,\r\n              type: 'folder',\r\n              path: folderPath,\r\n              children: []\r\n            }\r\n          ]\r\n        };\r\n      }\r\n      return prevTree;\r\n    });\r\n    \r\n    setShowNewFolderModal(false);\r\n    setNewFolderName('');\r\n        if (socketRef.current?.connected) {\r\n      socketRef.current.emit('new-folder-created', {\r\n        roomId,\r\n        path: folderPath,\r\n        username\r\n      });\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error creating folder:', error);\r\n  }\r\n};\r\n  // Handle running the code\r\n  const handleRun = () => {\r\n    if (!files || !iframeRef.current) return;\r\n\r\n    const html = files['index.html'] || '';\r\n    const css = files['style.css'] || '';\r\n    const js = files['script.js'] || '';\r\n\r\n    const combined = `\r\n      <!DOCTYPE html>\r\n      <html>\r\n        <head>\r\n          <meta charset=\"UTF-8\">\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n          <style>${css}</style>\r\n        </head>\r\n        <body>\r\n          ${html}\r\n          <script>\r\n            // Error handling for iframe\r\n            window.onerror = function(msg, url, line, col, error) {\r\n              console.error('Error:', msg, 'at', line + ':' + col);\r\n              return false;\r\n            };\r\n            ${js}\r\n          </script>\r\n        </body>\r\n      </html>\r\n    `;\r\n\r\n    const blob = new Blob([combined], { type: 'text/html' });\r\n    const url = URL.createObjectURL(blob);\r\n    iframeRef.current.src = url;\r\n    setTimeout(() => URL.revokeObjectURL(url), 1000);\r\n  };\r\n\r\n  // Handle file switching\r\n  const handleFileSwitch = (fileName) => {\r\n    setActiveFile(fileName);\r\n    if (socketRef.current?.connected) {\r\n      socketRef.current.emit('file-switch', {\r\n        roomId,\r\n        filePath: fileName,\r\n        username\r\n      });\r\n    }\r\n  };\r\n\r\n  // Cleanup on page unload\r\n  useBeforeUnload(() => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n    }\r\n  });\r\n\r\n  const getLanguage = (file) => {\r\n    if (file.endsWith('.js')) return 'javascript';\r\n    if (file.endsWith('.html')) return 'html';\r\n    if (file.endsWith('.css')) return 'css';\r\n    return 'plaintext';\r\n  };\r\n\r\n  if (!files || !fileTree) {\r\n    return (\r\n      <div className=\"editor-wrapper\">\r\n        <div className=\"loading-screen\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <div>Loading collaborative editor...</div>\r\n          <div className=\"connection-status\">{connectionStatus}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const typingUsersList = Object.values(typingUsers);\r\n\r\n  return (\r\n    <div className=\"editor-wrapper\">\r\n      <div className=\"collaboration-bar\">\r\n        <div className=\"room-info\">\r\n          <strong>Room:</strong> {roomId} | <strong>User:</strong> {username}\r\n          <span className={`connection-status ${connectionStatus === 'Connected' ? 'connected' : 'disconnected'}`}>\r\n            ● {connectionStatus}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"online-users\">\r\n          <span className=\"users-label\">Online ({users.length}):</span>\r\n          {users.map(user => (\r\n            <div \r\n              key={user.id} \r\n              className=\"user-badge\"\r\n              style={{ backgroundColor: getUserColor(user.id) }}\r\n            >\r\n              {user.username}\r\n              {user.id === currentUserRef.current && ' (You)'}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {typingUsersList.length > 0 && (\r\n          <div className=\"typing-indicator\">\r\n            <span className=\"typing-dots\">●●●</span>\r\n            {typingUsersList.map(t => t.username).join(', ')} \r\n            {typingUsersList.length === 1 ? ' is' : ' are'} typing in {activeFile}...\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"editor-container\">\r\n        <div className=\"sidebar\">\r\n          <FileSidebar\r\n            tree={fileTree} \r\n           activeFile={activeFile}\r\n         setActiveFile={handleFileSwitch}\r\n         onAddFile={handleAddFile}\r\n             onAddFolder={handleAddFolder}\r\n               onAddFileToFolder={createFileAtPath}\r\n               roomId={roomId}\r\n               setFiles={setFiles}           // Pass down the setter\r\n          setFileTree={setFileTree}     // Pass down the setter\r\n      socketRef={socketRef}         // Pass down the ref\r\n      username={username}\r\n          /> \r\n        </div>\r\n\r\n        <div className=\"main-editor\">\r\n          <div className=\"editor-header\">\r\n            <div className=\"file-info\">\r\n              <strong>{activeFile}</strong>\r\n              <span className=\"file-language\">({getLanguage(activeFile)})</span>\r\n            </div>\r\n            <button className=\"run-button\" onClick={handleRun}>\r\n              ▶ Run \r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"editor-container-with-cursors\">\r\n            <Editor\r\n              height=\"50vh\"\r\n              language={getLanguage(activeFile)}\r\n              value={files[activeFile] || \"\"}\r\n              onChange={handleCodeChange}\r\n              onMount={editor => {\r\n                editorRef.current = editor;\r\n                // Add cursor tracking\r\n                editor.onDidChangeCursorPosition(() => {\r\n                  if (socketRef.current?.connected && !isUpdatingFromSocket.current) {\r\n                    const selection = editor.getSelection();\r\n                    if (selection) {\r\n                      const position = {\r\n                        lineNumber: selection.positionLineNumber,\r\n                        column: selection.positionColumn\r\n                      };\r\n                      \r\n                      socketRef.current.emit('cursor-position', {\r\n                        roomId,\r\n                        filePath: activeFile,\r\n                        position,\r\n                        username\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              }}\r\n              theme=\"vs-dark\"\r\n              options={{\r\n                minimap: { enabled: false },\r\n                fontSize: 14,\r\n                wordWrap: 'on',\r\n                automaticLayout: true,\r\n                scrollBeyondLastLine: false,\r\n                renderWhitespace: 'selection',\r\n                smoothScrolling: true,\r\n                cursorBlinking: 'smooth',\r\n                cursorSmoothCaretAnimation: true,\r\n              }}\r\n            />\r\n            \r\n            {/* Render other users' cursors */}\r\n            {Object.entries(userCursors).map(([userId, cursor]) => (\r\n              cursor.activeFile === activeFile && (\r\n                <div\r\n                  key={userId}\r\n                  className=\"user-cursor\"\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: `${(cursor.position?.lineNumber || 0) * 18}px`,\r\n                    left: `${(cursor.position?.column || 0) * 8}px`,\r\n                    borderLeft: `2px solid ${getUserColor(userId)}`,\r\n                    height: '18px',\r\n                    pointerEvents: 'none',\r\n                    zIndex: 1000,\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"user-cursor-label\"\r\n                    style={{\r\n                      backgroundColor: getUserColor(userId),\r\n                      color: 'white',\r\n                      padding: '2px 6px',\r\n                      borderRadius: '3px',\r\n                      fontSize: '11px',\r\n                      position: 'absolute',\r\n                      top: '-20px',\r\n                      left: '0',\r\n                      whiteSpace: 'nowrap',\r\n                    }}\r\n                  >\r\n                    {cursor.username}\r\n                  </div>\r\n                </div>\r\n              )\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"output-panel\">\r\n            <div className=\"output-header\">\r\n              <strong>Output Preview</strong>\r\n              <button className=\"refresh-output\" onClick={handleRun}>\r\n                🔄 Refresh\r\n              </button>\r\n            </div>\r\n            <iframe\r\n              ref={iframeRef}\r\n              title=\"Live Code Output\"\r\n              className=\"output-frame\"\r\n              sandbox=\"allow-scripts allow-same-origin allow-forms\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showNewFileModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Create New File</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"filename.html/.css/.js\"\r\n              value={newFileName}\r\n              onChange={(e) => setNewFileName(e.target.value)}\r\n            />\r\n            <div className=\"modal-actions\">\r\n              <button onClick={() => setShowNewFileModal(false)}>Cancel</button>\r\n              <button onClick={createNewFile}>Create</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* {showNewFolderModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Create New Folder</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Folder name\"\r\n              value={newFolderName}\r\n              onChange={(e) => setNewFolderName(e.target.value)}\r\n            />\r\n            <div className=\"modal-actions\">\r\n              <button onClick={() => setShowNewFolderModal(false)}>Cancel</button>\r\n              <button onClick={createNewFolder}>Create</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n   \r\n\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}\r\n\r\nexport default EditorPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}