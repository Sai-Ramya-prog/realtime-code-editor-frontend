{"ast":null,"code":"var _jsxFileName = \"D:\\\\realtime-code-editor\\\\client\\\\src\\\\pages\\\\EditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { useLocation, useParams, useNavigate } from 'react-router-dom';\nimport Editor from '@monaco-editor/react';\nimport { io } from 'socket.io-client';\nimport FileSidebar from '../components/FileSidebar';\nimport '../styles/editor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditorPage() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const socketRef = useRef(null);\n  const [username, setUsername] = useState('');\n  const [files, setFiles] = useState({\n    'index.html': '<!-- HTML file -->\\n',\n    'style.css': '/* CSS file */\\n',\n    'script.js': '// JS file\\n'\n  });\n  const [activeFile, setActiveFile] = useState('index.html');\n  const [isLoading, setIsLoading] = useState(true);\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('Connecting...');\n  const editorRef = useRef(null);\n  const iframeRef = useRef(null);\n\n  // Initialize username from various sources\n  useEffect(() => {\n    const user = location.state && location.state.username || localStorage.getItem('username') || 'Guest';\n    setUsername(user);\n  }, [location.state]);\n\n  // Debounced save function\n  const debouncedSave = useCallback(debounce(async (roomId, filename, content) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/code/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomId,\n          filename,\n          content\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save file');\n      }\n    } catch (err) {\n      console.error('Error saving file:', err);\n    }\n  }, 1000), []);\n\n  // Fetch files from backend\n  const fetchFiles = useCallback(async () => {\n    if (!roomId) return;\n    try {\n      setIsLoading(true);\n      const response = await fetch(`http://localhost:5000/api/code/${roomId}`);\n      if (!response.ok) {\n        if (response.status === 404) {\n          // Initialize with default files if room doesn't exist\n          const defaultFiles = {\n            'index.html': '<!-- HTML file -->\\n',\n            'style.css': '/* CSS file */\\n',\n            'script.js': '// JS file\\n'\n          };\n\n          // Save defaults to DB\n          await Promise.all(Object.entries(defaultFiles).map(([filename, content]) => debouncedSave(roomId, filename, content)));\n          setFiles(defaultFiles);\n          setActiveFile('index.html');\n          return;\n        }\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (Object.keys(data).length > 0) {\n        setFiles(data);\n        setActiveFile(Object.keys(data)[0] || 'index.html');\n      } else {\n        // Handle empty response\n        const defaultFiles = {\n          'index.html': '<!-- HTML file -->\\n',\n          'style.css': '/* CSS file */\\n',\n          'script.js': '// JS file\\n'\n        };\n        setFiles(defaultFiles);\n        setActiveFile('index.html');\n      }\n    } catch (error) {\n      console.error('Error loading files:', error);\n      setConnectionStatus('Failed to load files. Trying again...');\n      // Retry after delay\n      setTimeout(() => fetchFiles(), 2000);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [roomId, debouncedSave]);\n\n  // Initialize socket connection\n  const initializeSocket = useCallback(() => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    socketRef.current = io('http://localhost:5000', {\n      transports: ['websocket'],\n      upgrade: false,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    socketRef.current.on('connect', () => {\n      console.log('Socket connected');\n      setIsConnected(true);\n      setConnectionStatus('Connected');\n      if (username && roomId) {\n        socketRef.current.emit('join-room', {\n          roomId,\n          username,\n          files // Send current files state to sync with others\n        });\n      }\n    });\n    socketRef.current.on('disconnect', () => {\n      console.log('Socket disconnected');\n      setIsConnected(false);\n      setConnectionStatus('Disconnected. Reconnecting...');\n    });\n    socketRef.current.on('receive-code', ({\n      filePath,\n      code\n    }) => {\n      console.log('Received code update:', filePath);\n      setFiles(prev => ({\n        ...prev,\n        [filePath]: code\n      }));\n    });\n    socketRef.current.on('connect_error', error => {\n      console.error('Socket connection error:', error);\n      setIsConnected(false);\n      setConnectionStatus('Connection error. Retrying...');\n    });\n    socketRef.current.io.on('reconnect', attempt => {\n      console.log(`Reconnected after ${attempt} attempts`);\n      setIsConnected(true);\n      setConnectionStatus('Connected');\n      if (username && roomId) {\n        socketRef.current.emit('join-room', {\n          roomId,\n          username\n        });\n      }\n    });\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [username, roomId, files]);\n\n  // Main initialization effect\n  useEffect(() => {\n    if (!roomId) {\n      navigate('/room');\n      return;\n    }\n    const initialize = async () => {\n      try {\n        // First ensure we have username\n        if (!username) return;\n\n        // Then fetch files\n        await fetchFiles();\n\n        // Then initialize socket\n        initializeSocket();\n\n        // Store username for future use\n        localStorage.setItem('username', username);\n      } catch (error) {\n        console.error('Initialization error:', error);\n        setConnectionStatus('Initialization failed. Please refresh.');\n      }\n    };\n    initialize();\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [roomId, username, fetchFiles, initializeSocket, navigate]);\n  const handleCodeChange = value => {\n    if (!value) value = '';\n    setFiles(prev => ({\n      ...prev,\n      [activeFile]: value\n    }));\n\n    // Emit to socket if connected\n    if (socketRef.current && isConnected) {\n      socketRef.current.emit('code-change', {\n        roomId,\n        filePath: activeFile,\n        code: value\n      });\n    }\n\n    // Save to backend (debounced)\n    debouncedSave(roomId, activeFile, value);\n  };\n  const handleEditorMount = editor => {\n    editorRef.current = editor;\n  };\n  const handleRun = () => {\n    const html = files['index.html'] || '';\n    const css = files['style.css'] || '';\n    const js = files['script.js'] || '';\n    const combined = `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <style>${css}</style>\n        </head>\n        <body>\n          ${html}\n          <script>${js}</script>\n        </body>\n      </html>\n    `;\n    if (iframeRef.current) {\n      const blob = new Blob([combined], {\n        type: 'text/html'\n      });\n      const url = URL.createObjectURL(blob);\n      iframeRef.current.src = url;\n\n      // Clean up previous blob URL\n      setTimeout(() => URL.revokeObjectURL(url), 1000);\n    }\n  };\n  const getLanguage = file => {\n    if (file.endsWith('.js')) return 'javascript';\n    if (file.endsWith('.html')) return 'html';\n    if (file.endsWith('.css')) return 'css';\n    return 'plaintext';\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading editor...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: connectionStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(FileSidebar, {\n        files: Object.keys(files),\n        activeFile: activeFile,\n        setActiveFile: setActiveFile,\n        onAddFile: filename => {\n          if (!files[filename]) {\n            const newFiles = {\n              ...files,\n              [filename]: ''\n            };\n            setFiles(newFiles);\n            setActiveFile(filename);\n            debouncedSave(roomId, filename, '');\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Room:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), \" \", roomId, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Welcome, \", username, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `connection-status ${isConnected ? 'connected' : 'disconnected'}`,\n            children: isConnected ? '● Connected' : `● ${connectionStatus}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"run-button\",\n          onClick: handleRun,\n          children: \"Run \\u25B6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        height: \"50vh\",\n        language: getLanguage(activeFile),\n        value: files[activeFile] || \"\",\n        onChange: handleCodeChange,\n        onMount: handleEditorMount,\n        theme: \"vs-dark\",\n        options: {\n          minimap: {\n            enabled: false\n          },\n          fontSize: 14,\n          wordWrap: 'on',\n          automaticLayout: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-panel\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          ref: iframeRef,\n          title: \"Output Preview\",\n          className: \"output-frame\",\n          sandbox: \"allow-scripts allow-same-origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n\n// Simple debounce function\n_s(EditorPage, \"bRNW2C/CfDXm5d3Wcs4VSYL+LSw=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = EditorPage;\nfunction debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","useLocation","useParams","useNavigate","Editor","io","FileSidebar","jsxDEV","_jsxDEV","EditorPage","_s","roomId","location","navigate","socketRef","username","setUsername","files","setFiles","activeFile","setActiveFile","isLoading","setIsLoading","isConnected","setIsConnected","connectionStatus","setConnectionStatus","editorRef","iframeRef","user","state","localStorage","getItem","debouncedSave","debounce","filename","content","response","fetch","method","headers","body","JSON","stringify","ok","Error","err","console","error","fetchFiles","status","defaultFiles","Promise","all","Object","entries","map","data","json","keys","length","setTimeout","initializeSocket","current","disconnect","transports","upgrade","reconnectionAttempts","reconnectionDelay","on","log","emit","filePath","code","prev","attempt","initialize","setItem","handleCodeChange","value","handleEditorMount","editor","handleRun","html","css","js","combined","blob","Blob","type","url","URL","createObjectURL","src","revokeObjectURL","getLanguage","file","endsWith","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddFile","newFiles","onClick","height","language","onChange","onMount","theme","options","minimap","enabled","fontSize","wordWrap","automaticLayout","ref","title","sandbox","_c","func","wait","timeout","executedFunction","args","later","clearTimeout","$RefreshReg$"],"sources":["D:/realtime-code-editor/client/src/pages/EditorPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { useLocation, useParams, useNavigate } from 'react-router-dom';\r\nimport Editor from '@monaco-editor/react';\r\nimport { io } from 'socket.io-client';\r\nimport FileSidebar from '../components/FileSidebar';\r\nimport '../styles/editor.css';\r\n\r\nfunction EditorPage() {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const socketRef = useRef(null);\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [files, setFiles] = useState({\r\n    'index.html': '<!-- HTML file -->\\n',\r\n    'style.css': '/* CSS file */\\n',\r\n    'script.js': '// JS file\\n',\r\n  });\r\n  const [activeFile, setActiveFile] = useState('index.html');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [connectionStatus, setConnectionStatus] = useState('Connecting...');\r\n  const editorRef = useRef(null);\r\n  const iframeRef = useRef(null);\r\n\r\n  // Initialize username from various sources\r\n  useEffect(() => {\r\n    const user = (location.state && location.state.username) ||\r\n                 localStorage.getItem('username') ||\r\n                 'Guest';\r\n    setUsername(user);\r\n  }, [location.state]);\r\n\r\n  // Debounced save function\r\n  const debouncedSave = useCallback(\r\n    debounce(async (roomId, filename, content) => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/code/save', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ roomId, filename, content }),\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error('Failed to save file');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error saving file:', err);\r\n      }\r\n    }, 1000),\r\n    []\r\n  );\r\n\r\n  // Fetch files from backend\r\n  const fetchFiles = useCallback(async () => {\r\n    if (!roomId) return;\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(`http://localhost:5000/api/code/${roomId}`);\r\n      \r\n      if (!response.ok) {\r\n        if (response.status === 404) {\r\n          // Initialize with default files if room doesn't exist\r\n          const defaultFiles = {\r\n            'index.html': '<!-- HTML file -->\\n',\r\n            'style.css': '/* CSS file */\\n',\r\n            'script.js': '// JS file\\n',\r\n          };\r\n          \r\n          // Save defaults to DB\r\n          await Promise.all(\r\n            Object.entries(defaultFiles).map(([filename, content]) =>\r\n              debouncedSave(roomId, filename, content)\r\n            )\r\n          );\r\n          \r\n          setFiles(defaultFiles);\r\n          setActiveFile('index.html');\r\n          return;\r\n        }\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (Object.keys(data).length > 0) {\r\n        setFiles(data);\r\n        setActiveFile(Object.keys(data)[0] || 'index.html');\r\n      } else {\r\n        // Handle empty response\r\n        const defaultFiles = {\r\n          'index.html': '<!-- HTML file -->\\n',\r\n          'style.css': '/* CSS file */\\n',\r\n          'script.js': '// JS file\\n',\r\n        };\r\n        setFiles(defaultFiles);\r\n        setActiveFile('index.html');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading files:', error);\r\n      setConnectionStatus('Failed to load files. Trying again...');\r\n      // Retry after delay\r\n      setTimeout(() => fetchFiles(), 2000);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [roomId, debouncedSave]);\r\n\r\n  // Initialize socket connection\r\n  const initializeSocket = useCallback(() => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n    }\r\n\r\n    socketRef.current = io('http://localhost:5000', {\r\n      transports: ['websocket'],\r\n      upgrade: false,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n    });\r\n\r\n    socketRef.current.on('connect', () => {\r\n      console.log('Socket connected');\r\n      setIsConnected(true);\r\n      setConnectionStatus('Connected');\r\n      \r\n      if (username && roomId) {\r\n        socketRef.current.emit('join-room', { \r\n          roomId, \r\n          username,\r\n          files // Send current files state to sync with others\r\n        });\r\n      }\r\n    });\r\n\r\n    socketRef.current.on('disconnect', () => {\r\n      console.log('Socket disconnected');\r\n      setIsConnected(false);\r\n      setConnectionStatus('Disconnected. Reconnecting...');\r\n    });\r\n\r\n    socketRef.current.on('receive-code', ({ filePath, code }) => {\r\n      console.log('Received code update:', filePath);\r\n      setFiles((prev) => ({\r\n        ...prev,\r\n        [filePath]: code,\r\n      }));\r\n    });\r\n\r\n    socketRef.current.on('connect_error', (error) => {\r\n      console.error('Socket connection error:', error);\r\n      setIsConnected(false);\r\n      setConnectionStatus('Connection error. Retrying...');\r\n    });\r\n\r\n    socketRef.current.io.on('reconnect', (attempt) => {\r\n      console.log(`Reconnected after ${attempt} attempts`);\r\n      setIsConnected(true);\r\n      setConnectionStatus('Connected');\r\n      if (username && roomId) {\r\n        socketRef.current.emit('join-room', { roomId, username });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, [username, roomId, files]);\r\n\r\n  // Main initialization effect\r\n  useEffect(() => {\r\n    if (!roomId) {\r\n      navigate('/room');\r\n      return;\r\n    }\r\n\r\n    const initialize = async () => {\r\n      try {\r\n        // First ensure we have username\r\n        if (!username) return;\r\n        \r\n        // Then fetch files\r\n        await fetchFiles();\r\n        \r\n        // Then initialize socket\r\n        initializeSocket();\r\n        \r\n        // Store username for future use\r\n        localStorage.setItem('username', username);\r\n      } catch (error) {\r\n        console.error('Initialization error:', error);\r\n        setConnectionStatus('Initialization failed. Please refresh.');\r\n      }\r\n    };\r\n\r\n    initialize();\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, [roomId, username, fetchFiles, initializeSocket, navigate]);\r\n\r\n  const handleCodeChange = (value) => {\r\n    if (!value) value = '';\r\n    \r\n    setFiles((prev) => ({ ...prev, [activeFile]: value }));\r\n\r\n    // Emit to socket if connected\r\n    if (socketRef.current && isConnected) {\r\n      socketRef.current.emit('code-change', {\r\n        roomId,\r\n        filePath: activeFile,\r\n        code: value,\r\n      });\r\n    }\r\n\r\n    // Save to backend (debounced)\r\n    debouncedSave(roomId, activeFile, value);\r\n  };\r\n\r\n  const handleEditorMount = (editor) => {\r\n    editorRef.current = editor;\r\n  };\r\n\r\n  const handleRun = () => {\r\n    const html = files['index.html'] || '';\r\n    const css = files['style.css'] || '';\r\n    const js = files['script.js'] || '';\r\n\r\n    const combined = `\r\n      <!DOCTYPE html>\r\n      <html>\r\n        <head>\r\n          <style>${css}</style>\r\n        </head>\r\n        <body>\r\n          ${html}\r\n          <script>${js}</script>\r\n        </body>\r\n      </html>\r\n    `;\r\n\r\n    if (iframeRef.current) {\r\n      const blob = new Blob([combined], { type: 'text/html' });\r\n      const url = URL.createObjectURL(blob);\r\n      iframeRef.current.src = url;\r\n      \r\n      // Clean up previous blob URL\r\n      setTimeout(() => URL.revokeObjectURL(url), 1000);\r\n    }\r\n  };\r\n\r\n  const getLanguage = (file) => {\r\n    if (file.endsWith('.js')) return 'javascript';\r\n    if (file.endsWith('.html')) return 'html';\r\n    if (file.endsWith('.css')) return 'css';\r\n    return 'plaintext';\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"editor-wrapper\">\r\n        <div className=\"loading-screen\">\r\n          <div>Loading editor...</div>\r\n          <div>{connectionStatus}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"editor-wrapper\">\r\n      <div className=\"sidebar\">\r\n        <FileSidebar\r\n          files={Object.keys(files)}\r\n          activeFile={activeFile}\r\n          setActiveFile={setActiveFile}\r\n          onAddFile={(filename) => {\r\n            if (!files[filename]) {\r\n              const newFiles = { ...files, [filename]: '' };\r\n              setFiles(newFiles);\r\n              setActiveFile(filename);\r\n              debouncedSave(roomId, filename, '');\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"main-editor\">\r\n        <div className=\"editor-header\">\r\n          <div>\r\n            <strong>Room:</strong> {roomId}\r\n            <br />\r\n            <span>Welcome, {username}!</span>\r\n            <br />\r\n            <span className={`connection-status ${isConnected ? 'connected' : 'disconnected'}`}>\r\n              {isConnected ? '● Connected' : `● ${connectionStatus}`}\r\n            </span>\r\n          </div>\r\n          <button className=\"run-button\" onClick={handleRun}>\r\n            Run ▶\r\n          </button>\r\n        </div>\r\n\r\n        <Editor\r\n          height=\"50vh\"\r\n          language={getLanguage(activeFile)}\r\n          value={files[activeFile] || \"\"}\r\n          onChange={handleCodeChange}\r\n          onMount={handleEditorMount}\r\n          theme=\"vs-dark\"\r\n          options={{\r\n            minimap: { enabled: false },\r\n            fontSize: 14,\r\n            wordWrap: 'on',\r\n            automaticLayout: true,\r\n          }}\r\n        />\r\n\r\n        <div className=\"output-panel\">\r\n          <iframe\r\n            ref={iframeRef}\r\n            title=\"Output Preview\"\r\n            className=\"output-frame\"\r\n            sandbox=\"allow-scripts allow-same-origin\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Simple debounce function\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}\r\n\r\nexport default EditorPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}